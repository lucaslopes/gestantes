[
  {
    "objectID": "README.html",
    "href": "README.html",
    "title": "Introdução",
    "section": "",
    "text": "Contexto\nNo Brasil, 98% dos partos ocorrem em ambiente hospitalar, e 77% no Sistema Único de Saúde (SUS). O acesso oportuno aos serviços obstétricos de internação para o parto é fundamental para garantir a segurança do cuidado materno e neonatal. Entretanto, há “vazios assistenciais” na oferta de serviços hospitalares pelo SUS que fazem com que grande parte das parturientes precise se deslocar de um município a outro para ser assistida.\nO retardo na atenção obstétrica no momento do parto está associado à desfechos maternos adversos, e o deslocamento de grandes distâncias tem sido associado a níveis elevados de mortalidade infantil e neonatal, além de maior risco de morbimortalidade materna. Assim, a análise da distância percorrida pelas parturientes de sua residência até o hospital é um indicador útil e sensível para avaliar a dificuldade em acessar cuidados maternos e neonatais no SUS.\nA análise da acessibilidade geográfica é um componente importante da avaliação de serviços de saúde e reflete aspectos da distribuição espacial da oferta de serviços que dificultam ou promovem sua utilização. A metodologia de análise de redes sociais (ARS) tem sido utilizada nesse contexto, incluindo a internação para o parto, e também como ferramenta para gestão em saúde.\nEste projeto tem o objetivo de analisar a acessibilidade geográfica ao parto hospitalar realizado no SUS nos últimos 10 anos, em todo Brasil, aplicando a ARS como uma nova ferramenta para a gestão de serviços de saúde. Serão utilizados dados do Departamento de Informática do SUS (DATASUS) para a construção das redes de deslocamento das gestantes em busca de internação para o parto, levando-se em conta as distâncias percorridas, mapeando fluxos preferenciais e identificando lacunas geográficas de atendimento e polos de atração de maior demanda, como medida de inequidade no acesso aos serviços. O projeto avança no processo de avaliação do sistema de saúde ao desenvolver novos indicadores de acesso à serviços obstétricos, baseados em uma metodologia inovadora, e com abrangência nacional e aplicabilidade a outras áreas de saúde pública.\nEspera-se, com este estudo, gerar evidências que permitam um melhor entendimento da organização e das fragilidades do SUS na assistência à saúde da mulher no ciclo gravídico-puerperal, contribuindo para o planejamento da atenção obstétrica e para o fortalecimento de políticas públicas voltadas para melhoria do acesso aos serviços de saúde."
  },
  {
    "objectID": "sections/database_dists.html",
    "href": "sections/database_dists.html",
    "title": "Distâncias",
    "section": "",
    "text": "Descrição\nThis working paper describes the methodological procedure for calculating distances and travel time between the 5,570 Brazilian municipalities using the APIs from Google Maps (Application Programming Interface) and, mainly, OpenStreet Maps. This is an update of the results of Carvalho et at. (2016). The data generated by this work provide relevant information that can be used by other academic works with the most diverse applications, such as, for example, applications in regional economics, dynamic allocation models, operational research, spatial econometrics or general equilibrium models. Therefore, the main objective of this work is to build a database that can be used in several applied studies.\nhttps://ideas.repec.org/p/cdp/texdis/td630.html\n\n\nTabela\n\npath_dist = get_path('DISTANCIAS', 'matriz_distancias.zip')\ndf_dist = dt.fread(path_dist)\ndf_dist\n\n\n\n  \n  \n    origemdestinodistanciatempo\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    011000111000100\n    1110001110002309.056.16906\n    2110001110003399.56.28906\n    311000111000481.20111.91775\n    4110001110005391.7046.13636\n    5110001110006353.4175.53989\n    6110001110007313.5926.18117\n    7110001110008326.9835.34175\n    8110001110009145.6782.346\n    9110001110010649.54513.405\n    10110001110011214.1253.83481\n    11110001110012130.772.54781\n    12110001110013357.5117.13067\n    1311000111001460.21031.02275\n    14110001110015172.9263.18425\n    ⋮⋮⋮⋮⋮\n    31,024,895530010522200161.7292.356\n    31,024,896530010522205382.7095.47956\n    31,024,897530010522220161.6032.24894\n    31,024,898530010522230190.0013.21608\n    31,024,89953001053001000\n  \n  \n  \n    31,024,900 rows × 4 columns\n  \n\n\n\n\n\nExportar tabela\n\noutput_dist = path_dist.replace('zip', 'jay')\ndf_dist.to_jay(output_dist)\n\n\ndf_dist = dt.fread(output_dist)\ndf_dist\n\n\n\n  \n  \n    origemdestinodistanciatempo\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    011000111000100\n    1110001110002309.056.16906\n    2110001110003399.56.28906\n    311000111000481.20111.91775\n    4110001110005391.7046.13636\n    5110001110006353.4175.53989\n    6110001110007313.5926.18117\n    7110001110008326.9835.34175\n    8110001110009145.6782.346\n    9110001110010649.54513.405\n    10110001110011214.1253.83481\n    11110001110012130.772.54781\n    12110001110013357.5117.13067\n    1311000111001460.21031.02275\n    14110001110015172.9263.18425\n    ⋮⋮⋮⋮⋮\n    31,024,895530010522200161.7292.356\n    31,024,896530010522205382.7095.47956\n    31,024,897530010522220161.6032.24894\n    31,024,898530010522230190.0013.21608\n    31,024,89953001053001000\n  \n  \n  \n    31,024,900 rows × 4 columns"
  },
  {
    "objectID": "sections/database_sih.html",
    "href": "sections/database_sih.html",
    "title": "SIH",
    "section": "",
    "text": "from utils import data_load\nfrom datatable import dt, f"
  },
  {
    "objectID": "sections/database_sih.html#filtro-de-colunas",
    "href": "sections/database_sih.html#filtro-de-colunas",
    "title": "SIH",
    "section": "Filtro de Colunas",
    "text": "Filtro de Colunas\n\ncols_sih = {\n  # Infomações do procedimento:\n  'ano_internacao': 'ano',\n  'PROC_REA': 'parto_normal',\n  'CNES': 'cnes',\n  # Infomações da gestante:\n  'def_idade_anos': 'idade',\n  # Infomações de localidade do hospital de interção:\n  'int_codigo_adotado': 'hosp_cod_municipio',\n  'int_RSAUDCOD': 'hosp_regiao_saude',\n  # Infomações de localidade da residência:\n  'res_codigo_adotado': 'cod_municipio', # Armazena o código atribuído ao município de residência atualmente, tratando os casos em que múltiplos códigos tenham sido utilizados para um mesmo município ao longo do tempo\n  'res_REGIAO': 'regiao', # Nome da região da unidade da federação de residência\n  'res_SIGLA_UF': 'uf', # Sigla da unidade da federação de residência\n  'res_CODIGO_UF': 'cod_uf', # Código da UF de residência\n  'res_NOME_UF': 'nome_uf', # Nome da unidade da federação de residência\n  'res_MUNNOME': 'municipio', # Nome do município de residência\n  'res_MUNNOMEX': 'nome_municipio', # Nome do município de residência em maiúsculas e sem acentos\n  'res_CAPITAL': 'capital', # Indica (S/N) se o município de residência é capital de UF\n  'res_FRONTEIRA': 'fronteira', # Indica (S/N) se o município de residência faz parte da faixa de fronteira (conforme IBGE)\n  'res_AMAZONIA': 'amazonia', # Indica (S/N) se o município de residência faz parte da Amazônia Legal (conforme IBGE)\n  'res_MSAUDCOD': 'macroregiao_saude', # Código da Macrorregional de Saúde a que o Município de residência pertence\n  'res_RSAUDCOD': 'regiao_saude', # Código da Regional de Saúde a que o Município de residência pertence\n  'def_rsaud_res': 'nome_regiao_saude', # Nome da Região de saúde de residência do paciente\n  'res_CSAUDCOD': 'microregiao_saude', # Código da Microrregional de Saúde a que o Município de residência pertence\n  'res_LATITUDE': 'latitude', # Latitude do município de residência\n  'res_LONGITUDE': 'longitude', # Longitude do município de residência\n  'res_ALTITUDE': 'altitude', # Altitude do município de residência\n  'res_AREA': 'area', # Área do município de residência\n}"
  },
  {
    "objectID": "sections/database_sih.html#filtro-de-linhas",
    "href": "sections/database_sih.html#filtro-de-linhas",
    "title": "SIH",
    "section": "Filtro de Linhas",
    "text": "Filtro de Linhas\n\ndef filter_sih(df, cols):\n  cols = list(cols.values())[:-1]\n  cols = [c for c in cols if c in df.names]\n  df_filtered = df[\n    (\n      (f['ano'] > 2009) & (f['ano'] < 2020)\n    ) & (\n      (f['idade'] > 9) & (f['idade'] < 50)\n    ) & (\n      (f['parto_normal'] == 310010039) | (f['parto_normal'] == 411010034)\n    ) & (\n      (f['cnes'] != None)\n    ) & (\n      (f['uf'] != 'DF')\n    ) & (\n      (f['regiao_saude'] != None)\n    ) & (\n      (f['hosp_regiao_saude'] != None)\n    ) & (\n      (f['cod_municipio'] != None)\n    ), cols]\n  return df_filtered"
  },
  {
    "objectID": "sections/database_socioecon.html",
    "href": "sections/database_socioecon.html",
    "title": "Socioeconômico",
    "section": "",
    "text": "Descrição\nEntre os desafios mais urgentes do Sistema Único de Saúde (SUS) estão a ampliação do acesso e a adequação dos serviços ofertados. No Brasil, as relações existentes entre regiões e redes de atenção à saúde indicam que o avanço do processo de regionalização do SUS pode interferir positivamente na oferta de ações de serviços de saúde, tornando-a mais eficiente e abrangente.\nSaiba mais\nDownload\n\n\nTabela\n\npath_socioeco = get_path('HEALTH', 'health_regions.csv')\ndf_socioeco = dt.fread(path_socioeco)\ndf_socioeco\n\n\n\n  \n  \n    UFMunicípioCód IBGECód Região de SaúdeNome da Região de SaúdeGrupo\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    0ACAcrelândia12000112002Baixo Acre e Purus2\n    1ACAssis Brasil12000512001Alto Acre1\n    2ACBrasiléia12001012001Alto Acre1\n    3ACBujari12001312002Baixo Acre e Purus2\n    4ACCapixaba12001712002Baixo Acre e Purus2\n    5ACCruzeiro do Sul12002012003Juruá e Tarauacá/Envira1\n    6ACEpitaciolândia12002512001Alto Acre1\n    7ACFeijó12003012003Juruá e Tarauacá/Envira1\n    8ACJordão12003212002Baixo Acre e Purus2\n    9ACMâncio Lima12003312003Juruá e Tarauacá/Envira1\n    10ACManoel Urbano12003412002Baixo Acre e Purus2\n    11ACMarechal Thaumaturgo12003512003Juruá e Tarauacá/Envira1\n    12ACPlácido de Castro12003812002Baixo Acre e Purus2\n    13ACPorto Acre12008012002Baixo Acre e Purus2\n    14ACPorto Walter12003912003Juruá e Tarauacá/Envira1\n    ⋮⋮⋮⋮⋮⋮⋮\n    5566TOTocantinópolis17212017002Bico do Papagaio1\n    5567TOTupirama17212517004Cerrado Tocantins Araguaia2\n    5568TOTupiratins17213017004Cerrado Tocantins Araguaia2\n    5569TOWanderlândia17220817001Médio Norte Araguaia3\n    5570TOXambioá17221017001Médio Norte Araguaia3\n  \n  \n  \n    5571 rows × 6 columns"
  },
  {
    "objectID": "sections/deslc_uf.html",
    "href": "sections/deslc_uf.html",
    "title": "Deslocamento de Gestantes",
    "section": "",
    "text": "output_deslc = get_path('GESTANTES', 'deslocamentos.csv.gzip')\ndf_deslc = pd.read_csv(output_deslc)\ndf_deslc\n\n\n\n\n\n  \n    \n      \n      bienio\n      parto_normal\n      origem\n      destino\n      mun_diff\n      regsau_diff\n      distancia\n      tempo\n      regiao\n      uf\n      regiao_saude\n      capital\n      socioecon\n      latitude\n      longitude\n      hosp_latitude\n      hosp_longitude\n      hosp_regiao_saude\n      count\n    \n  \n  \n    \n      0\n      0\n      1\n      355030\n      355030\n      0\n      0\n      0.0000\n      0.000000\n      Sudeste\n      SP\n      3501\n      S\n      5\n      -23.548\n      -46.636\n      -23.548\n      -46.636\n      3501\n      2368\n    \n    \n      1\n      0\n      0\n      355030\n      355030\n      0\n      0\n      0.0000\n      0.000000\n      Sudeste\n      SP\n      3501\n      S\n      5\n      -23.548\n      -46.636\n      -23.548\n      -46.636\n      3501\n      2020\n    \n    \n      2\n      0\n      1\n      330455\n      330455\n      0\n      0\n      0.0000\n      0.000000\n      Sudeste\n      RJ\n      3305\n      S\n      5\n      -22.903\n      -43.208\n      -22.903\n      -43.208\n      3305\n      1210\n    \n    \n      3\n      0\n      0\n      330455\n      330455\n      0\n      0\n      0.0000\n      0.000000\n      Sudeste\n      RJ\n      3305\n      S\n      5\n      -22.903\n      -43.208\n      -22.903\n      -43.208\n      3305\n      872\n    \n    \n      4\n      0\n      0\n      230440\n      230440\n      0\n      0\n      0.0000\n      0.000000\n      Nordeste\n      CE\n      2301\n      S\n      5\n      -3.717\n      -38.543\n      -3.717\n      -38.543\n      2301\n      727\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      98050\n      1\n      1\n      521520\n      530010\n      1\n      1\n      404.5716\n      5.640306\n      Centro-Oeste\n      GO\n      5204\n      N\n      3\n      -16.034\n      -50.711\n      NaN\n      NaN\n      5301\n      1\n    \n    \n      98051\n      1\n      1\n      521530\n      530010\n      1\n      1\n      199.0211\n      3.018722\n      Centro-Oeste\n      GO\n      5202\n      N\n      3\n      -17.031\n      -48.296\n      NaN\n      NaN\n      5301\n      1\n    \n    \n      98052\n      1\n      1\n      521910\n      530010\n      1\n      1\n      252.2821\n      3.752167\n      Centro-Oeste\n      GO\n      5201\n      N\n      5\n      -16.574\n      -49.694\n      NaN\n      NaN\n      5301\n      1\n    \n    \n      98053\n      1\n      1\n      521971\n      530010\n      1\n      1\n      394.2609\n      5.361000\n      Centro-Oeste\n      GO\n      5213\n      N\n      3\n      -17.561\n      -50.634\n      NaN\n      NaN\n      5301\n      1\n    \n    \n      98054\n      1\n      1\n      522010\n      530010\n      1\n      1\n      328.4170\n      4.917472\n      Centro-Oeste\n      GO\n      5205\n      N\n      2\n      -16.525\n      -50.372\n      NaN\n      NaN\n      5301\n      1\n    \n  \n\n98055 rows × 19 columns\n\n\n\n\n# df_deslc.to_excel(output_deslc.replace('csv.gzip', 'xlsx'), index=False)\n\n\ndf_deslc.info()\n\n<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 98055 entries, 0 to 98054\nData columns (total 19 columns):\n #   Column             Non-Null Count  Dtype  \n---  ------             --------------  -----  \n 0   bienio             98055 non-null  int64  \n 1   parto_normal       98055 non-null  int64  \n 2   origem             98055 non-null  int64  \n 3   destino            98055 non-null  int64  \n 4   mun_diff           98055 non-null  int64  \n 5   regsau_diff        98055 non-null  int64  \n 6   distancia          98055 non-null  float64\n 7   tempo              98055 non-null  float64\n 8   regiao             98055 non-null  object \n 9   uf                 98055 non-null  object \n 10  regiao_saude       98055 non-null  int64  \n 11  capital            98055 non-null  object \n 12  socioecon          98055 non-null  int64  \n 13  latitude           98024 non-null  float64\n 14  longitude          98024 non-null  float64\n 15  hosp_latitude      97696 non-null  float64\n 16  hosp_longitude     97696 non-null  float64\n 17  hosp_regiao_saude  98055 non-null  int64  \n 18  count              98055 non-null  int64  \ndtypes: float64(6), int64(10), object(3)\nmemory usage: 14.2+ MB\n\n\n\nregioes = df_deslc['regiao'].unique()\nregioes\n\narray(['Sudeste', 'Nordeste', 'Norte', 'Centro-Oeste', 'Sul'],\n      dtype=object)\n\n\n\ndesc_regiao = dict()\nfor regiao in regioes:\n  desc_regiao[regiao] = df_deslc[df_deslc['regiao'] == regiao]\n\n\ndesc_regiao[regioes[0]]\n\n\n\n\n\n  \n    \n      \n      bienio\n      parto_normal\n      origem\n      destino\n      mun_diff\n      regsau_diff\n      distancia\n      tempo\n      regiao\n      uf\n      regiao_saude\n      capital\n      socioecon\n      latitude\n      longitude\n      hosp_latitude\n      hosp_longitude\n      hosp_regiao_saude\n      count\n    \n  \n  \n    \n      0\n      0\n      1\n      355030\n      355030\n      0\n      0\n      0.0000\n      0.000000\n      Sudeste\n      SP\n      3501\n      S\n      5\n      -23.548\n      -46.636\n      -23.548\n      -46.636\n      3501\n      2368\n    \n    \n      1\n      0\n      0\n      355030\n      355030\n      0\n      0\n      0.0000\n      0.000000\n      Sudeste\n      SP\n      3501\n      S\n      5\n      -23.548\n      -46.636\n      -23.548\n      -46.636\n      3501\n      2020\n    \n    \n      2\n      0\n      1\n      330455\n      330455\n      0\n      0\n      0.0000\n      0.000000\n      Sudeste\n      RJ\n      3305\n      S\n      5\n      -22.903\n      -43.208\n      -22.903\n      -43.208\n      3305\n      1210\n    \n    \n      3\n      0\n      0\n      330455\n      330455\n      0\n      0\n      0.0000\n      0.000000\n      Sudeste\n      RJ\n      3305\n      S\n      5\n      -22.903\n      -43.208\n      -22.903\n      -43.208\n      3305\n      872\n    \n    \n      14\n      0\n      1\n      310620\n      310620\n      0\n      0\n      0.0000\n      0.000000\n      Sudeste\n      MG\n      3101\n      S\n      1\n      -19.817\n      -43.956\n      -19.817\n      -43.956\n      3101\n      466\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      98028\n      1\n      1\n      320130\n      530010\n      1\n      1\n      1249.2260\n      16.386222\n      Sudeste\n      ES\n      3201\n      N\n      5\n      -20.264\n      -40.420\n      NaN\n      NaN\n      5301\n      1\n    \n    \n      98029\n      1\n      1\n      320500\n      530010\n      1\n      1\n      1279.3782\n      16.920444\n      Sudeste\n      ES\n      3201\n      N\n      5\n      -20.129\n      -40.308\n      NaN\n      NaN\n      5301\n      1\n    \n    \n      98030\n      1\n      1\n      350050\n      530010\n      1\n      1\n      942.2441\n      11.865583\n      Sudeste\n      SP\n      3512\n      N\n      5\n      -22.476\n      -46.633\n      NaN\n      NaN\n      5301\n      1\n    \n    \n      98031\n      1\n      1\n      351380\n      530010\n      1\n      1\n      1023.7805\n      12.794750\n      Sudeste\n      SP\n      3502\n      N\n      5\n      -23.686\n      -46.623\n      NaN\n      NaN\n      5301\n      1\n    \n    \n      98032\n      1\n      1\n      353060\n      530010\n      1\n      1\n      1060.6226\n      13.161472\n      Sudeste\n      SP\n      3503\n      N\n      4\n      -23.523\n      -46.188\n      NaN\n      NaN\n      5301\n      1\n    \n  \n\n26607 rows × 19 columns\n\n\n\n\ndesc_regiao[regioes[0]].info()\n\n<class 'pandas.core.frame.DataFrame'>\nInt64Index: 26607 entries, 0 to 98032\nData columns (total 19 columns):\n #   Column             Non-Null Count  Dtype  \n---  ------             --------------  -----  \n 0   bienio             26607 non-null  int64  \n 1   parto_normal       26607 non-null  int64  \n 2   origem             26607 non-null  int64  \n 3   destino            26607 non-null  int64  \n 4   mun_diff           26607 non-null  int64  \n 5   regsau_diff        26607 non-null  int64  \n 6   distancia          26607 non-null  float64\n 7   tempo              26607 non-null  float64\n 8   regiao             26607 non-null  object \n 9   uf                 26607 non-null  object \n 10  regiao_saude       26607 non-null  int64  \n 11  capital            26607 non-null  object \n 12  socioecon          26607 non-null  int64  \n 13  latitude           26607 non-null  float64\n 14  longitude          26607 non-null  float64\n 15  hosp_latitude      26527 non-null  float64\n 16  hosp_longitude     26527 non-null  float64\n 17  hosp_regiao_saude  26607 non-null  int64  \n 18  count              26607 non-null  int64  \ndtypes: float64(6), int64(10), object(3)\nmemory usage: 4.1+ MB\n\n\n\ndf_deslc['uf'].value_counts()\n\nMG    11776\nSP    10553\nBA     9878\nPE     7325\nRS     6476\nMA     5363\nPR     5329\nSC     4268\nPA     4137\nPB     3672\nGO     3649\nCE     3583\nPI     3242\nRN     3102\nRJ     2486\nMT     2184\nTO     2153\nAL     1888\nES     1792\nMS     1271\nSE     1263\nRO     1141\nAM      832\nAC      292\nAP      229\nRR      171\nName: uf, dtype: int64\n\n\n\ndf_deslc[df_deslc['uf'] == 'MG'].info()\n\n<class 'pandas.core.frame.DataFrame'>\nInt64Index: 11776 entries, 14 to 98027\nData columns (total 19 columns):\n #   Column             Non-Null Count  Dtype  \n---  ------             --------------  -----  \n 0   bienio             11776 non-null  int64  \n 1   parto_normal       11776 non-null  int64  \n 2   origem             11776 non-null  int64  \n 3   destino            11776 non-null  int64  \n 4   mun_diff           11776 non-null  int64  \n 5   regsau_diff        11776 non-null  int64  \n 6   distancia          11776 non-null  float64\n 7   tempo              11776 non-null  float64\n 8   regiao             11776 non-null  object \n 9   uf                 11776 non-null  object \n 10  regiao_saude       11776 non-null  int64  \n 11  capital            11776 non-null  object \n 12  socioecon          11776 non-null  int64  \n 13  latitude           11776 non-null  float64\n 14  longitude          11776 non-null  float64\n 15  hosp_latitude      11715 non-null  float64\n 16  hosp_longitude     11715 non-null  float64\n 17  hosp_regiao_saude  11776 non-null  int64  \n 18  count              11776 non-null  int64  \ndtypes: float64(6), int64(10), object(3)\nmemory usage: 1.8+ MB\n\n\n\n# df_deslc.to_pandas().to_excel(output_deslc.replace('csv.gzip', 'xlsx'), index=False)"
  },
  {
    "objectID": "sections/table_deslc.html",
    "href": "sections/table_deslc.html",
    "title": "Deslocamento",
    "section": "",
    "text": "from utils import get_path, group_cols\nfrom datatable import dt, f"
  },
  {
    "objectID": "sections/table_deslc.html#tabela-procedimentos",
    "href": "sections/table_deslc.html#tabela-procedimentos",
    "title": "Deslocamento",
    "section": "Tabela Procedimentos",
    "text": "Tabela Procedimentos\n\nColunas da tabela\n\ncols_deslc = {\n  'ano': 'ano',\n  'parto_normal': 'parto_normal',\n  'cod_municipio': 'origem',\n  'hosp_cod_municipio': 'destino',\n  'regiao_saude': 'regiao_saude',\n  'hosp_regiao_saude': 'hosp_regiao_saude',\n  'count': 'count',\n  ...: None,\n  # 'cnes',\n  # 'idade'\n}\n\n\n\nLinhas da tabela\n\ndef filter_deslc(df):\n  df_filtered = df[\n    (\n      f.ano == 2010\n    ) | (\n      f.ano == 2011\n    ) | (\n      f.ano == 2018\n    ) | (\n      f.ano == 2019\n    ), :]\n  return df_filtered\n\n\n\nCarregando tabela\n\npath_deslc = get_path('GESTANTES', 'procedimentos.csv.gzip')\ndf_deslc = dt.fread(path_deslc, columns=cols_deslc)\ndf_deslc = filter_deslc(df_deslc)\ndf_deslc\n\n\n\n  \n  \n    anoparto_normaldestinohosp_regiao_saudeorigemregiao_saudecount\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    02010135503035013550303501362\n    12010135503035013550303501333\n    22010135503035013550303501331\n    32010135503035013550303501327\n    42010135503035013550303501318\n    52010135503035013550303501303\n    62010135503035013550303501297\n    72010135503035013550303501296\n    82010135503035013550303501295\n    92010135503035013550303501292\n    102010113026013011302601301288\n    112010113026013011302601301276\n    122010135503035013550303501270\n    132010135503035013550303501269\n    142010113026013011302601301269\n    ⋮⋮⋮⋮⋮⋮⋮⋮\n    1,357,77320190270430270135564035201\n    1,357,77420190270430270142091042131\n    1,357,77520190270430270151028551091\n    1,357,77620190270430270151062251141\n    1,357,77720190270430270151079251141\n  \n  \n  \n    1,357,778 rows × 7 columns\n  \n\n\n\n\n\nAtualizando variável ano (biênio)\nValor da variável bienio:\n\n0 (False) = 2010/11\n1 (True) = 2018/19\n\n\ndf_deslc[:, dt.update(ano = (f.ano == 2018) | (f.ano == 2019))]\ndf_deslc.names = {'ano': 'bienio'}\ndf_deslc\n\n\n\n  \n  \n    bienioparto_normaldestinohosp_regiao_saudeorigemregiao_saudecount\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    00135503035013550303501362\n    10135503035013550303501333\n    20135503035013550303501331\n    30135503035013550303501327\n    40135503035013550303501318\n    50135503035013550303501303\n    60135503035013550303501297\n    70135503035013550303501296\n    80135503035013550303501295\n    90135503035013550303501292\n    100113026013011302601301288\n    110113026013011302601301276\n    120135503035013550303501270\n    130135503035013550303501269\n    140113026013011302601301269\n    ⋮⋮⋮⋮⋮⋮⋮⋮\n    1,357,77310270430270135564035201\n    1,357,77410270430270142091042131\n    1,357,77510270430270151028551091\n    1,357,77610270430270151062251141\n    1,357,77710270430270151079251141\n  \n  \n  \n    1,357,778 rows × 7 columns\n  \n\n\n\n\n\nTabela agrupada\n\ndf_deslc = group_cols(df_deslc, df_deslc.names[:-1])\ndf_deslc = df_deslc.sort(f.bienio, -f.count)\ndf_deslc\n\n\n\n  \n  \n    bienioparto_normaldestinohosp_regiao_saudeorigemregiao_saudecount\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    001355030350135503035012368\n    100355030350135503035012020\n    201330455330533045533051210\n    30033045533053304553305872\n    40023044023012304402301727\n    50123044023012304402301717\n    60115014015011501401501639\n    70015014015011501401501634\n    80052087052015208705201621\n    90113026013011302601301616\n    100152087052015208705201595\n    110013026013011302601301580\n    120129274029012927402901569\n    130029274029012927402901505\n    140131062031013106203101466\n    ⋮⋮⋮⋮⋮⋮⋮⋮\n    98,05011530010530152152052041\n    98,05111530010530152153052021\n    98,05211530010530152191052011\n    98,05311530010530152197152131\n    98,05411530010530152201052051\n  \n  \n  \n    98,055 rows × 7 columns\n  \n\n\n\n\nwith all: 3_355_691 rows\nwithout age: 461_276 rows\nwithout age and cnes: 98_055 rows"
  },
  {
    "objectID": "sections/table_deslc.html#tabela-municípios",
    "href": "sections/table_deslc.html#tabela-municípios",
    "title": "Deslocamento",
    "section": "Tabela Municípios",
    "text": "Tabela Municípios\n\nColunas da tabela\n\ncols_mun = {\n  'cod_municipio': 'origem',\n  'regiao': 'regiao',\n  'uf': 'uf',\n  # 'nome_uf': 'nome_uf',\n  # 'macroregiao_saude': 'macroregiao_saude',\n  # 'regiao_saude': 'regiao_saude',\n  'nome_regiao_saude': 'nome_regiao_saude',\n  # 'microregiao_saude': 'microregiao_saude',\n  'municipio': 'municipio',\n  'capital': 'capital',\n  'latitude': 'latitude',\n  'longitude': 'longitude',\n  'socioecon': 'socioecon',\n  ...: None\n}\n\n\ncols_mun_hosp = {\n  'cod_municipio': 'destino',\n  'latitude': 'hosp_latitude',\n  'longitude': 'hosp_longitude',\n  ...: None\n}\n\n\n\nCarregando tabela\n\npath_mun = get_path('GESTANTES', 'municipios.csv.gzip')\ndf_mun = dt.fread(path_mun, columns=cols_mun)\ndf_mun\n\n\n\n  \n  \n    origemregiaoufmunicipiocapitalnome_regiao_saudelatitudelongitudesocioecon\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    0355030SudesteSPSão PauloSGrande São Paulo−23.548−46.6365\n    1330455SudesteRJRio de JaneiroSMetropolitana I−22.903−43.2085\n    2130260NorteAMManausSEntorno de Manaus−3.102−60.0254\n    3230440NordesteCEFortalezaSFortaleza−3.717−38.5435\n    4292740NordesteBASalvadorSSalvador−12.971−38.5115\n    5150140NortePABelémSMetropolitana−1.456−48.5044\n    6310620SudesteMGBelo HorizonteSBelo Horizonte−19.817−43.9561\n    7431490SulRSPorto AlegreSCRS 01 Porto Alegre−30.033−51.235\n    8410690SulPRCuritibaSMetropolitana−25.428−49.2735\n    9270430NordesteALMaceióSRegião 01−9.666−35.7353\n    10520870Centro-OesteGOGoiâniaSCentral−16.679−49.2545\n    11351880SudesteSPGuarulhosNGrande São Paulo−23.463−46.5334\n    12221100NordestePITeresinaSTD Entre Rios−5.089−42.8023\n    13500270Centro-OesteMSCampo GrandeSNCT de Campo Grande−20.443−54.6464\n    14261160NordestePERecifeSRecife−8.054−34.8815\n    ⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮\n    5564520020Centro-OesteGOÁgua LimpaNSul−18.074−48.7623\n    5565510120Centro-OesteMTAraguainhaNRondonópolis−16.856−53.0332\n    5566350640SudesteSPBilacNAraçatuba−21.403−50.4715\n    5567500627Centro-OesteMSParaíso das ÁguasN−19.0216−53.01164\n    5568330513SudesteRJSão José de UbáNNoroeste−21.358−41.9433\n  \n  \n  \n    5569 rows × 9 columns\n  \n\n\n\n\ndf_mun_hosp = dt.fread(path_mun, columns=cols_mun_hosp)\ndf_mun_hosp\n\n\n\n  \n  \n    destinohosp_latitudehosp_longitude\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    0355030−23.548−46.636\n    1330455−22.903−43.208\n    2130260−3.102−60.025\n    3230440−3.717−38.543\n    4292740−12.971−38.511\n    5150140−1.456−48.504\n    6310620−19.817−43.956\n    7431490−30.033−51.23\n    8410690−25.428−49.273\n    9270430−9.666−35.735\n    10520870−16.679−49.254\n    11351880−23.463−46.533\n    12221100−5.089−42.802\n    13500270−20.443−54.646\n    14261160−8.054−34.881\n    ⋮⋮⋮⋮\n    5564520020−18.074−48.762\n    5565510120−16.856−53.033\n    5566350640−21.403−50.471\n    5567500627−19.0216−53.0116\n    5568330513−21.358−41.943\n  \n  \n  \n    5569 rows × 3 columns"
  },
  {
    "objectID": "sections/table_deslc.html#tabela-distâncias",
    "href": "sections/table_deslc.html#tabela-distâncias",
    "title": "Deslocamento",
    "section": "Tabela Distâncias",
    "text": "Tabela Distâncias\n\nCarregando tabela\n\noutput_dist = get_path('GESTANTES', 'distancias.csv.gzip')\ndf_dist = dt.fread(output_dist)\ndf_dist = df_dist[:, df_dist.names[:-1]]\ndf_dist\n\n\n\n  \n  \n    origemdestinodistanciatempo\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    035503035503000\n    133045533045500\n    223044023044000\n    313026013026000\n    429274029274000\n    515014015014000\n    652087052087000\n    731062031062000\n    843149043149000\n    923037023044016.71610.344111\n    1027043027043000\n    1141069041069000\n    1221113021113000\n    1322110022110000\n    1450027050027000\n    ⋮⋮⋮⋮⋮\n    71,681522220520540443.0895.96508\n    71,682522220521830150.6191.85706\n    71,683522230521830501.827.04144\n    71,684522230521970203.7833.14278\n    71,685522230522045192.8553.10403\n  \n  \n  \n    71,686 rows × 4 columns"
  },
  {
    "objectID": "sections/table_deslc.html#juntando-com-outras",
    "href": "sections/table_deslc.html#juntando-com-outras",
    "title": "Deslocamento",
    "section": "Juntando com outras",
    "text": "Juntando com outras\n\nJuntando com Distâncias\n\ndf_dist.key = ['origem', 'destino']\ndf_deslc = df_deslc[:, :, dt.join(df_dist)]\ndf_dist\n\n\n\n  \n  \n    origemdestinodistanciatempo\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    11000111000100\n    110001110002309.056.16906\n    11000111000481.20111.91775\n    110001110006353.4175.53989\n    110001110009145.6782.346\n    110001110012130.772.54781\n    110001110013357.5117.13067\n    110001110015172.9263.18425\n    110001110018114.0611.87139\n    110001110020505.8569.16514\n    11000111002596.60651.98553\n    11000111002848.60990.835667\n    110001110030297.4554.71864\n    110001110149217.3553.67378\n    110001110150153.3372.8455\n    ⋮⋮⋮⋮\n    522230521560101.5551.65708\n    522230521830501.827.04144\n    522230521970203.7833.14278\n    522230522045192.8553.10403\n    522230530010190.0013.21608\n  \n  \n  \n    71,686 rows × 4 columns\n  \n\n\n\n\n\nJuntando com Municípios (res)\n\ndf_mun.key = 'origem'\ndf_deslc = df_deslc[:, :, dt.join(df_mun)]\ndf_mun\n\n\n\n  \n  \n    origemregiaoufmunicipiocapitalnome_regiao_saudelatitudelongitudesocioecon\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    110001NorteROAlta Floresta D'OesteNII Delegacia Regional de Saúde−11.929−61.9961\n    110002NorteROAriquemesNDepartamento de Epidemiologia−9.913−63.0411\n    110003NorteROCabixiNIII Delegacia Regional de Saúde−13.492−60.5452\n    110004NorteROCacoalNII Delegacia Regional de Saúde−11.438−61.4483\n    110005NorteROCerejeirasNIII Delegacia Regional de Saúde−13.189−60.8122\n    110006NorteROColorado do OesteNIII Delegacia Regional de Saúde−13.117−60.5422\n    110007NorteROCorumbiaraNIII Delegacia Regional de Saúde−12.962−60.8872\n    110008NorteROCosta MarquesNI Delegacia Regional de Saúde−12.445−64.2271\n    110009NorteROEspigão D'OesteNII Delegacia Regional de Saúde−11.525−61.0133\n    110010NorteROGuajará-MirimNDepartamento de Epidemiologia−10.783−65.3393\n    110011NorteROJaruNI Delegacia Regional de Saúde−10.439−62.4662\n    110012NorteROJi-ParanáNI Delegacia Regional de Saúde−10.882−61.9442\n    110013NorteROMachadinho D'OesteNDepartamento de Epidemiologia−9.444−61.9811\n    110014NorteRONova Brasilândia D'OesteNII Delegacia Regional de Saúde−11.725−62.3311\n    110015NorteROOuro Preto do OesteNI Delegacia Regional de Saúde−10.716−62.2482\n    ⋮⋮⋮⋮⋮⋮⋮⋮⋮\n    522190Centro-OesteGOVarjãoNCentro Sul−17.045−49.6313\n    522200Centro-OesteGOVianópolisNCentro Sul−16.742−48.5163\n    522205Centro-OesteGOVicentinópolisNCentro Sul−17.735−49.8063\n    522220Centro-OesteGOVila BoaNEntorno Norte−15.038−47.0592\n    522230Centro-OesteGOVila PropícioNSão Patrício−15.457−48.8892\n  \n  \n  \n    5569 rows × 9 columns\n  \n\n\n\n\n\nJuntando com Municípios (hosp)\n\ndf_mun_hosp.key = 'destino'\ndf_deslc = df_deslc[:, :, dt.join(df_mun_hosp)]\ndf_deslc\n\n\n\n  \n  \n    bienioparto_normaldestinohosp_regiao_saudeorigemregiao_saudecountdistanciatemporegiao…latitudelongitudesocioeconhosp_latitudehosp_longitude\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    00135503035013550303501236800Sudeste…−23.548−46.6365−23.548−46.636\n    10035503035013550303501202000Sudeste…−23.548−46.6365−23.548−46.636\n    20133045533053304553305121000Sudeste…−22.903−43.2085−22.903−43.208\n    3003304553305330455330587200Sudeste…−22.903−43.2085−22.903−43.208\n    4002304402301230440230172700Nordeste…−3.717−38.5435−3.717−38.543\n    5012304402301230440230171700Nordeste…−3.717−38.5435−3.717−38.543\n    6011501401501150140150163900Norte…−1.456−48.5044−1.456−48.504\n    7001501401501150140150163400Norte…−1.456−48.5044−1.456−48.504\n    8005208705201520870520162100Centro-Oeste…−16.679−49.2545−16.679−49.254\n    9011302601301130260130161600Norte…−3.102−60.0254−3.102−60.025\n    10015208705201520870520159500Centro-Oeste…−16.679−49.2545−16.679−49.254\n    11001302601301130260130158000Norte…−3.102−60.0254−3.102−60.025\n    12012927402901292740290156900Nordeste…−12.971−38.5115−12.971−38.511\n    13002927402901292740290150500Nordeste…−12.971−38.5115−12.971−38.511\n    14013106203101310620310146600Sudeste…−19.817−43.9561−19.817−43.956\n    ⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋱⋮⋮⋮⋮⋮\n    98,05011530010530152152052041404.5725.64031Centro-Oeste…−16.034−50.7113NANA\n    98,05111530010530152153052021199.0213.01872Centro-Oeste…−17.031−48.2963NANA\n    98,05211530010530152191052011252.2823.75217Centro-Oeste…−16.574−49.6945NANA\n    98,05311530010530152197152131394.2615.361Centro-Oeste…−17.561−50.6343NANA\n    98,05411530010530152201052051328.4174.91747Centro-Oeste…−16.525−50.3722NANA\n  \n  \n  \n    98,055 rows × 19 columns"
  },
  {
    "objectID": "sections/table_deslc.html#criando-colunas",
    "href": "sections/table_deslc.html#criando-colunas",
    "title": "Deslocamento",
    "section": "Criando colunas",
    "text": "Criando colunas\n\ndf_deslc['mun_diff'] = f.origem != f.destino\ndf_deslc['regsau_diff'] = f.regiao_saude != f.hosp_regiao_saude\ndf_deslc\n\n\n\n  \n  \n    bienioparto_normaldestinohosp_regiao_saudeorigemregiao_saudecountdistanciatemporegiao…socioeconhosp_latitudehosp_longitudemun_diffregsau_diff\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    00135503035013550303501236800Sudeste…5−23.548−46.63600\n    10035503035013550303501202000Sudeste…5−23.548−46.63600\n    20133045533053304553305121000Sudeste…5−22.903−43.20800\n    3003304553305330455330587200Sudeste…5−22.903−43.20800\n    4002304402301230440230172700Nordeste…5−3.717−38.54300\n    5012304402301230440230171700Nordeste…5−3.717−38.54300\n    6011501401501150140150163900Norte…4−1.456−48.50400\n    7001501401501150140150163400Norte…4−1.456−48.50400\n    8005208705201520870520162100Centro-Oeste…5−16.679−49.25400\n    9011302601301130260130161600Norte…4−3.102−60.02500\n    10015208705201520870520159500Centro-Oeste…5−16.679−49.25400\n    11001302601301130260130158000Norte…4−3.102−60.02500\n    12012927402901292740290156900Nordeste…5−12.971−38.51100\n    13002927402901292740290150500Nordeste…5−12.971−38.51100\n    14013106203101310620310146600Sudeste…1−19.817−43.95600\n    ⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋱⋮⋮⋮⋮⋮\n    98,05011530010530152152052041404.5725.64031Centro-Oeste…3NANA11\n    98,05111530010530152153052021199.0213.01872Centro-Oeste…3NANA11\n    98,05211530010530152191052011252.2823.75217Centro-Oeste…5NANA11\n    98,05311530010530152197152131394.2615.361Centro-Oeste…3NANA11\n    98,05411530010530152201052051328.4174.91747Centro-Oeste…2NANA11\n  \n  \n  \n    98,055 rows × 21 columns"
  },
  {
    "objectID": "sections/table_deslc.html#ordenando-colunas",
    "href": "sections/table_deslc.html#ordenando-colunas",
    "title": "Deslocamento",
    "section": "Ordenando colunas",
    "text": "Ordenando colunas\n\ncols_order = [\n  # procedimento:\n  'bienio',\n  'parto_normal',\n  # deslocamento:\n  'origem',\n  'destino',\n  'mun_diff',\n  'regsau_diff',\n  'distancia',\n  'tempo',\n  # localização de residência:\n  'regiao',\n  'uf',\n  # 'nome_uf',\n  # 'macroregiao_saude',\n  'regiao_saude',\n  # 'nome_regiao_saude',\n  # 'microregiao_saude',\n  # 'municipio',\n  'capital',\n  'socioecon',\n  'latitude',\n  'longitude',\n  # localização do hospital:\n  'hosp_latitude',\n  'hosp_longitude',\n  'hosp_regiao_saude',\n  # contagem:\n  'count',\n]\n\n\ndf_deslc = df_deslc[:, cols_order]\ndf_deslc\n\n\n\n  \n  \n    bienioparto_normalorigemdestinomun_diffregsau_diffdistanciatemporegiaouf…longitudehosp_latitudehosp_longitudehosp_regiao_saudecount\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    0013550303550300000SudesteSP…−46.636−23.548−46.63635012368\n    1003550303550300000SudesteSP…−46.636−23.548−46.63635012020\n    2013304553304550000SudesteRJ…−43.208−22.903−43.20833051210\n    3003304553304550000SudesteRJ…−43.208−22.903−43.2083305872\n    4002304402304400000NordesteCE…−38.543−3.717−38.5432301727\n    5012304402304400000NordesteCE…−38.543−3.717−38.5432301717\n    6011501401501400000NortePA…−48.504−1.456−48.5041501639\n    7001501401501400000NortePA…−48.504−1.456−48.5041501634\n    8005208705208700000Centro-OesteGO…−49.254−16.679−49.2545201621\n    9011302601302600000NorteAM…−60.025−3.102−60.0251301616\n    10015208705208700000Centro-OesteGO…−49.254−16.679−49.2545201595\n    11001302601302600000NorteAM…−60.025−3.102−60.0251301580\n    12012927402927400000NordesteBA…−38.511−12.971−38.5112901569\n    13002927402927400000NordesteBA…−38.511−12.971−38.5112901505\n    14013106203106200000SudesteMG…−43.956−19.817−43.9563101466\n    ⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋱⋮⋮⋮⋮⋮\n    98,0501152152053001011404.5725.64031Centro-OesteGO…−50.711NANA53011\n    98,0511152153053001011199.0213.01872Centro-OesteGO…−48.296NANA53011\n    98,0521152191053001011252.2823.75217Centro-OesteGO…−49.694NANA53011\n    98,0531152197153001011394.2615.361Centro-OesteGO…−50.634NANA53011\n    98,0541152201053001011328.4174.91747Centro-OesteGO…−50.372NANA53011\n  \n  \n  \n    98,055 rows × 19 columns"
  },
  {
    "objectID": "sections/table_dists.html",
    "href": "sections/table_dists.html",
    "title": "Distâncias",
    "section": "",
    "text": "from utils import get_path, group_cols\nfrom datatable import dt, f"
  },
  {
    "objectID": "sections/table_dists.html#tabela-distâncias",
    "href": "sections/table_dists.html#tabela-distâncias",
    "title": "Distâncias",
    "section": "Tabela Distâncias",
    "text": "Tabela Distâncias\n\nCarregando tabela\n\npath_dist = get_path('DISTANCIAS', 'matriz_distancias.jay')\ndf_dist = dt.fread(path_dist)\ndf_dist\n\n\n\n  \n  \n    origemdestinodistanciatempo\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    011000111000100\n    1110001110002309.056.16906\n    2110001110003399.56.28906\n    311000111000481.20111.91775\n    4110001110005391.7046.13636\n    5110001110006353.4175.53989\n    6110001110007313.5926.18117\n    7110001110008326.9835.34175\n    8110001110009145.6782.346\n    9110001110010649.54513.405\n    10110001110011214.1253.83481\n    11110001110012130.772.54781\n    12110001110013357.5117.13067\n    1311000111001460.21031.02275\n    14110001110015172.9263.18425\n    ⋮⋮⋮⋮⋮\n    31,024,895530010522200161.7292.356\n    31,024,896530010522205382.7095.47956\n    31,024,897530010522220161.6032.24894\n    31,024,898530010522230190.0013.21608\n    31,024,89953001053001000\n  \n  \n  \n    31,024,900 rows × 4 columns"
  },
  {
    "objectID": "sections/table_dists.html#tabela-procedimentos",
    "href": "sections/table_dists.html#tabela-procedimentos",
    "title": "Distâncias",
    "section": "Tabela Procedimentos",
    "text": "Tabela Procedimentos\n\nColunas da tabela\n\ncols_proc = {\n  'cod_municipio': 'origem',\n  'hosp_cod_municipio': 'destino',\n  ...: None\n}\n\n\n\nCarregando tabela\n\npath_proc = get_path('GESTANTES', 'procedimentos.csv.gzip')\ndf_proc = dt.fread(path_proc, columns=cols_proc)\ndf_proc\n\n\n\n  \n  \n    destinoorigem\n    ▪▪▪▪▪▪▪▪\n  \n  \n    0355030355030\n    1355030355030\n    2355030355030\n    3355030355030\n    4355030355030\n    5355030355030\n    6355030355030\n    7355030355030\n    8355030355030\n    9355030355030\n    10130260130260\n    11130260130260\n    12355030355030\n    13355030355030\n    14130260130260\n    ⋮⋮⋮\n    3,355,686270430355640\n    3,355,687270430420910\n    3,355,688270430510285\n    3,355,689270430510622\n    3,355,690270430510792\n  \n  \n  \n    3,355,691 rows × 2 columns\n  \n\n\n\n\n\nTabela agrupada\n\ndf_proc = group_cols(df_proc, list(cols_proc.values())[:-1])\ndf_proc = df_proc.sort(-f.count)\ndf_proc\n\n\n\n  \n  \n    origemdestinocount\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    035503035503021807\n    13304553304559922\n    22304402304407113\n    31302601302605488\n    42927402927405406\n    51501401501405142\n    65208705208704669\n    73106203106204408\n    84314904314903879\n    92303702304403507\n    102704302704303353\n    114106904106903310\n    122111302111303208\n    132211002211003059\n    145002705002702902\n    ⋮⋮⋮⋮\n    71,6815222205205401\n    71,6825222205218301\n    71,6835222305218301\n    71,6845222305219701\n    71,6855222305220451\n  \n  \n  \n    71,686 rows × 3 columns"
  },
  {
    "objectID": "sections/table_muns.html",
    "href": "sections/table_muns.html",
    "title": "Municípios",
    "section": "",
    "text": "from utils import get_path, group_cols\nfrom datatable import dt, f"
  },
  {
    "objectID": "sections/table_muns.html#sih",
    "href": "sections/table_muns.html#sih",
    "title": "Municípios",
    "section": "SIH",
    "text": "SIH\n\nColunas da tabela\n\ncols_mun = [\n  'cod_municipio',\n  'regiao',\n  'uf',\n  'cod_uf',\n  'nome_uf',\n  'municipio',\n  'nome_municipio',\n  'capital',\n  'fronteira',\n  'amazonia',\n  'macroregiao_saude',\n  'regiao_saude',\n  'nome_regiao_saude',\n  'microregiao_saude',\n  'latitude',\n  'longitude',\n  'altitude',\n  'area',\n]\n\n\npath_sih = get_path('SIH', 'SIH.jay')\ndf_mun = dt.fread(path_sih)\ndf_mun = df_mun[:, cols_mun]\ndf_mun\n\n\n\n  \n  \n    cod_municipioregiaoufcod_ufnome_ufmunicipionome_municipiocapitalfronteiraamazonia…microregiao_saudelatitudelongitudealtitudearea\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    0120005NorteAC12ACREAssis BrasilASSIS BRASILNSS…12900−10.941−69.5672392875.91\n    1120040NorteAC12ACRERio BrancoRIO BRANCOSSS…12900−9.975−67.811539222.58\n    2120040NorteAC12ACRERio BrancoRIO BRANCOSSS…12900−9.975−67.811539222.58\n    3120040NorteAC12ACRERio BrancoRIO BRANCOSSS…12900−9.975−67.811539222.58\n    4120040NorteAC12ACRERio BrancoRIO BRANCOSSS…12900−9.975−67.811539222.58\n    5120040NorteAC12ACRERio BrancoRIO BRANCOSSS…12900−9.975−67.811539222.58\n    6120040NorteAC12ACRERio BrancoRIO BRANCOSSS…12900−9.975−67.811539222.58\n    7120005NorteAC12ACREAssis BrasilASSIS BRASILNSS…12900−10.941−69.5672392875.91\n    8120040NorteAC12ACRERio BrancoRIO BRANCOSSS…12900−9.975−67.811539222.58\n    9120040NorteAC12ACRERio BrancoRIO BRANCOSSS…12900−9.975−67.811539222.58\n    10120005NorteAC12ACREAssis BrasilASSIS BRASILNSS…12900−10.941−69.5672392875.91\n    11120038NorteAC12ACREPlácido de CastroPLACIDO DE CASTRONSS…12900−10.276−67.151362047.45\n    12120040NorteAC12ACRERio BrancoRIO BRANCOSSS…12900−9.975−67.811539222.58\n    13120001NorteAC12ACREAcrelândiaACRELANDIANSS…12900−9.828−66.883251574.55\n    14120040NorteAC12ACRERio BrancoRIO BRANCOSSS…12900−9.975−67.811539222.58\n    ⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋱⋮⋮⋮⋮⋮\n    16,816,986171840NorteTO17TOCANTINSPresidente KennedyPRESIDENTE KENNEDYNNS…17900−8.539−48.506247770.418\n    16,816,987171670NorteTO17TOCANTINSColméiaCOLMEIANNS…17900−8.729−48.765362990.712\n    16,816,988171670NorteTO17TOCANTINSColméiaCOLMEIANNS…17900−8.729−48.765362990.712\n    16,816,989170930NorteTO17TOCANTINSGuaraíGUARAINNS…17900−8.834−48.512592268.15\n    16,816,990171250NorteTO17TOCANTINSMarianópolis do TocantinsMARIANOPOLIS DO TOCANTINSNNS…17900−9.796−49.6541462091.36\n  \n  \n  \n    16,816,991 rows × 18 columns\n  \n\n\n\n\n\nTabela agrupada\n\ndf_mun = group_cols(df_mun, cols_mun)\ndf_mun = df_mun.sort(-f.count)\ndf_mun\n\n\n\n  \n  \n    cod_municipioregiaoufcod_ufnome_ufmunicipionome_municipiocapitalfronteiraamazonia…latitudelongitudealtitudeareacount\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    0355030SudesteSP35SAO PAULOSão PauloSAO PAULOSNN…−23.548−46.6367601522.99806352\n    1330455SudesteRJ33RIO DE JANEIRORio de JaneiroRIO DE JANEIROSNN…−22.903−43.20821182.3368216\n    2130260NorteAM13AMAZONASManausMANAUSSNS…−3.102−60.0259211401.1297036\n    3230440NordesteCE23CEARAFortalezaFORTALEZASNN…−3.717−38.54321313.14203370\n    4292740NordesteBA29BAHIASalvadorSALVADORSNN…−12.971−38.5118706.799169924\n    5150140NortePA15PARABelémBELEMSNS…−1.456−48.504101064.92126918\n    6310620SudesteMG31MINAS GERAISBelo HorizonteBELO HORIZONTESNN…−19.817−43.956858330.954125370\n    7431490SulRS43RIO GRANDE DO SULPorto AlegrePORTO ALEGRESNN…−30.033−51.233496.827105321\n    8410690SulPR41PARANACuritibaCURITIBASNN…−25.428−49.273934434.967101337\n    9270430NordesteAL27ALAGOASMaceióMACEIOSNN…−9.666−35.73516510.65593551\n    10520870Centro-OesteGO52GOIASGoiâniaGOIANIASNN…−16.679−49.254749739.49292068\n    11351880SudesteSP35SAO PAULOGuarulhosGUARULHOSNNN…−23.463−46.533759318.01491617\n    12221100NordestePI22PIAUITeresinaTERESINASNN…−5.089−42.802721755.786245\n    13500270Centro-OesteMS50MATO GROSSO DO SULCampo GrandeCAMPO GRANDESNN…−20.443−54.6465328096.0584481\n    14261160NordestePE26PERNAMBUCORecifeRECIFESNN…−8.054−34.8814217.49483833\n    ⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋱⋮⋮⋮⋮⋮\n    5564520020Centro-OesteGO52GOIASÁgua LimpaAGUA LIMPANNN…−18.074−48.762682452.85625\n    5565510120Centro-OesteMT51MATO GROSSOAraguainhaARAGUAINHANNS…−16.856−53.033462688.67623\n    5566350640SudesteSP35SAO PAULOBilacBILACNNN…−21.403−50.471431157.27818\n    5567500627Centro-OesteMS50MATO GROSSO DO SULParaíso das ÁguasPARAISO DAS AGUASNNN…−19.0216−53.011605032.4715\n    5568330513SudesteRJ33RIO DE JANEIROSão José de UbáSAO JOSE DE UBANNN…−21.358−41.94395250.5966\n  \n  \n  \n    5569 rows × 19 columns"
  },
  {
    "objectID": "sections/table_muns.html#índice-socioeconômico",
    "href": "sections/table_muns.html#índice-socioeconômico",
    "title": "Municípios",
    "section": "Índice Socioeconômico",
    "text": "Índice Socioeconômico\n\nColunas da tabela\n\ncols_socioecon = {\n  'Cód IBGE': 'cod_municipio',\n  'Grupo': 'socioecon',\n  ...: None\n}\n\n\npath_socioeco = get_path('HEALTH', 'health_regions.csv')\ndf_socioeco = dt.fread(path_socioeco, columns=cols_socioecon)\ndf_socioeco\n\n\n\n  \n  \n    cod_municipiosocioecon\n    ▪▪▪▪▪▪▪▪\n  \n  \n    01200012\n    11200051\n    21200101\n    31200132\n    41200172\n    51200201\n    61200251\n    71200301\n    81200322\n    91200331\n    101200342\n    111200351\n    121200382\n    131200802\n    141200391\n    ⋮⋮⋮\n    55661721201\n    55671721252\n    55681721302\n    55691722083\n    55701722103\n  \n  \n  \n    5571 rows × 2 columns"
  },
  {
    "objectID": "sections/table_procs.html",
    "href": "sections/table_procs.html",
    "title": "Procedimentos",
    "section": "",
    "text": "from utils import get_path, group_cols\nfrom datatable import dt, f"
  },
  {
    "objectID": "sections/table_procs.html#sih",
    "href": "sections/table_procs.html#sih",
    "title": "Procedimentos",
    "section": "SIH",
    "text": "SIH\n\nColunas da tabela\n\ncols_proc = [\n  'ano',\n  'parto_normal',\n  'cnes',\n  'hosp_cod_municipio',\n  'hosp_regiao_saude',\n  'cod_municipio',\n  'regiao_saude',\n  'idade'\n]\n\n\npath_sih = get_path('SIH', 'SIH.jay')\ndf_proc = dt.fread(path_sih)\ndf_proc = df_proc[:, cols_proc]\ndf_proc\n\n\n\n  \n  \n    anoparto_normalcneshosp_cod_municipiohosp_regiao_saudecod_municipioregiao_saudeidade\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    0201031001003920010201200051202120005120223\n    1201031001003920007331200401201120040120128\n    2201031001003920007331200401201120040120138\n    3201031001003920007331200401201120040120116\n    4201031001003920007331200401201120040120126\n    5201031001003920007331200401201120040120126\n    6201031001003920007331200401201120040120127\n    7201031001003920010201200051202120005120231\n    8201031001003920007331200401201120040120130\n    9201031001003920007331200401201120040120118\n    10201031001003920010201200051202120005120228\n    11201031001003920007331200401201120038120132\n    12201031001003920007331200401201120040120130\n    13201031001003920007331200401201120001120126\n    14201031001003920007331200401201120040120126\n    ⋮⋮⋮⋮⋮⋮⋮⋮⋮\n    16,816,986201941101003427656401709301704171840170424\n    16,816,987201941101003427656401709301704171670170427\n    16,816,988201941101003427656401709301704171670170422\n    16,816,989201941101003427656401709301704170930170425\n    16,816,990201941101003427551491716101708171250170821\n  \n  \n  \n    16,816,991 rows × 8 columns\n  \n\n\n\n\n\nTabela agrupada\n\ndf_proc = group_cols(df_proc, cols_proc)\ndf_proc = df_proc.sort(f.ano, -f.count)\ndf_proc\n\n\n\n  \n  \n    anoparto_normalcneshosp_cod_municipiohosp_regiao_saudecod_municipioregiao_saudeidadecount\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    0201031001003920773883550303501355030350122362\n    1201031001003920773883550303501355030350120333\n    2201031001003920773883550303501355030350119331\n    3201031001003920773883550303501355030350124327\n    4201031001003920777013550303501355030350121318\n    5201031001003920773883550303501355030350121303\n    6201031001003920773883550303501355030350123297\n    7201031001003920777013550303501355030350120296\n    8201031001003920777013550303501355030350122295\n    9201031001003920773883550303501355030350118292\n    10201031001003931517941302601301130260130120288\n    11201031001003931517941302601301130260130119276\n    12201031001003920773883550303501355030350125270\n    13201031001003920791863550303501355030350122269\n    14201031001003931517941302601301130260130122269\n    ⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮\n    3,355,6862019411010034992383727043027013556403520291\n    3,355,6872019411010034992383727043027014209104213241\n    3,355,6882019411010034992383727043027015102855109281\n    3,355,6892019411010034992383727043027015106225114291\n    3,355,6902019411010034992383727043027015107925114141\n  \n  \n  \n    3,355,691 rows × 9 columns\n  \n\n\n\n\n\nAtualizando variável parto normal\n\ndf_proc[:, dt.update(parto_normal = f.parto_normal == 310010039)] # {310010039: 'normal', 411010034: 'cesariano'}\ndf_proc\n\n\n\n  \n  \n    anoparto_normalcneshosp_cod_municipiohosp_regiao_saudecod_municipioregiao_saudeidadecount\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    02010120773883550303501355030350122362\n    12010120773883550303501355030350120333\n    22010120773883550303501355030350119331\n    32010120773883550303501355030350124327\n    42010120777013550303501355030350121318\n    52010120773883550303501355030350121303\n    62010120773883550303501355030350123297\n    72010120777013550303501355030350120296\n    82010120777013550303501355030350122295\n    92010120773883550303501355030350118292\n    102010131517941302601301130260130120288\n    112010131517941302601301130260130119276\n    122010120773883550303501355030350125270\n    132010120791863550303501355030350122269\n    142010131517941302601301130260130122269\n    ⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮\n    3,355,68620190992383727043027013556403520291\n    3,355,68720190992383727043027014209104213241\n    3,355,68820190992383727043027015102855109281\n    3,355,68920190992383727043027015106225114291\n    3,355,69020190992383727043027015107925114141\n  \n  \n  \n    3,355,691 rows × 9 columns"
  }
]