[
  {
    "objectID": "sections/sih.html",
    "href": "sections/sih.html",
    "title": "SIH",
    "section": "",
    "text": "from utils import data_load\nfrom datatable import dt, f, by"
  },
  {
    "objectID": "sections/sih.html#listar-arquivos-no-zip",
    "href": "sections/sih.html#listar-arquivos-no-zip",
    "title": "SIH",
    "section": "Listar arquivos no ZIP",
    "text": "Listar arquivos no ZIP\n\ndef get_zip_namelist(zip_path):\n  files = ZipFile(zip_path).namelist()\n  files = [f'{zip_path}/{f}'\n    for f in files if 'dict' not in f]\n  return files"
  },
  {
    "objectID": "sections/sih.html#abrir-uma-tabela",
    "href": "sections/sih.html#abrir-uma-tabela",
    "title": "SIH",
    "section": "Abrir uma tabela",
    "text": "Abrir uma tabela\n\ndef read_table(table_path, columns):\n  cols_order = list(columns.values())\n  columns[...] = None\n  df = dt.fread(table_path, columns=columns)\n  return df"
  },
  {
    "objectID": "sections/sih.html#carregar-tabelas-do-zip",
    "href": "sections/sih.html#carregar-tabelas-do-zip",
    "title": "SIH",
    "section": "Carregar tabelas do ZIP",
    "text": "Carregar tabelas do ZIP\n\ndef data_load(zip_path, cols, filter_func):\n  files = get_zip_namelist(zip_path)\n  dfs = list()\n  for file_path in tqdm(files):\n    df = read_table(file_path, cols)\n    df = filter_func(df, cols)\n    dfs.append(df)\n  df = dt.rbind(*dfs)\n  return df"
  },
  {
    "objectID": "sections/sih.html#agrupar-por-colunas",
    "href": "sections/sih.html#agrupar-por-colunas",
    "title": "SIH",
    "section": "Agrupar por colunas",
    "text": "Agrupar por colunas\n\ndef group_cols(df_base, cols):\n  df = df_base[:, cols]\n  df['count'] = 1\n  df = df[:, dt.sum(f.count), by(cols)]\n  return df"
  },
  {
    "objectID": "sections/sih.html#filtro-de-colunas",
    "href": "sections/sih.html#filtro-de-colunas",
    "title": "SIH",
    "section": "Filtro de Colunas",
    "text": "Filtro de Colunas\n\ncols_sih = {\n  # Infomações do procedimento:\n  'ano_internacao': 'ano',\n  'PROC_REA': 'parto_normal',\n  'CNES': 'cnes',\n  # Infomações da gestante:\n  'def_idade_anos': 'idade',\n  # Infomações de localidade do hospital de interção:\n  'int_codigo_adotado': 'hosp_cod_municipio',\n  'int_RSAUDCOD': 'hosp_regiao_saude',\n  # Infomações de localidade da residência:\n  'res_codigo_adotado': 'cod_municipio', # Armazena o código atribuído ao município de residência atualmente, tratando os casos em que múltiplos códigos tenham sido utilizados para um mesmo município ao longo do tempo\n  'res_REGIAO': 'regiao', # Nome da região da unidade da federação de residência\n  'res_SIGLA_UF': 'uf', # Sigla da unidade da federação de residência\n  'res_CODIGO_UF': 'cod_uf', # Código da UF de residência\n  'res_NOME_UF': 'nome_uf', # Nome da unidade da federação de residência\n  'res_MUNNOME': 'municipio', # Nome do município de residência\n  'res_MUNNOMEX': 'nome_municipio', # Nome do município de residência em maiúsculas e sem acentos\n  'res_CAPITAL': 'capital', # Indica (S/N) se o município de residência é capital de UF\n  'res_FRONTEIRA': 'fronteira', # Indica (S/N) se o município de residência faz parte da faixa de fronteira (conforme IBGE)\n  'res_AMAZONIA': 'amazonia', # Indica (S/N) se o município de residência faz parte da Amazônia Legal (conforme IBGE)\n  'res_MSAUDCOD': 'macroregiao_saude', # Código da Macrorregional de Saúde a que o Município de residência pertence\n  'res_RSAUDCOD': 'regiao_saude', # Código da Regional de Saúde a que o Município de residência pertence\n  'def_regiao_res': 'nome_regiao_saude', # Nome da Regional de Saúde a que o Município de residência pertence\n  'res_CSAUDCOD': 'microregiao_saude', # Código da Microrregional de Saúde a que o Município de residência pertence\n  'res_LATITUDE': 'latitude', # Latitude do município de residência\n  'res_LONGITUDE': 'longitude', # Longitude do município de residência\n  'res_ALTITUDE': 'altitude', # Altitude do município de residência\n  'res_AREA': 'area', # Área do município de residência\n}"
  },
  {
    "objectID": "sections/sih.html#filtro-de-linhas",
    "href": "sections/sih.html#filtro-de-linhas",
    "title": "SIH",
    "section": "Filtro de Linhas",
    "text": "Filtro de Linhas\n\ndef filter_sih(df, cols):\n  cols = list(cols.values())[:-1]\n  cols = [c for c in cols if c in df.names]\n  df_filtered = df[\n    (\n      (f['ano'] > 2009) & (f['ano'] < 2020)\n    ) & (\n      (f['idade'] > 9) & (f['idade'] < 50)\n    ) & (\n      (f['parto_normal'] == 310010039) | (f['parto_normal'] == 411010034)\n    ) & (\n      (f['cnes'] != None)\n    ) & (\n      (f['uf'] != 'DF')\n    ) & (\n      (f['regiao_saude'] != None)\n    ) & (\n      (f['hosp_regiao_saude'] != None)\n    ) & (\n      (f['cod_municipio'] != None)\n    ), cols]\n  return df_filtered"
  },
  {
    "objectID": "sections/sih.html#municípios",
    "href": "sections/sih.html#municípios",
    "title": "SIH",
    "section": "Municípios",
    "text": "Municípios\n\nColunas da tabela\n\ncols_mun = df_sih.names[6:]\ncols_mun\n\n('cod_municipio',\n 'regiao',\n 'uf',\n 'cod_uf',\n 'nome_uf',\n 'municipio',\n 'nome_municipio',\n 'capital',\n 'fronteira',\n 'amazonia',\n 'macroregiao_saude',\n 'regiao_saude',\n 'nome_regiao_saude',\n 'microregiao_saude',\n 'latitude',\n 'longitude',\n 'altitude',\n 'area')\n\n\n\n\nTabela resutante\n\ndf_mun = group_cols(df_sih, cols_mun)\ndf_mun = df_mun.sort(-f.count)\ndf_mun\n\n\n\n  \n  \n    cod_municipioregiaoufcod_ufnome_ufmunicipionome_municipiocapitalfronteiraamazonia…latitudelongitudealtitudeareacount\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    0355030SudesteSP35SAO PAULOSão PauloSAO PAULOSNN…−23.548−46.6367601522.99806352\n    1330455SudesteRJ33RIO DE JANEIRORio de JaneiroRIO DE JANEIROSNN…−22.903−43.20821182.3368216\n    2130260NorteAM13AMAZONASManausMANAUSSNS…−3.102−60.0259211401.1297036\n    3230440NordesteCE23CEARAFortalezaFORTALEZASNN…−3.717−38.54321313.14203370\n    4292740NordesteBA29BAHIASalvadorSALVADORSNN…−12.971−38.5118706.799169924\n    5150140NortePA15PARABelémBELEMSNS…−1.456−48.504101064.92126918\n    6310620SudesteMG31MINAS GERAISBelo HorizonteBELO HORIZONTESNN…−19.817−43.956858330.954125370\n    7431490SulRS43RIO GRANDE DO SULPorto AlegrePORTO ALEGRESNN…−30.033−51.233496.827105321\n    8410690SulPR41PARANACuritibaCURITIBASNN…−25.428−49.273934434.967101337\n    9270430NordesteAL27ALAGOASMaceióMACEIOSNN…−9.666−35.73516510.65593551\n    10520870Centro-OesteGO52GOIASGoiâniaGOIANIASNN…−16.679−49.254749739.49292068\n    11351880SudesteSP35SAO PAULOGuarulhosGUARULHOSNNN…−23.463−46.533759318.01491617\n    12221100NordestePI22PIAUITeresinaTERESINASNN…−5.089−42.802721755.786245\n    13500270Centro-OesteMS50MATO GROSSO DO SULCampo GrandeCAMPO GRANDESNN…−20.443−54.6465328096.0584481\n    14261160NordestePE26PERNAMBUCORecifeRECIFESNN…−8.054−34.8814217.49483833\n    ⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋱⋮⋮⋮⋮⋮\n    5564520020Centro-OesteGO52GOIASÁgua LimpaAGUA LIMPANNN…−18.074−48.762682452.85625\n    5565510120Centro-OesteMT51MATO GROSSOAraguainhaARAGUAINHANNS…−16.856−53.033462688.67623\n    5566350640SudesteSP35SAO PAULOBilacBILACNNN…−21.403−50.471431157.27818\n    5567500627Centro-OesteMS50MATO GROSSO DO SULParaíso das ÁguasPARAISO DAS AGUASNNN…−19.0216−53.011605032.4715\n    5568330513SudesteRJ33RIO DE JANEIROSão José de UbáSAO JOSE DE UBANNN…−21.358−41.94395250.5966\n  \n  \n  \n    5569 rows × 19 columns\n  \n\n\n\n\n\nExportando tabela\n\noutput_mun = f'{Path.home()}/Databases/GESTANTES/municipios.csv.gzip'\ndf_mun.to_csv(output_mun)\n\n\ndt.fread(output_mun)\n\n\n\n  \n  \n    cod_municipioregiaoufcod_ufnome_ufmunicipionome_municipiocapitalfronteiraamazonia…latitudelongitudealtitudeareacount\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    0355030SudesteSP35SAO PAULOSão PauloSAO PAULOSNN…−23.548−46.6367601522.99806352\n    1330455SudesteRJ33RIO DE JANEIRORio de JaneiroRIO DE JANEIROSNN…−22.903−43.20821182.3368216\n    2130260NorteAM13AMAZONASManausMANAUSSNS…−3.102−60.0259211401.1297036\n    3230440NordesteCE23CEARAFortalezaFORTALEZASNN…−3.717−38.54321313.14203370\n    4292740NordesteBA29BAHIASalvadorSALVADORSNN…−12.971−38.5118706.799169924\n    5150140NortePA15PARABelémBELEMSNS…−1.456−48.504101064.92126918\n    6310620SudesteMG31MINAS GERAISBelo HorizonteBELO HORIZONTESNN…−19.817−43.956858330.954125370\n    7431490SulRS43RIO GRANDE DO SULPorto AlegrePORTO ALEGRESNN…−30.033−51.233496.827105321\n    8410690SulPR41PARANACuritibaCURITIBASNN…−25.428−49.273934434.967101337\n    9270430NordesteAL27ALAGOASMaceióMACEIOSNN…−9.666−35.73516510.65593551\n    10520870Centro-OesteGO52GOIASGoiâniaGOIANIASNN…−16.679−49.254749739.49292068\n    11351880SudesteSP35SAO PAULOGuarulhosGUARULHOSNNN…−23.463−46.533759318.01491617\n    12221100NordestePI22PIAUITeresinaTERESINASNN…−5.089−42.802721755.786245\n    13500270Centro-OesteMS50MATO GROSSO DO SULCampo GrandeCAMPO GRANDESNN…−20.443−54.6465328096.0584481\n    14261160NordestePE26PERNAMBUCORecifeRECIFESNN…−8.054−34.8814217.49483833\n    ⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋱⋮⋮⋮⋮⋮\n    5564520020Centro-OesteGO52GOIASÁgua LimpaAGUA LIMPANNN…−18.074−48.762682452.85625\n    5565510120Centro-OesteMT51MATO GROSSOAraguainhaARAGUAINHANNS…−16.856−53.033462688.67623\n    5566350640SudesteSP35SAO PAULOBilacBILACNNN…−21.403−50.471431157.27818\n    5567500627Centro-OesteMS50MATO GROSSO DO SULParaíso das ÁguasPARAISO DAS AGUASNNN…−19.0216−53.011605032.4715\n    5568330513SudesteRJ33RIO DE JANEIROSão José de UbáSAO JOSE DE UBANNN…−21.358−41.94395250.5966\n  \n  \n  \n    5569 rows × 19 columns"
  },
  {
    "objectID": "sections/sih.html#procedimentos",
    "href": "sections/sih.html#procedimentos",
    "title": "SIH",
    "section": "Procedimentos",
    "text": "Procedimentos\n\nColunas da tabela\n\ncols_proc = [\n  'ano',\n  'parto_normal',\n  'cnes',\n  'hosp_cod_municipio',\n  'hosp_regiao_saude',\n  'cod_municipio',\n  'regiao_saude',\n  'idade'\n]\n\n\n\nTabela resutante\n\ndf_proc = group_cols(df_sih, cols_proc)\ndf_proc = df_proc.sort(f.ano, -f.count)\ndf_proc\n\n\n\n  \n  \n    anoparto_normalcneshosp_cod_municipiohosp_regiao_saudecod_municipioregiao_saudeidadecount\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    0201031001003920773883550303501355030350122362\n    1201031001003920773883550303501355030350120333\n    2201031001003920773883550303501355030350119331\n    3201031001003920773883550303501355030350124327\n    4201031001003920777013550303501355030350121318\n    5201031001003920773883550303501355030350121303\n    6201031001003920773883550303501355030350123297\n    7201031001003920777013550303501355030350120296\n    8201031001003920777013550303501355030350122295\n    9201031001003920773883550303501355030350118292\n    10201031001003931517941302601301130260130120288\n    11201031001003931517941302601301130260130119276\n    12201031001003920773883550303501355030350125270\n    13201031001003920791863550303501355030350122269\n    14201031001003931517941302601301130260130122269\n    ⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮\n    3,355,6862019411010034992383727043027013556403520291\n    3,355,6872019411010034992383727043027014209104213241\n    3,355,6882019411010034992383727043027015102855109281\n    3,355,6892019411010034992383727043027015106225114291\n    3,355,6902019411010034992383727043027015107925114141\n  \n  \n  \n    3,355,691 rows × 9 columns\n  \n\n\n\n\nwith age: 3_355_691 rows × 9 columns\nwithout age: 461_276 rows × 8 columns\n\n\n\nAtualizando variável parto normal\n\ndf_proc[:, dt.update(parto_normal = f.parto_normal == 310010039)] # {310010039: 'normal', 411010034: 'cesariano'}\ndf_proc\n\n\n\n  \n  \n    anoparto_normalcneshosp_cod_municipiohosp_regiao_saudecod_municipioregiao_saudeidadecount\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    02010120773883550303501355030350122362\n    12010120773883550303501355030350120333\n    22010120773883550303501355030350119331\n    32010120773883550303501355030350124327\n    42010120777013550303501355030350121318\n    52010120773883550303501355030350121303\n    62010120773883550303501355030350123297\n    72010120777013550303501355030350120296\n    82010120777013550303501355030350122295\n    92010120773883550303501355030350118292\n    102010131517941302601301130260130120288\n    112010131517941302601301130260130119276\n    122010120773883550303501355030350125270\n    132010120791863550303501355030350122269\n    142010131517941302601301130260130122269\n    ⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮\n    3,355,68620190992383727043027013556403520291\n    3,355,68720190992383727043027014209104213241\n    3,355,68820190992383727043027015102855109281\n    3,355,68920190992383727043027015106225114291\n    3,355,69020190992383727043027015107925114141\n  \n  \n  \n    3,355,691 rows × 9 columns\n  \n\n\n\n\n\nExportando tabela\n\noutput_proc = f'{Path.home()}/Databases/GESTANTES/procedimentos.csv.gzip'\ndf_proc.to_csv(output_proc)\n\n\ndt.fread(output_proc)\n\n\n\n  \n  \n    anoparto_normalcneshosp_cod_municipiohosp_regiao_saudecod_municipioregiao_saudeidadecount\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    02010120773883550303501355030350122362\n    12010120773883550303501355030350120333\n    22010120773883550303501355030350119331\n    32010120773883550303501355030350124327\n    42010120777013550303501355030350121318\n    52010120773883550303501355030350121303\n    62010120773883550303501355030350123297\n    72010120777013550303501355030350120296\n    82010120777013550303501355030350122295\n    92010120773883550303501355030350118292\n    102010131517941302601301130260130120288\n    112010131517941302601301130260130119276\n    122010120773883550303501355030350125270\n    132010120791863550303501355030350122269\n    142010131517941302601301130260130122269\n    ⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮\n    3,355,68620190992383727043027013556403520291\n    3,355,68720190992383727043027014209104213241\n    3,355,68820190992383727043027015102855109281\n    3,355,68920190992383727043027015106225114291\n    3,355,69020190992383727043027015107925114141\n  \n  \n  \n    3,355,691 rows × 9 columns"
  },
  {
    "objectID": "investigation/data_load.html",
    "href": "investigation/data_load.html",
    "title": "Coleta dos Dados",
    "section": "",
    "text": "import os, sys\nimport sqlite3\nimport pandas as pd\nfrom tqdm import tqdm\nfrom pathlib import Path\nfrom zipfile import ZipFile\nfrom datatable import dt, f, by"
  },
  {
    "objectID": "investigation/data_load.html#cnes",
    "href": "investigation/data_load.html#cnes",
    "title": "Coleta dos Dados",
    "section": "CNES",
    "text": "CNES\n\nDescrição\nDados do Cadastro Nacional de Estabelecimentos de Saúde (CNES) reunidos pela Plataforma de Ciência de Dados aplicada à Saúde (PCDaS). Os dados foram obtidos junto ao DATASUS (Ministério da Saúde), tratados e enriquecidos seguindo uma metodologia própria de ETL da PCDaS, resultando em um dataset mensal com todos os registros de estabelecimentos de saúde contidos no CNES à partir de agosto de 2005. A atualização dos dados é realizada pelo DATASUS e a PCDaS extrai os registros mensais assim que disponibilizados. As colunas com nomes em MAIÚSCULO representam dados originais advindos do DATASUS e colunas com nomes iniciando em minúsculo representam dados resultantes de transformação ou enriquecimento.\n\n\nSelecionar\n\nColunas\n\ncols_cnes = {\n  'CNES': 'cnes', # Número nacional do estabelecimento de saúde\n  'uf_SIGLA_UF': 'uf', # Sigla da unidade da federação do estabelecimento\n  'mun_codigo_adotado': 'cod_mun', # Armazena o código atribuído ao município do estabelecimento, tratando os casos em que múltiplos códigos tenham sido utilizados para um mesmo município ao longo do tempo\n  'def_esfera_a': 'esfera_adm', # Código da esfera administrativa\n  'def_retencao': 'retencao_tributos', # Código de retenção de tributos\n  'def_cod_ir': 'tipo_retenção', # Indica o tipo de retenção de tributos da mantenedora\n  'def_natureza': 'natureza', # Código da natureza da organização\n  'VINC_SUS': 'sus', # Vínculo com SUS: 1-Sim 0-Não\n}\n\n\n\nLinhas\n\ndef filter_cnes(df):\n  cols = list(cols_cnes.values())[:-2]\n  return df[(f['sus'] == 1), cols]\n\n\n\n\nCarregar dados\n\npath_zip_cnes = f'{Path.home()}/Databases/CNES/CNES.zip'\noutput_cnes = path_zip_cnes.replace('zip', 'csv.gzip')\n# df_cnes = data_load(path_zip_cnes, cols_cnes, filter_cnes)\n# df_cnes = df_cnes.to_pandas().drop_duplicates()\n# df_cnes.to_csv(output_cnes, index=False)\ndf_cnes = dt.fread(output_cnes)\ndf_cnes\n\n\n\n  \n  \n    cnesufcod_munesfera_admretencao_tributostipo_retençãonatureza\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    02786052SP350410MUNICIPALEstabelecimento PUBLICOEstabelecimento PUBLICOAdministração Direta da Saúde (MS, SES, e SMS)\n    12814714SP355030PRIVADAEstabelecimento PRIVADO LUCRATIVAEmpresa Privada\n    22784769SP351880ESTADUALEstabelecimento PUBLICOEstabelecimento PUBLICOAdministração Direta da Saúde (MS, SES, e SMS)\n    32051001SP350440MUNICIPALEstabelecimento PUBLICOEstabelecimento PUBLICOAdministração Direta da Saúde (MS, SES, e SMS)\n    48012806SP352390MUNICIPALEstabelecimento PUBLICOEstabelecimento PUBLICOAdministração Direta da Saúde (MS, SES, e SMS)\n    52028476SP355030ESTADUALEstabelecimento PUBLICOEstabelecimento PUBLICOAdministração Direta da Saúde (MS, SES, e SMS)\n    62093731SP355030MUNICIPALEstabelecimento PUBLICOAdministração Direta da Saúde (MS, SES, e SMS)\n    72093766SP354090MUNICIPALEstabelecimento PUBLICOEstabelecimento PUBLICOAdministração Direta da Saúde (MS, SES, e SMS)\n    82093871SP354090MUNICIPALEstabelecimento PUBLICOEstabelecimento PUBLICOAdministração Direta da Saúde (MS, SES, e SMS)\n    92088894SP351340MUNICIPALEstabelecimento PUBLICOEstabelecimento PUBLICOAdministração Direta da Saúde (MS, SES, e SMS)\n    102088908SP350860MUNICIPALEstabelecimento PUBLICOEstabelecimento PUBLICOAdministração Direta da Saúde (MS, SES, e SMS)\n    112060701SP351620ESTADUALEstabelecimento PUBLICOEstabelecimento PUBLICOAdm Indireta - Organização Social Pública\n    122050455SP350450ESTADUALEstabelecimento PUBLICOEstabelecimento PUBLICOAdministração Direta da Saúde (MS, SES, e SMS)\n    132094010SP353530MUNICIPALEstabelecimento PUBLICOEstabelecimento PUBLICOAdministração Direta da Saúde (MS, SES, e SMS)\n    142804794SP354980PRIVADAEstabelecimento PRIVADO LUCRATIVAEstabelecimento PRIVADO LUCRATIVAEmpresa Privada\n    ⋮⋮⋮⋮⋮⋮⋮⋮\n    233,3063475840MG314310PRIVADAEstabelecimento PRIVADO LUCRATIVAEmpresa Privada\n    233,3073933067MG314310PRIVADAEstabelecimento PRIVADO LUCRATIVAEmpresa Privada\n    233,3086094325MG315540PRIVADAEstabelecimento PRIVADO LUCRATIVAEstabelecimento PRIVADO LUCRATIVAEmpresa Privada\n    233,3096563775PR410540\n    233,3107843135DF530010ESTADUALEstabelecimento PUBLICOEstabelecimento PUBLICOAdministração Direta da Saúde (MS, SES, e SMS)\n  \n  \n  \n    233,311 rows × 7 columns\n  \n\n\n\n100%|██████████| 4374/4374 [05:40<00:00, 12.86it/s]"
  },
  {
    "objectID": "investigation/data_load.html#sinasc",
    "href": "investigation/data_load.html#sinasc",
    "title": "Coleta dos Dados",
    "section": "SINASC",
    "text": "SINASC\n\nDescrição\nDados do Sistema de Informações sobre Nascidos Vivos (SINASC) reunidos pela Plataforma de Ciência de Dados aplicada à Saúde (PCDaS). Os dados foram obtidos junto ao DATASUS (Ministério da Saúde), tratados e enriquecidos seguindo uma metodologia própria de ETL da PCDaS, resultando em um dataset anual com todos os registros das declarações de nascidos vivos contidas no SINASC à partir de 1996. A atualização dos dados é realizada pelo DATASUS e a PCDaS extrai os registros anuais assim que disponibilizados. As colunas com nomes em MAIÚSCULO representam dados originais advindos do DATASUS e colunas com nomes iniciando em minúsculo representam dados resultantes de transformação ou enriquecimento.\n\n\nSelecionar\n\nColunas\n\ncols_sinasc = {\n  'ano_nasc': 'ano',\n  'CODESTAB': 'cnes',\n  'nasc_codigo_adotado': 'hosp_municipio',\n  'res_codigo_adotado': 'res_municipio',\n  'nasc_RSAUDCOD': 'hosp_regiao_saude',\n  'res_RSAUDCOD': 'res_regiao_saude',\n  'def_parto': 'tipo_parto',\n  'GRAVIDEZ': 'n_gestados',\n  'CONSULTAS': 'n_pre_natal',\n  'IDADEMAE': 'idade',\n  'ESCMAE': 'nivel_escolaridade',\n  'RACACORMAE': 'raca_cor',\n  'def_raca_cor': 'nasc_raca_cor',\n  'def_sexo': 'nasc_sexo',\n  'PESO': 'nasc_peso',\n  'APGAR1': 'nasc_apgar1',\n  'APGAR5': 'nasc_apgar5',\n  'LOCNASC': 'local_nasc',\n}\n\n\n\nLinhas\n\ndef filter_sinasc(df):\n  cols = list(cols_sinasc.values())[:-2]\n  cols = [c for c in cols if c in df.names]\n  if 'cnes' in df.names:\n    df_filtered = df[\n      (\n        (f['ano'] > 2009) & (f['ano'] < 2020)\n      ) & (\n        (f['idade'] > 9) & (f['idade'] < 50)\n      ) & (\n        (f['tipo_parto'] != 'Ignorado') # tipo parto\n      ) & (\n        (f['cnes'] != None)\n      ) & (\n        (f['local_nasc'] == 1) # Hospital\n      ) & (\n        (f['res_regiao_saude'] != 5301) # DF\n      ) & (\n        (f['res_regiao_saude'] != None)\n      ) & (\n        (f['hosp_regiao_saude'] != None)\n      ) & (\n        (f['res_municipio'] != None)\n      ) & (\n        (f['hosp_municipio'] != None)\n      ), cols]\n  else:\n    df_filtered = dt.Frame()\n  return df_filtered\n\n\n\n\nCarregar dados\n\npath_zip_sinasc = f'{Path.home()}/Databases/SINASC/SINASC.zip'\noutput_sinasc = path_zip_sinasc.replace('zip', 'csv.gzip')\n# df_sinasc = data_load(path_zip_sinasc, cols_sinasc, filter_sinasc)\n# df_sinasc.to_csv(output_sinasc)\ndf_sinasc = dt.fread(output_sinasc)\ndf_sinasc\n\n\n\n  \n  \n    anocneshosp_municipiores_municipiohosp_regiao_sauderes_regiao_saudetipo_parton_gestadosn_pre_natalidade…nasc_raca_cornasc_sexonasc_pesonasc_apgar1nasc_apgar5\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    02010251559811000212004011041201Cesáreo1424…BrancaMasculino3400910\n    12010379259511001112004011011201Cesáreo1322…PardaMasculino395089\n    22010279848411003012004011031201Vaginal1420…BrancaMasculino355089\n    32010570192912000112000112011201Vaginal1321…PardaFeminino3000910\n    42010570192912000112000112011201Vaginal1331…PardaFeminino3000910\n    52010570192912000112000112011201Vaginal1423…PardaMasculino390079\n    62010570192912000112000112011201Vaginal1426…PardaFeminino3250710\n    72010570192912000112000112011201Vaginal1421…PardaMasculino3500810\n    82010570192912000112000112011201Vaginal1420…PardaFeminino290089\n    92010570192912000112000112011201Vaginal1431…PardaMasculino3400810\n    102010570192912000112000112011201Vaginal1428…PardaFeminino390089\n    112010570192912000112000112011201Vaginal1923…PardaFeminino320089\n    122010570192912000112000112011201Vaginal1230…PardaMasculino305089\n    132010570192912000112000112011201Vaginal1321…BrancaMasculino350089\n    142010570192912000112000112011201Vaginal1334…BrancaMasculino400010NA\n    ⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋱⋮⋮⋮⋮⋮\n    28,197,1592019342763352087017095052011707Cesáreo1429…PardaFeminino170078\n    28,197,16020191053753001017024053011709Cesáreo1336…IgnoradoIgnorado287089\n    28,197,1612019571751553001017061053011710Cesáreo1321…PardaMasculino255489\n    28,197,1622019571751553001017210053011705Vaginal1421…PardaFeminino261089\n    28,197,1632019301960853001017024053011709Vaginal1430…PardaMasculino2975910\n  \n  \n  \n    28,197,164 rows × 17 columns\n  \n\n\n\n100%|██████████| 675/675 [03:03<00:00, 3.69it/s]\n\n\nMunicípios\n\ncols_mun = {\n  'res_codigo_adotado': 'cod_ibge', # Armazena o código atribuído ao município de residência atualmente, tratando os casos em que múltiplos códigos tenham sido utilizados para um mesmo município ao longo do tempo\n  'res_REGIAO': 'regiao', # Nome da região da unidade da federação de residência\n  'res_SIGLA_UF': 'uf', # Sigla da unidade da federação de residência\n  'res_CODIGO_UF': 'cod_uf', # Código da UF de residência\n  'res_NOME_UF': 'nome_uf', # Nome da unidade da federação de residência\n  'res_MUNNOME': 'municipio', # Nome do município de residência\n  'res_MUNNOMEX': 'nome', # Nome do município de residência em maiúsculas e sem acentos\n  'res_CAPITAL': 'capital', # Indica (S/N) se o município de residência é capital de UF\n  'res_FRONTEIRA': 'fronteira', # Indica (S/N) se o município de residência faz parte da faixa de fronteira (conforme IBGE)\n  'res_AMAZONIA': 'amazonia', # Indica (S/N) se o município de residência faz parte da Amazônia Legal (conforme IBGE)\n  'res_MSAUDCOD': 'macroregiao_saude', # Código da Macrorregional de Saúde a que o Município de residência pertence\n  'res_RSAUDCOD': 'regiao_saude', # Código da Regional de Saúde a que o Município de residência pertence\n  'res_CSAUDCOD': 'microregiao_saude', # Código da Microrregional de Saúde a que o Município de residência pertence\n  'res_LATITUDE': 'latitude', # Latitude do município de residência\n  'res_LONGITUDE': 'longitude', # Longitude do município de residência\n  'res_ALTITUDE': 'altitude', # Altitude do município de residência\n  'res_AREA': 'area', # Área do município de residência\n}\n\n\nquery_municipios = \"\"\"\nselect\n  COLUMNS, count(*)\nfrom\n  \"datasus-sinasc\"\nwhere\n  res_codigo_adotado like 'PREFIX%'\ngroup by\n  COLUMNS\norder by\n  res_codigo_adotado\nlimit\n  1000\n\"\"\"\nquery_municipios = query_municipios.replace('\\n', ' ').replace('  ', ' ')\nquery_municipios\n\n' select  COLUMNS, count(*) from  \"datasus-sinasc\" where  res_codigo_adotado like \\'PREFIX%\\' group by  COLUMNS order by  res_codigo_adotado limit  1000 '\n\n\n\nquery_count_mun = \"\"\"\nselect\n  count(distinct res_codigo_adotado)\nfrom\n  \"datasus-sinasc\"\nwhere\n  res_codigo_adotado like 'PREFIX%'\nlimit\n  100\n\"\"\"\nquery_count_mun = query_count_mun.replace('\\n', ' ').replace('  ', ' ')\nquery_count_mun\n\n' select  count(distinct res_codigo_adotado) from  \"datasus-sinasc\" where  res_codigo_adotado like \\'PREFIX%\\' limit  100 '\n\n\n\nprefix = {\n  1: 457,\n  2: 1803,\n  31: 854, # 3 = 1672.0\n  32: 79,\n  33: 93,\n  35: 646,\n  41: 400, # 4 = 1194.0\n  42: 296,\n  43: 498,\n  5: 470,\n}\n\n\ndfs_muns = list()\ncols_names = ', '.join(cols_mun)\nfor pre in tqdm(prefix):\n  q = query_municipios.replace('PREFIX', str(pre))\n  q = q.replace('COLUMNS', cols_names)\n  df_mun = data_load.df_query(q)\n  dfs_muns.append(df_mun)\ndf_mun = pd.concat(dfs_muns, ignore_index=True)\ndf_mun\n\n100%|██████████| 10/10 [02:20<00:00, 14.09s/it]\n\n\n\n\n\n\n  \n    \n      \n      res_codigo_adotado\n      res_REGIAO\n      res_SIGLA_UF\n      res_CODIGO_UF\n      res_NOME_UF\n      res_MUNNOME\n      res_MUNNOMEX\n      res_CAPITAL\n      res_FRONTEIRA\n      res_AMAZONIA\n      res_MSAUDCOD\n      res_RSAUDCOD\n      res_CSAUDCOD\n      res_LATITUDE\n      res_LONGITUDE\n      res_ALTITUDE\n      res_AREA\n      count(*)\n    \n  \n  \n    \n      0\n      110000\n      Norte\n      RO\n      11\n      RONDONIA\n      Município ignorado - RO\n      MUNICIPIO IGNORADO - RO\n      N\n      N\n      N\n      1100\n      1100\n      11000\n      0.000000\n      0.000000\n      0.0\n      0.000000\n      450\n    \n    \n      1\n      110001\n      Norte\n      RO\n      11\n      RONDONIA\n      Alta Floresta D'Oeste\n      ALTA FLORESTA D'OESTE\n      N\n      S\n      S\n      1190\n      1102\n      11900\n      -11.929000\n      -61.995998\n      350.0\n      7066.702148\n      12003\n    \n    \n      2\n      110002\n      Norte\n      RO\n      11\n      RONDONIA\n      Ariquemes\n      ARIQUEMES\n      N\n      N\n      S\n      1190\n      1104\n      11900\n      -9.913000\n      -63.041000\n      142.0\n      4426.558105\n      43680\n    \n    \n      3\n      110003\n      Norte\n      RO\n      11\n      RONDONIA\n      Cabixi\n      CABIXI\n      N\n      S\n      S\n      1190\n      1103\n      11900\n      -13.492000\n      -60.544998\n      230.0\n      1314.354980\n      2540\n    \n    \n      4\n      110004\n      Norte\n      RO\n      11\n      RONDONIA\n      Cacoal\n      CACOAL\n      N\n      N\n      S\n      1190\n      1102\n      11900\n      -11.438000\n      -61.448002\n      200.0\n      3792.637939\n      37402\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      4789\n      522200\n      Centro-Oeste\n      GO\n      52\n      GOIAS\n      Vianópolis\n      VIANOPOLIS\n      N\n      N\n      N\n      5201\n      5202\n      52900\n      -16.742001\n      -48.515999\n      1002.0\n      954.278992\n      4650\n    \n    \n      4790\n      522205\n      Centro-Oeste\n      GO\n      52\n      GOIAS\n      Vicentinópolis\n      VICENTINOPOLIS\n      N\n      N\n      N\n      5201\n      5202\n      52900\n      -17.735001\n      -49.806000\n      646.0\n      737.250977\n      2740\n    \n    \n      4791\n      522220\n      Centro-Oeste\n      GO\n      52\n      GOIAS\n      Vila Boa\n      VILA BOA\n      N\n      N\n      N\n      5202\n      5206\n      52900\n      -15.038000\n      -47.058998\n      0.0\n      1060.170044\n      1630\n    \n    \n      4792\n      522230\n      Centro-Oeste\n      GO\n      52\n      GOIAS\n      Vila Propício\n      VILA PROPICIO\n      N\n      N\n      N\n      5203\n      5212\n      52900\n      -15.457000\n      -48.889000\n      744.0\n      2181.574951\n      1319\n    \n    \n      4793\n      530010\n      Centro-Oeste\n      DF\n      53\n      DISTRITO FEDERAL\n      Brasília\n      BRASILIA\n      S\n      N\n      N\n      5301\n      5301\n      53001\n      -15.780000\n      -47.930000\n      1171.0\n      5801.937012\n      1127504\n    \n  \n\n4794 rows × 18 columns\n\n\n\n\ndf_mun = df_mun.rename(columns=cols_mun).iloc[:, :-1]\ndf_mun\n\n\n\n\n\n  \n    \n      \n      cod_igbe\n      regiao\n      uf\n      cod_uf\n      nome_uf\n      municipio\n      nome\n      capital\n      fronteira\n      amazonia\n      macroregiao_saude\n      regiao_saude\n      microregiao_saude\n      latitude\n      longitude\n      altitude\n      area\n    \n  \n  \n    \n      0\n      110000\n      Norte\n      RO\n      11\n      RONDONIA\n      Município ignorado - RO\n      MUNICIPIO IGNORADO - RO\n      N\n      N\n      N\n      1100\n      1100\n      11000\n      0.000000\n      0.000000\n      0.0\n      0.000000\n    \n    \n      1\n      110001\n      Norte\n      RO\n      11\n      RONDONIA\n      Alta Floresta D'Oeste\n      ALTA FLORESTA D'OESTE\n      N\n      S\n      S\n      1190\n      1102\n      11900\n      -11.929000\n      -61.995998\n      350.0\n      7066.702148\n    \n    \n      2\n      110002\n      Norte\n      RO\n      11\n      RONDONIA\n      Ariquemes\n      ARIQUEMES\n      N\n      N\n      S\n      1190\n      1104\n      11900\n      -9.913000\n      -63.041000\n      142.0\n      4426.558105\n    \n    \n      3\n      110003\n      Norte\n      RO\n      11\n      RONDONIA\n      Cabixi\n      CABIXI\n      N\n      S\n      S\n      1190\n      1103\n      11900\n      -13.492000\n      -60.544998\n      230.0\n      1314.354980\n    \n    \n      4\n      110004\n      Norte\n      RO\n      11\n      RONDONIA\n      Cacoal\n      CACOAL\n      N\n      N\n      S\n      1190\n      1102\n      11900\n      -11.438000\n      -61.448002\n      200.0\n      3792.637939\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      4789\n      522200\n      Centro-Oeste\n      GO\n      52\n      GOIAS\n      Vianópolis\n      VIANOPOLIS\n      N\n      N\n      N\n      5201\n      5202\n      52900\n      -16.742001\n      -48.515999\n      1002.0\n      954.278992\n    \n    \n      4790\n      522205\n      Centro-Oeste\n      GO\n      52\n      GOIAS\n      Vicentinópolis\n      VICENTINOPOLIS\n      N\n      N\n      N\n      5201\n      5202\n      52900\n      -17.735001\n      -49.806000\n      646.0\n      737.250977\n    \n    \n      4791\n      522220\n      Centro-Oeste\n      GO\n      52\n      GOIAS\n      Vila Boa\n      VILA BOA\n      N\n      N\n      N\n      5202\n      5206\n      52900\n      -15.038000\n      -47.058998\n      0.0\n      1060.170044\n    \n    \n      4792\n      522230\n      Centro-Oeste\n      GO\n      52\n      GOIAS\n      Vila Propício\n      VILA PROPICIO\n      N\n      N\n      N\n      5203\n      5212\n      52900\n      -15.457000\n      -48.889000\n      744.0\n      2181.574951\n    \n    \n      4793\n      530010\n      Centro-Oeste\n      DF\n      53\n      DISTRITO FEDERAL\n      Brasília\n      BRASILIA\n      S\n      N\n      N\n      5301\n      5301\n      53001\n      -15.780000\n      -47.930000\n      1171.0\n      5801.937012\n    \n  \n\n4794 rows × 17 columns\n\n\n\n\ndf_mun.loc[:, 'capital'] = df_mun['capital'].map({'S': True, 'N': False})\ndf_mun.loc[:, 'fronteira'] = df_mun['fronteira'].map({'S': True, 'N': False})\ndf_mun.loc[:, 'amazonia'] = df_mun['amazonia'].map({'S': True, 'N': False})\ndf_mun\n\n\n\n\n\n  \n    \n      \n      cod_igbe\n      regiao\n      uf\n      cod_uf\n      nome_uf\n      municipio\n      nome\n      capital\n      fronteira\n      amazonia\n      macroregiao_saude\n      regiao_saude\n      microregiao_saude\n      latitude\n      longitude\n      altitude\n      area\n    \n  \n  \n    \n      0\n      110000\n      Norte\n      RO\n      11\n      RONDONIA\n      Município ignorado - RO\n      MUNICIPIO IGNORADO - RO\n      False\n      False\n      False\n      1100\n      1100\n      11000\n      0.000000\n      0.000000\n      0.0\n      0.000000\n    \n    \n      1\n      110001\n      Norte\n      RO\n      11\n      RONDONIA\n      Alta Floresta D'Oeste\n      ALTA FLORESTA D'OESTE\n      False\n      True\n      True\n      1190\n      1102\n      11900\n      -11.929000\n      -61.995998\n      350.0\n      7066.702148\n    \n    \n      2\n      110002\n      Norte\n      RO\n      11\n      RONDONIA\n      Ariquemes\n      ARIQUEMES\n      False\n      False\n      True\n      1190\n      1104\n      11900\n      -9.913000\n      -63.041000\n      142.0\n      4426.558105\n    \n    \n      3\n      110003\n      Norte\n      RO\n      11\n      RONDONIA\n      Cabixi\n      CABIXI\n      False\n      True\n      True\n      1190\n      1103\n      11900\n      -13.492000\n      -60.544998\n      230.0\n      1314.354980\n    \n    \n      4\n      110004\n      Norte\n      RO\n      11\n      RONDONIA\n      Cacoal\n      CACOAL\n      False\n      False\n      True\n      1190\n      1102\n      11900\n      -11.438000\n      -61.448002\n      200.0\n      3792.637939\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      4789\n      522200\n      Centro-Oeste\n      GO\n      52\n      GOIAS\n      Vianópolis\n      VIANOPOLIS\n      False\n      False\n      False\n      5201\n      5202\n      52900\n      -16.742001\n      -48.515999\n      1002.0\n      954.278992\n    \n    \n      4790\n      522205\n      Centro-Oeste\n      GO\n      52\n      GOIAS\n      Vicentinópolis\n      VICENTINOPOLIS\n      False\n      False\n      False\n      5201\n      5202\n      52900\n      -17.735001\n      -49.806000\n      646.0\n      737.250977\n    \n    \n      4791\n      522220\n      Centro-Oeste\n      GO\n      52\n      GOIAS\n      Vila Boa\n      VILA BOA\n      False\n      False\n      False\n      5202\n      5206\n      52900\n      -15.038000\n      -47.058998\n      0.0\n      1060.170044\n    \n    \n      4792\n      522230\n      Centro-Oeste\n      GO\n      52\n      GOIAS\n      Vila Propício\n      VILA PROPICIO\n      False\n      False\n      False\n      5203\n      5212\n      52900\n      -15.457000\n      -48.889000\n      744.0\n      2181.574951\n    \n    \n      4793\n      530010\n      Centro-Oeste\n      DF\n      53\n      DISTRITO FEDERAL\n      Brasília\n      BRASILIA\n      True\n      False\n      False\n      5301\n      5301\n      53001\n      -15.780000\n      -47.930000\n      1171.0\n      5801.937012\n    \n  \n\n4794 rows × 17 columns\n\n\n\n\npath_muns = f'{Path.home()}/Databases/MUNICIPIOS/municipios.csv.gzip'\ndf_mun.to_csv(path_muns, index=False)"
  },
  {
    "objectID": "investigation/data_load.html#sih",
    "href": "investigation/data_load.html#sih",
    "title": "Coleta dos Dados",
    "section": "SIH",
    "text": "SIH\n\nDescrição\nDados do Sistema de Informações Hospitalares do SUS (SIHSUS) reunidos pela Plataforma de Ciência de Dados aplicada à Saúde (PCDaS). Os dados foram obtidos junto ao DATASUS (Ministério da Saúde), tratados e enriquecidos seguindo uma metodologia própria de ETL (processo de extração, transformação e carga dos dados) da PCDaS, resultando em um dataset mensal com todos os registros de internações hospitalares contidos no SIHSUS à partir de janeiro de 2008.\nA atualização dos dados é realizada pelo DATASUS e a PCDaS extrai os registros mensais referentes aos arquivos RD_UF_ANO_MÊS.dbc (Reduzidos de AIH) assim que disponibilizados. As colunas com nomes em MAIÚSCULO representam dados originais advindos do DATASUS e colunas com nomes iniciando em minúsculo representam dados resultantes de transformação ou enriquecimento.\n\n\nSelecionar\n\nColunas\n\ncols_sih = {\n  'ano_internacao': 'ano',\n  'CNES': 'cnes',\n  'int_codigo_adotado': 'hosp_municipio',\n  'res_codigo_adotado': 'res_municipio',\n  'int_RSAUDCOD': 'hosp_regiao_saude',\n  'res_RSAUDCOD': 'res_regiao_saude',\n  'PROC_REA': 'tipo_parto',\n  'def_idade_anos': 'idade',\n}\n\n\n\nLinhas\n\ndef filter_sih(df):\n  cols = list(cols_sinasc.values())[:-1]\n  cols = [c for c in cols if c in df.names]\n  df_filtered = df[\n    (\n      (f['ano'] > 2009) & (f['ano'] < 2020)\n    ) & (\n      (f['idade'] > 9) & (f['idade'] < 50)\n    ) & (\n      (f['tipo_parto'] == 310010039) | (f['tipo_parto'] == 411010034)\n    ) & (\n      (f['cnes'] != None)\n    ) & (\n      (f['res_regiao_saude'] != 5301) # DF\n    ) & (\n      (f['res_regiao_saude'] != None)\n    ) & (\n      (f['hosp_regiao_saude'] != None)\n    ) & (\n      (f['res_municipio'] != None)\n    ), cols]\n  return df_filtered\n\n\n\n\nCarregar dados\n\npath_zip_sih = '/Volumes/SanDisk/SIHSUS.zip'\noutput_sih = f'{Path.home()}/Databases/SIHSUS/SIHSUS.csv.gzip'\n# df_sih = data_load(path_zip_sih, cols_sih, filter_sih)\n# df_sih.to_csv(output_sih)\ndf_sih = dt.fread(output_sih)\ndf_sih\n\n\n\n  \n  \n    anocneshosp_municipiores_municipiohosp_regiao_sauderes_regiao_saudetipo_partoidade\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    0201020010201200051200051202120231001003923\n    1201020007331200401200401201120131001003928\n    2201020007331200401200401201120131001003938\n    3201020007331200401200401201120131001003916\n    4201020007331200401200401201120131001003926\n    5201020007331200401200401201120131001003926\n    6201020007331200401200401201120131001003927\n    7201020010201200051200051202120231001003931\n    8201020007331200401200401201120131001003930\n    9201020007331200401200401201120131001003918\n    10201020010201200051200051202120231001003928\n    11201020007331200401200381201120131001003932\n    12201020007331200401200401201120131001003930\n    13201020007331200401200011201120131001003926\n    14201020007331200401200401201120131001003926\n    ⋮⋮⋮⋮⋮⋮⋮⋮⋮\n    16,816,986201927656401709301718401704170441101003424\n    16,816,987201927656401709301716701704170441101003427\n    16,816,988201927656401709301716701704170441101003422\n    16,816,989201927656401709301709301704170441101003425\n    16,816,990201927551491716101712501708170841101003421\n  \n  \n  \n    16,816,991 rows × 8 columns\n  \n\n\n\n100%|██████████| 4400/4400 [24:46<00:00, 2.96it/s]"
  },
  {
    "objectID": "investigation/cnes.html",
    "href": "investigation/cnes.html",
    "title": "Inspeção CNES",
    "section": "",
    "text": "import os\nimport sqlite3\nimport pandas as pd\nfrom tqdm import tqdm\nfrom pathlib import Path\nfrom zipfile import ZipFile\nfrom datatable import dt, f, by\nimport matplotlib.pyplot as plt\nfrom matplotlib_venn import venn2, venn3\nfrom plotly import express as px, io as pio\n\npd.options.plotting.backend = 'plotly'\npio.renderers.default = 'plotly_mimetype+notebook_connected'"
  },
  {
    "objectID": "investigation/cnes.html#cnes",
    "href": "investigation/cnes.html#cnes",
    "title": "Inspeção CNES",
    "section": "CNES",
    "text": "CNES\n\npath_zip_cnes = f'{Path.home()}/Databases/CNES/CNES.csv.gzip'\noutput_cnes = path_zip_cnes.replace('CNES.', 'cnes_count.')\ndf_cnes = dt.fread(path_zip_cnes)\ndf_cnes = df_cnes[:, dt.count(), by('cnes')].sort(-f.count).to_pandas()\ndf_cnes.to_csv(output_cnes, index=False)\nn_cnes = df_cnes.shape[0]\ndf_cnes\n\n\n\n\n\n  \n    \n      \n      cnes\n      count\n    \n  \n  \n    \n      0\n      27863\n      10\n    \n    \n      1\n      2421534\n      10\n    \n    \n      2\n      2750643\n      9\n    \n    \n      3\n      19445\n      8\n    \n    \n      4\n      2025361\n      8\n    \n    \n      ...\n      ...\n      ...\n    \n    \n      130269\n      9715541\n      1\n    \n    \n      130270\n      9715568\n      1\n    \n    \n      130271\n      9715576\n      1\n    \n    \n      130272\n      9715584\n      1\n    \n    \n      130273\n      9715606\n      1\n    \n  \n\n130274 rows × 2 columns"
  },
  {
    "objectID": "investigation/cnes.html#sinasc",
    "href": "investigation/cnes.html#sinasc",
    "title": "Inspeção CNES",
    "section": "SINASC",
    "text": "SINASC\n\npath_zip_sinasc = f'{Path.home()}/Databases/SINASC/SINASC.csv.gzip'\noutput_sinasc = path_zip_sinasc.replace('SINASC.', 'sinasc_count.')\ndf_cnes_sinasc = dt.fread(path_zip_sinasc)\ndf_cnes_sinasc = df_cnes_sinasc[:, dt.count(), by('cnes')].sort(-f.count).to_pandas()\ndf_cnes_sinasc.to_csv(output_sinasc, index=False)\nn_sinasc = df_cnes_sinasc.shape[0]\ndf_cnes_sinasc\n\n\n\n\n\n  \n    \n      \n      cnes\n      count\n    \n  \n  \n    \n      0\n      2079542\n      145885\n    \n    \n      1\n      3037274\n      115195\n    \n    \n      2\n      2232\n      104344\n    \n    \n      3\n      26794\n      103932\n    \n    \n      4\n      2323397\n      101349\n    \n    \n      ...\n      ...\n      ...\n    \n    \n      8204\n      9491252\n      1\n    \n    \n      8205\n      9505253\n      1\n    \n    \n      8206\n      9569723\n      1\n    \n    \n      8207\n      9619488\n      1\n    \n    \n      8208\n      9728317\n      1\n    \n  \n\n8209 rows × 2 columns"
  },
  {
    "objectID": "investigation/cnes.html#sih",
    "href": "investigation/cnes.html#sih",
    "title": "Inspeção CNES",
    "section": "SIH",
    "text": "SIH\n\npath_zip_sih = f'{Path.home()}/Databases/SIHSUS/SIHSUS.csv.gzip'\noutput_sih = path_zip_sih.replace('SIHSUS.', 'sih_count.')\ndf_cnes_sih = dt.fread(path_zip_sih)\ndf_cnes_sih = df_cnes_sih[:, dt.count(), by('cnes')].sort(-f.count).to_pandas()\ndf_cnes_sih.to_csv(output_sih, index=False)\nn_sih = df_cnes_sih.shape[0]\ndf_cnes_sih\n\n\n\n\n\n  \n    \n      \n      cnes\n      count\n    \n  \n  \n    \n      0\n      2232\n      101955\n    \n    \n      1\n      3151794\n      75209\n    \n    \n      2\n      2323397\n      74712\n    \n    \n      3\n      2311682\n      64833\n    \n    \n      4\n      26794\n      63700\n    \n    \n      ...\n      ...\n      ...\n    \n    \n      4144\n      7320175\n      1\n    \n    \n      4145\n      7603029\n      1\n    \n    \n      4146\n      7621442\n      1\n    \n    \n      4147\n      7704364\n      1\n    \n    \n      4148\n      7743068\n      1\n    \n  \n\n4149 rows × 2 columns"
  },
  {
    "objectID": "investigation/cnes.html#sinasc-sih",
    "href": "investigation/cnes.html#sinasc-sih",
    "title": "Inspeção CNES",
    "section": "SINASC & SIH",
    "text": "SINASC & SIH\n\nLista dos CNES\n\nsinasc_sih = df_cnes_sinasc.merge(df_cnes_sih, on='cnes', how='inner', suffixes=('_sinasc', '_sih'))\nn_sinasc_sih = sinasc_sih.shape[0]\nsinasc_sih\n\n\n\n\n\n  \n    \n      \n      cnes\n      count_sinasc\n      count_sih\n    \n  \n  \n    \n      0\n      2232\n      104344\n      101955\n    \n    \n      1\n      26794\n      103932\n      63700\n    \n    \n      2\n      2323397\n      101349\n      74712\n    \n    \n      3\n      2022621\n      99602\n      28260\n    \n    \n      4\n      2311682\n      87673\n      64833\n    \n    \n      ...\n      ...\n      ...\n      ...\n    \n    \n      4087\n      2796597\n      1\n      63\n    \n    \n      4088\n      5590663\n      1\n      13\n    \n    \n      4089\n      6452302\n      1\n      98\n    \n    \n      4090\n      6559379\n      1\n      2\n    \n    \n      4091\n      7006438\n      1\n      18\n    \n  \n\n4092 rows × 3 columns\n\n\n\n\n\nVenn\n\nc = venn2(\n  subsets = (\n    n_sinasc - n_sinasc_sih,\n    n_sih - n_sinasc_sih,\n    n_sinasc_sih,\n  ), set_labels = ('SINASC', 'SIH'),\n  set_colors=('blue', 'yellow'))\nc.get_patch_by_id('11').set_color('green')\nc.get_patch_by_id('11').set_edgecolor('none')\nc.get_patch_by_id('11').set_alpha(0.4)\nplt.show()"
  },
  {
    "objectID": "investigation/cnes.html#sinasc-cnes",
    "href": "investigation/cnes.html#sinasc-cnes",
    "title": "Inspeção CNES",
    "section": "SINASC & CNES",
    "text": "SINASC & CNES\n\nLista dos CNES\n\nsinasc_cnes = df_cnes_sinasc.merge(df_cnes, on='cnes', how='inner', suffixes=('_sinasc', '_cnes'))\nn_sinasc_cnes = sinasc_cnes.shape[0]\nsinasc_cnes\n\n\n\n\n\n  \n    \n      \n      cnes\n      count_sinasc\n      count_cnes\n    \n  \n  \n    \n      0\n      2232\n      104344\n      2\n    \n    \n      1\n      26794\n      103932\n      3\n    \n    \n      2\n      2323397\n      101349\n      2\n    \n    \n      3\n      2022621\n      99602\n      2\n    \n    \n      4\n      2311682\n      87673\n      4\n    \n    \n      ...\n      ...\n      ...\n      ...\n    \n    \n      7013\n      9208968\n      1\n      1\n    \n    \n      7014\n      9322825\n      1\n      1\n    \n    \n      7015\n      9491112\n      1\n      1\n    \n    \n      7016\n      9491252\n      1\n      1\n    \n    \n      7017\n      9619488\n      1\n      1\n    \n  \n\n7018 rows × 3 columns\n\n\n\n\nsinasc_cnes['count_sinasc'].sum()\n\n24494524\n\n\n\n\nVenn\n\nc = venn2(\n  subsets = (\n    n_sinasc - n_sinasc_cnes,\n    n_cnes - n_sinasc_cnes,\n    n_sinasc_cnes,\n  ), set_labels = ('SINASC', 'CNES'),\n  set_colors=('blue', 'yellow'))\nc.get_patch_by_id('11').set_color('green')\nc.get_patch_by_id('11').set_edgecolor('none')\nc.get_patch_by_id('11').set_alpha(0.4)\nplt.show()\n\n\n\n\n\n4117-1191\n\n2926\n\n\n\nsinasc_not_in_cnes_sus = df_cnes_sinasc[~df_cnes_sinasc['cnes'].isin(set(sinasc_cnes['cnes']))]\nsinasc_not_in_cnes_sus\n\n\n\n\n\n  \n    \n      \n      cnes\n      count\n    \n  \n  \n    \n      0\n      2079542\n      145885\n    \n    \n      1\n      3037274\n      115195\n    \n    \n      19\n      27871\n      62163\n    \n    \n      33\n      2688611\n      53114\n    \n    \n      37\n      3000907\n      51681\n    \n    \n      ...\n      ...\n      ...\n    \n    \n      8201\n      9373314\n      1\n    \n    \n      8202\n      9465219\n      1\n    \n    \n      8205\n      9505253\n      1\n    \n    \n      8206\n      9569723\n      1\n    \n    \n      8208\n      9728317\n      1\n    \n  \n\n1191 rows × 2 columns\n\n\n\n\nsinasc_not_in_cnes_sus['count'].sum()\n\n3702640"
  },
  {
    "objectID": "investigation/cnes.html#sih-cnes",
    "href": "investigation/cnes.html#sih-cnes",
    "title": "Inspeção CNES",
    "section": "SIH & CNES",
    "text": "SIH & CNES\n\nLista dos CNES\n\nsih_cnes = df_cnes_sih.merge(df_cnes, on='cnes', how='inner', suffixes=('_sih', '_cnes'))\nn_sih_cnes = sih_cnes.shape[0]\nsih_cnes\n\n\n\n\n\n  \n    \n      \n      cnes\n      count_sih\n      count_cnes\n    \n  \n  \n    \n      0\n      2232\n      101955\n      2\n    \n    \n      1\n      3151794\n      75209\n      3\n    \n    \n      2\n      2323397\n      74712\n      2\n    \n    \n      3\n      2311682\n      64833\n      4\n    \n    \n      4\n      26794\n      63700\n      3\n    \n    \n      ...\n      ...\n      ...\n      ...\n    \n    \n      4141\n      7320175\n      1\n      3\n    \n    \n      4142\n      7603029\n      1\n      2\n    \n    \n      4143\n      7621442\n      1\n      2\n    \n    \n      4144\n      7704364\n      1\n      2\n    \n    \n      4145\n      7743068\n      1\n      2\n    \n  \n\n4146 rows × 3 columns\n\n\n\n\nsih_cnes['count_sih'].sum()\n\n16816117\n\n\n\n\nVenn\n\nc = venn2(\n  subsets = (\n    n_sih - n_sih_cnes,\n    n_cnes - n_sih_cnes,\n    n_sih_cnes,\n  ), set_labels = ('SIH', 'CNES'),\n  set_colors=('blue', 'yellow'))\nc.get_patch_by_id('11').set_color('green')\nc.get_patch_by_id('11').set_edgecolor('none')\nc.get_patch_by_id('11').set_alpha(0.4)\nplt.show()"
  },
  {
    "objectID": "investigation/cnes.html#sinasc-cnes-not-in-sih",
    "href": "investigation/cnes.html#sinasc-cnes-not-in-sih",
    "title": "Inspeção CNES",
    "section": "(SINASC & CNES) not in SIH",
    "text": "(SINASC & CNES) not in SIH\n\ndf_info_cnes = pd.read_csv(path_zip_cnes)\nsinasc_cnes_sih = sinasc_cnes.merge(df_cnes_sih, on='cnes', how='inner', suffixes=('_sinasc_cnes', '_sih'))\ns_cnes = set(sinasc_cnes_sih['cnes'])\ns_cnes = set(sinasc_cnes[~sinasc_cnes['cnes'].isin(s_cnes)]['cnes'])\nprint(len(s_cnes))\ninpect_cnes = df_info_cnes[df_info_cnes['cnes'].isin(s_cnes)]\ninpect_cnes = inpect_cnes.sort_values(by=['cnes'], ignore_index=True)\ninpect_cnes['cnes'] = inpect_cnes['cnes'].apply(lambda x: ('0' * 7 + str(x))[-7:])\ninpect_cnes\n\n2928\n\n\n\n\n\n\n  \n    \n      \n      cnes\n      uf\n      cod_mun\n      esfera_adm\n      retencao_tributos\n      tipo_retenção\n      natureza\n    \n  \n  \n    \n      0\n      0000035\n      PE\n      260290.0\n      NaN\n      NaN\n      NaN\n      NaN\n    \n    \n      1\n      0000035\n      PE\n      260290.0\n      MUNICIPAL\n      Estabelecimento PUBLICO\n      Estabelecimento PUBLICO\n      Administração Direta da Saúde (MS, SES, e SMS)\n    \n    \n      2\n      0000183\n      PE\n      260290.0\n      PRIVADA\n      Estabelecimento PRIVADO LUCRATIVA\n      NaN\n      Empresa Privada\n    \n    \n      3\n      0000221\n      PE\n      260290.0\n      PRIVADA\n      Estabelecimento PRIVADO LUCRATIVA\n      NaN\n      Empresa Privada\n    \n    \n      4\n      0000426\n      PE\n      261160.0\n      ESTADUAL\n      Estabelecimento PUBLICO\n      Estabelecimento PUBLICO\n      Administração Direta da Saúde (MS, SES, e SMS)\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      5728\n      9541004\n      GO\n      521020.0\n      NaN\n      NaN\n      NaN\n      NaN\n    \n    \n      5729\n      9546146\n      RJ\n      330630.0\n      NaN\n      NaN\n      NaN\n      NaN\n    \n    \n      5730\n      9548149\n      GO\n      520450.0\n      NaN\n      NaN\n      NaN\n      NaN\n    \n    \n      5731\n      9551476\n      PE\n      261060.0\n      NaN\n      NaN\n      NaN\n      NaN\n    \n    \n      5732\n      9619488\n      AP\n      160027.0\n      NaN\n      NaN\n      NaN\n      NaN\n    \n  \n\n5733 rows × 7 columns\n\n\n\n\n# inpect_cnes.to_excel('inspect_cnes.xlsx')\n\n\nRepetidos\n\ninpect_cnes['cnes'].value_counts().hist()"
  },
  {
    "objectID": "investigation/sih.html",
    "href": "investigation/sih.html",
    "title": "Coleta SIH",
    "section": "",
    "text": "import os, sys\nimport sqlite3\nimport pandas as pd\nfrom tqdm import tqdm\nfrom pathlib import Path\nfrom zipfile import ZipFile\nfrom datatable import dt, f, by"
  },
  {
    "objectID": "investigation/sih.html#listar-arquivos-no-zip",
    "href": "investigation/sih.html#listar-arquivos-no-zip",
    "title": "Coleta SIH",
    "section": "Listar arquivos no ZIP",
    "text": "Listar arquivos no ZIP\n\ndef get_zip_namelist(zip_path):\n  files = ZipFile(zip_path).namelist()\n  files = [f'{zip_path}/{f}'\n    for f in files if 'dict' not in f]\n  return files"
  },
  {
    "objectID": "investigation/sih.html#abrir-uma-tabela",
    "href": "investigation/sih.html#abrir-uma-tabela",
    "title": "Coleta SIH",
    "section": "Abrir uma tabela",
    "text": "Abrir uma tabela\n\ndef read_table(table_path, columns):\n  cols_order = list(columns.values())\n  columns[...] = None\n  df = dt.fread(table_path, columns=columns)\n  return df"
  },
  {
    "objectID": "investigation/sih.html#carregar-tabelas-do-zip",
    "href": "investigation/sih.html#carregar-tabelas-do-zip",
    "title": "Coleta SIH",
    "section": "Carregar tabelas do ZIP",
    "text": "Carregar tabelas do ZIP\n\ndef data_load(zip_path, cols, filter_func):\n  files = get_zip_namelist(zip_path)\n  dfs = list()\n  for file_path in tqdm(files):\n    df = read_table(file_path, cols)\n    df = filter_func(df, cols)\n    dfs.append(df)\n  df = dt.rbind(*dfs)\n  return df"
  },
  {
    "objectID": "investigation/sih.html#agrupar-por-colunas",
    "href": "investigation/sih.html#agrupar-por-colunas",
    "title": "Coleta SIH",
    "section": "Agrupar por colunas",
    "text": "Agrupar por colunas\n\ndef group_cols(df_base, cols):\n  df = df_base[:, cols]\n  df['count'] = 1\n  df = df[:, dt.sum(f.count), by(cols)]\n  return df"
  },
  {
    "objectID": "investigation/sih.html#filtro-de-colunas",
    "href": "investigation/sih.html#filtro-de-colunas",
    "title": "Coleta SIH",
    "section": "Filtro de Colunas",
    "text": "Filtro de Colunas\n\ncols_sih = {\n  # Infomações do procedimento:\n  'ano_internacao': 'ano',\n  'PROC_REA': 'parto_normal',\n  'CNES': 'cnes',\n  # Infomações da gestante:\n  'def_idade_anos': 'idade',\n  # Infomações de localidade do hospital de interção:\n  'int_codigo_adotado': 'hosp_cod_municipio',\n  'int_RSAUDCOD': 'hosp_regiao_saude',\n  # Infomações de localidade da residência:\n  'res_codigo_adotado': 'cod_municipio', # Armazena o código atribuído ao município de residência atualmente, tratando os casos em que múltiplos códigos tenham sido utilizados para um mesmo município ao longo do tempo\n  'res_REGIAO': 'regiao', # Nome da região da unidade da federação de residência\n  'res_SIGLA_UF': 'uf', # Sigla da unidade da federação de residência\n  'res_CODIGO_UF': 'cod_uf', # Código da UF de residência\n  'res_NOME_UF': 'nome_uf', # Nome da unidade da federação de residência\n  'res_MUNNOME': 'municipio', # Nome do município de residência\n  'res_MUNNOMEX': 'nome_municipio', # Nome do município de residência em maiúsculas e sem acentos\n  'res_CAPITAL': 'capital', # Indica (S/N) se o município de residência é capital de UF\n  'res_FRONTEIRA': 'fronteira', # Indica (S/N) se o município de residência faz parte da faixa de fronteira (conforme IBGE)\n  'res_AMAZONIA': 'amazonia', # Indica (S/N) se o município de residência faz parte da Amazônia Legal (conforme IBGE)\n  'res_MSAUDCOD': 'macroregiao_saude', # Código da Macrorregional de Saúde a que o Município de residência pertence\n  'res_RSAUDCOD': 'regiao_saude', # Código da Regional de Saúde a que o Município de residência pertence\n  'def_regiao_res': 'nome_regiao_saude', # Nome da Regional de Saúde a que o Município de residência pertence\n  'res_CSAUDCOD': 'microregiao_saude', # Código da Microrregional de Saúde a que o Município de residência pertence\n  'res_LATITUDE': 'latitude', # Latitude do município de residência\n  'res_LONGITUDE': 'longitude', # Longitude do município de residência\n  'res_ALTITUDE': 'altitude', # Altitude do município de residência\n  'res_AREA': 'area', # Área do município de residência\n}"
  },
  {
    "objectID": "investigation/sih.html#filtro-de-linhas",
    "href": "investigation/sih.html#filtro-de-linhas",
    "title": "Coleta SIH",
    "section": "Filtro de Linhas",
    "text": "Filtro de Linhas\n\ndef filter_sih(df, cols):\n  cols = list(cols.values())[:-1]\n  cols = [c for c in cols if c in df.names]\n  df_filtered = df[\n    (\n      (f['ano'] > 2009) & (f['ano'] < 2020)\n    ) & (\n      (f['idade'] > 9) & (f['idade'] < 50)\n    ) & (\n      (f['parto_normal'] == 310010039) | (f['parto_normal'] == 411010034)\n    ) & (\n      (f['cnes'] != None)\n    ) & (\n      (f['uf'] != 'DF')\n    ) & (\n      (f['regiao_saude'] != None)\n    ) & (\n      (f['hosp_regiao_saude'] != None)\n    ) & (\n      (f['cod_municipio'] != None)\n    ), cols]\n  return df_filtered"
  },
  {
    "objectID": "investigation/sih.html#municípios",
    "href": "investigation/sih.html#municípios",
    "title": "Coleta SIH",
    "section": "Municípios",
    "text": "Municípios\n\nColunas da tabela\n\ncols_mun = df_sih.names[6:]\ncols_mun\n\n('cod_municipio',\n 'regiao',\n 'uf',\n 'cod_uf',\n 'nome_uf',\n 'municipio',\n 'nome_municipio',\n 'capital',\n 'fronteira',\n 'amazonia',\n 'macroregiao_saude',\n 'regiao_saude',\n 'nome_regiao_saude',\n 'microregiao_saude',\n 'latitude',\n 'longitude',\n 'altitude',\n 'area')\n\n\n\n\nTabela resutante\n\ndf_mun = group_cols(df_sih, cols_mun)\ndf_mun = df_mun.sort(-f.count)\ndf_mun\n\n\n\n  \n  \n    cod_municipioregiaoufcod_ufnome_ufmunicipionome_municipiocapitalfronteiraamazonia…latitudelongitudealtitudeareacount\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    0355030SudesteSP35SAO PAULOSão PauloSAO PAULOSNN…−23.548−46.6367601522.99806352\n    1330455SudesteRJ33RIO DE JANEIRORio de JaneiroRIO DE JANEIROSNN…−22.903−43.20821182.3368216\n    2130260NorteAM13AMAZONASManausMANAUSSNS…−3.102−60.0259211401.1297036\n    3230440NordesteCE23CEARAFortalezaFORTALEZASNN…−3.717−38.54321313.14203370\n    4292740NordesteBA29BAHIASalvadorSALVADORSNN…−12.971−38.5118706.799169924\n    5150140NortePA15PARABelémBELEMSNS…−1.456−48.504101064.92126918\n    6310620SudesteMG31MINAS GERAISBelo HorizonteBELO HORIZONTESNN…−19.817−43.956858330.954125370\n    7431490SulRS43RIO GRANDE DO SULPorto AlegrePORTO ALEGRESNN…−30.033−51.233496.827105321\n    8410690SulPR41PARANACuritibaCURITIBASNN…−25.428−49.273934434.967101337\n    9270430NordesteAL27ALAGOASMaceióMACEIOSNN…−9.666−35.73516510.65593551\n    10520870Centro-OesteGO52GOIASGoiâniaGOIANIASNN…−16.679−49.254749739.49292068\n    11351880SudesteSP35SAO PAULOGuarulhosGUARULHOSNNN…−23.463−46.533759318.01491617\n    12221100NordestePI22PIAUITeresinaTERESINASNN…−5.089−42.802721755.786245\n    13500270Centro-OesteMS50MATO GROSSO DO SULCampo GrandeCAMPO GRANDESNN…−20.443−54.6465328096.0584481\n    14261160NordestePE26PERNAMBUCORecifeRECIFESNN…−8.054−34.8814217.49483833\n    ⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋱⋮⋮⋮⋮⋮\n    5564520020Centro-OesteGO52GOIASÁgua LimpaAGUA LIMPANNN…−18.074−48.762682452.85625\n    5565510120Centro-OesteMT51MATO GROSSOAraguainhaARAGUAINHANNS…−16.856−53.033462688.67623\n    5566350640SudesteSP35SAO PAULOBilacBILACNNN…−21.403−50.471431157.27818\n    5567500627Centro-OesteMS50MATO GROSSO DO SULParaíso das ÁguasPARAISO DAS AGUASNNN…−19.0216−53.011605032.4715\n    5568330513SudesteRJ33RIO DE JANEIROSão José de UbáSAO JOSE DE UBANNN…−21.358−41.94395250.5966\n  \n  \n  \n    5569 rows × 19 columns\n  \n\n\n\n\n\nExportando tabela\n\noutput_mun = f'{Path.home()}/Databases/GESTANTES/municipios.csv.gzip'\ndf_mun.to_csv(output_mun)\n\n\ndt.fread(output_mun)\n\n\n\n  \n  \n    cod_municipioregiaoufcod_ufnome_ufmunicipionome_municipiocapitalfronteiraamazonia…latitudelongitudealtitudeareacount\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    0355030SudesteSP35SAO PAULOSão PauloSAO PAULOSNN…−23.548−46.6367601522.99806352\n    1330455SudesteRJ33RIO DE JANEIRORio de JaneiroRIO DE JANEIROSNN…−22.903−43.20821182.3368216\n    2130260NorteAM13AMAZONASManausMANAUSSNS…−3.102−60.0259211401.1297036\n    3230440NordesteCE23CEARAFortalezaFORTALEZASNN…−3.717−38.54321313.14203370\n    4292740NordesteBA29BAHIASalvadorSALVADORSNN…−12.971−38.5118706.799169924\n    5150140NortePA15PARABelémBELEMSNS…−1.456−48.504101064.92126918\n    6310620SudesteMG31MINAS GERAISBelo HorizonteBELO HORIZONTESNN…−19.817−43.956858330.954125370\n    7431490SulRS43RIO GRANDE DO SULPorto AlegrePORTO ALEGRESNN…−30.033−51.233496.827105321\n    8410690SulPR41PARANACuritibaCURITIBASNN…−25.428−49.273934434.967101337\n    9270430NordesteAL27ALAGOASMaceióMACEIOSNN…−9.666−35.73516510.65593551\n    10520870Centro-OesteGO52GOIASGoiâniaGOIANIASNN…−16.679−49.254749739.49292068\n    11351880SudesteSP35SAO PAULOGuarulhosGUARULHOSNNN…−23.463−46.533759318.01491617\n    12221100NordestePI22PIAUITeresinaTERESINASNN…−5.089−42.802721755.786245\n    13500270Centro-OesteMS50MATO GROSSO DO SULCampo GrandeCAMPO GRANDESNN…−20.443−54.6465328096.0584481\n    14261160NordestePE26PERNAMBUCORecifeRECIFESNN…−8.054−34.8814217.49483833\n    ⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋱⋮⋮⋮⋮⋮\n    5564520020Centro-OesteGO52GOIASÁgua LimpaAGUA LIMPANNN…−18.074−48.762682452.85625\n    5565510120Centro-OesteMT51MATO GROSSOAraguainhaARAGUAINHANNS…−16.856−53.033462688.67623\n    5566350640SudesteSP35SAO PAULOBilacBILACNNN…−21.403−50.471431157.27818\n    5567500627Centro-OesteMS50MATO GROSSO DO SULParaíso das ÁguasPARAISO DAS AGUASNNN…−19.0216−53.011605032.4715\n    5568330513SudesteRJ33RIO DE JANEIROSão José de UbáSAO JOSE DE UBANNN…−21.358−41.94395250.5966\n  \n  \n  \n    5569 rows × 19 columns"
  },
  {
    "objectID": "investigation/sih.html#procedimentos",
    "href": "investigation/sih.html#procedimentos",
    "title": "Coleta SIH",
    "section": "Procedimentos",
    "text": "Procedimentos\n\nColunas da tabela\n\ncols_proc = [\n  'ano',\n  'parto_normal',\n  'cnes',\n  'hosp_cod_municipio',\n  'hosp_regiao_saude',\n  'cod_municipio',\n  'regiao_saude',\n  'idade'\n]\n\n\n\nTabela resutante\n\ndf_proc = group_cols(df_sih, cols_proc)\ndf_proc = df_proc.sort(f.ano, -f.count)\ndf_proc\n\n\n\n  \n  \n    anoparto_normalcneshosp_cod_municipiohosp_regiao_saudecod_municipioregiao_saudeidadecount\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    0201031001003920773883550303501355030350122362\n    1201031001003920773883550303501355030350120333\n    2201031001003920773883550303501355030350119331\n    3201031001003920773883550303501355030350124327\n    4201031001003920777013550303501355030350121318\n    5201031001003920773883550303501355030350121303\n    6201031001003920773883550303501355030350123297\n    7201031001003920777013550303501355030350120296\n    8201031001003920777013550303501355030350122295\n    9201031001003920773883550303501355030350118292\n    10201031001003931517941302601301130260130120288\n    11201031001003931517941302601301130260130119276\n    12201031001003920773883550303501355030350125270\n    13201031001003920791863550303501355030350122269\n    14201031001003931517941302601301130260130122269\n    ⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮\n    3,355,6862019411010034992383727043027013556403520291\n    3,355,6872019411010034992383727043027014209104213241\n    3,355,6882019411010034992383727043027015102855109281\n    3,355,6892019411010034992383727043027015106225114291\n    3,355,6902019411010034992383727043027015107925114141\n  \n  \n  \n    3,355,691 rows × 9 columns\n  \n\n\n\n\nwith age: 3_355_691 rows × 9 columns\nwithout age: 461_276 rows × 8 columns\n\n\n\nAtualizando variável parto normal\n\ndf_proc[:, dt.update(parto_normal = f.parto_normal == 310010039)] # {310010039: 'normal', 411010034: 'cesariano'}\ndf_proc\n\n\n\n  \n  \n    anoparto_normalcneshosp_cod_municipiohosp_regiao_saudecod_municipioregiao_saudeidadecount\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    02010120773883550303501355030350122362\n    12010120773883550303501355030350120333\n    22010120773883550303501355030350119331\n    32010120773883550303501355030350124327\n    42010120777013550303501355030350121318\n    52010120773883550303501355030350121303\n    62010120773883550303501355030350123297\n    72010120777013550303501355030350120296\n    82010120777013550303501355030350122295\n    92010120773883550303501355030350118292\n    102010131517941302601301130260130120288\n    112010131517941302601301130260130119276\n    122010120773883550303501355030350125270\n    132010120791863550303501355030350122269\n    142010131517941302601301130260130122269\n    ⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮\n    3,355,68620190992383727043027013556403520291\n    3,355,68720190992383727043027014209104213241\n    3,355,68820190992383727043027015102855109281\n    3,355,68920190992383727043027015106225114291\n    3,355,69020190992383727043027015107925114141\n  \n  \n  \n    3,355,691 rows × 9 columns\n  \n\n\n\n\n\nExportando tabela\n\noutput_proc = f'{Path.home()}/Databases/GESTANTES/procedimentos.csv.gzip'\ndf_proc.to_csv(output_proc)\n\n\ndt.fread(output_proc)\n\n\n\n  \n  \n    anoparto_normalcneshosp_cod_municipiohosp_regiao_saudecod_municipioregiao_saudeidadecount\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    02010120773883550303501355030350122362\n    12010120773883550303501355030350120333\n    22010120773883550303501355030350119331\n    32010120773883550303501355030350124327\n    42010120777013550303501355030350121318\n    52010120773883550303501355030350121303\n    62010120773883550303501355030350123297\n    72010120777013550303501355030350120296\n    82010120777013550303501355030350122295\n    92010120773883550303501355030350118292\n    102010131517941302601301130260130120288\n    112010131517941302601301130260130119276\n    122010120773883550303501355030350125270\n    132010120791863550303501355030350122269\n    142010131517941302601301130260130122269\n    ⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮\n    3,355,68620190992383727043027013556403520291\n    3,355,68720190992383727043027014209104213241\n    3,355,68820190992383727043027015102855109281\n    3,355,68920190992383727043027015106225114291\n    3,355,69020190992383727043027015107925114141\n  \n  \n  \n    3,355,691 rows × 9 columns"
  },
  {
    "objectID": "investigation/data_compare.html",
    "href": "investigation/data_compare.html",
    "title": "Comparação",
    "section": "",
    "text": "import os\nimport sqlite3\nimport pandas as pd\nfrom tqdm import tqdm\nfrom pathlib import Path\nfrom zipfile import ZipFile\nfrom datatable import dt, f, by\nimport matplotlib.pyplot as plt\nfrom matplotlib_venn import venn2, venn3\nfrom plotly import express as px, io as pio\n\npd.options.plotting.backend = 'plotly'\npio.renderers.default = 'plotly_mimetype+notebook_connected'"
  },
  {
    "objectID": "investigation/data_compare.html#contagem",
    "href": "investigation/data_compare.html#contagem",
    "title": "Comparação",
    "section": "Contagem",
    "text": "Contagem\n\nall_: Base original sem mudanças\nflt_: Base com filtros básicos\nsus_: Base filtrada e com CNES de VINC_SUS=1\n\n\nall_sih = 157033546\nall_sinasc = 74398079\nflt_sih = 16816991 # dt.fread(path_zip_sihsus).shape[0]\nflt_sinasc = 28197164 # dt.fread(path_zip_sinasc).shape[0]\nsus_sih = 16816117\nsus_sinasc = 24494524"
  },
  {
    "objectID": "investigation/data_compare.html#barplot",
    "href": "investigation/data_compare.html#barplot",
    "title": "Comparação",
    "section": "Barplot",
    "text": "Barplot\n\ndf_filter = pd.DataFrame([\n    ['SIH', 'all', all_sih],\n    ['SINASC', 'all', all_sinasc],\n    ['SIH', 'filter', flt_sih],\n    ['SINASC', 'filter', flt_sinasc],\n    ['SIH', 'sus', sus_sih],\n    ['SINASC', 'sus', sus_sinasc],\n], columns=['database', 'selection', 'records'])\nfig = px.bar(df_filter, x='database', y='records', color='selection', barmode='overlay')\nfig.show()\n\n\n                                                \n\n\n\nflt_sinasc - sus_sinasc == 3702640\n\nTrue\n\n\n\n3702640 / flt_sinasc * 100\n\n13.131249653333931"
  },
  {
    "objectID": "investigation/data_compare.html#sinasc-com-cnes-do-sih",
    "href": "investigation/data_compare.html#sinasc-com-cnes-do-sih",
    "title": "Comparação",
    "section": "SINASC com CNES do SIH",
    "text": "SINASC com CNES do SIH\n\ndf_filter = pd.DataFrame([\n    ['SINASC_SIH', 'all', all_sinasc],\n    ['SINASC_CNES', 'all', all_sinasc],\n    ['SINASC_SIH', 'filter', flt_sinasc],\n    ['SINASC_CNES', 'filter', flt_sinasc],\n    ['SINASC_SIH', 'sus', 22773582],\n    ['SINASC_CNES', 'sus', sus_sinasc],\n], columns=['database', 'selection', 'records'])\nfig = px.bar(df_filter, x='database', y='records', color='selection', barmode='overlay')\nfig.show()"
  },
  {
    "objectID": "investigation/data_selection.html",
    "href": "investigation/data_selection.html",
    "title": "Seleção dos Dados",
    "section": "",
    "text": "import os\nimport numpy as np\nimport pandas as pd\nfrom tqdm import tqdm\nfrom pathlib import Path\nfrom zipfile import ZipFile\nfrom datatable import dt, f, by\nimport matplotlib.pyplot as plt\nfrom matplotlib_venn import venn2, venn3\nfrom plotly import express as px, io as pio\n\npd.options.plotting.backend = 'plotly'\npio.renderers.default = 'plotly_mimetype+notebook_connected'"
  },
  {
    "objectID": "investigation/data_selection.html#sinasc-com-filtros-básicos",
    "href": "investigation/data_selection.html#sinasc-com-filtros-básicos",
    "title": "Seleção dos Dados",
    "section": "SINASC com filtros básicos",
    "text": "SINASC com filtros básicos\n\npath_zip_sinasc = f'{Path.home()}/Databases/SINASC/SINASC.csv.gzip'\ndf_sinasc = pd.read_csv(path_zip_sinasc)\ndf_sinasc\n\n\n\n\n\n  \n    \n      \n      ano\n      cnes\n      hosp_municipio\n      res_municipio\n      hosp_regiao_saude\n      res_regiao_saude\n      tipo_parto\n      n_gestados\n      n_pre_natal\n      idade\n      nivel_escolaridade\n      raca_cor\n      nasc_raca_cor\n      nasc_sexo\n      nasc_peso\n      nasc_apgar1\n      nasc_apgar5\n    \n  \n  \n    \n      0\n      2010\n      2515598\n      110002\n      120040\n      1104\n      1201\n      Cesáreo\n      1\n      4\n      24\n      4\n      NaN\n      Branca\n      Masculino\n      3400.0\n      9.0\n      10.0\n    \n    \n      1\n      2010\n      3792595\n      110011\n      120040\n      1101\n      1201\n      Cesáreo\n      1\n      3\n      22\n      4\n      NaN\n      Parda\n      Masculino\n      3950.0\n      8.0\n      9.0\n    \n    \n      2\n      2010\n      2798484\n      110030\n      120040\n      1103\n      1201\n      Vaginal\n      1\n      4\n      20\n      3\n      NaN\n      Branca\n      Masculino\n      3550.0\n      8.0\n      9.0\n    \n    \n      3\n      2010\n      5701929\n      120001\n      120001\n      1201\n      1201\n      Vaginal\n      1\n      3\n      21\n      4\n      NaN\n      Parda\n      Feminino\n      3000.0\n      9.0\n      10.0\n    \n    \n      4\n      2010\n      5701929\n      120001\n      120001\n      1201\n      1201\n      Vaginal\n      1\n      3\n      31\n      3\n      NaN\n      Parda\n      Feminino\n      3000.0\n      9.0\n      10.0\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      28197159\n      2019\n      3427633\n      520870\n      170950\n      5201\n      1707\n      Cesáreo\n      1\n      4\n      29\n      5\n      4.0\n      Parda\n      Feminino\n      1700.0\n      7.0\n      8.0\n    \n    \n      28197160\n      2019\n      10537\n      530010\n      170240\n      5301\n      1709\n      Cesáreo\n      1\n      3\n      36\n      5\n      NaN\n      Ignorado\n      Ignorado\n      2870.0\n      8.0\n      9.0\n    \n    \n      28197161\n      2019\n      5717515\n      530010\n      170610\n      5301\n      1710\n      Cesáreo\n      1\n      3\n      21\n      4\n      4.0\n      Parda\n      Masculino\n      2554.0\n      8.0\n      9.0\n    \n    \n      28197162\n      2019\n      5717515\n      530010\n      172100\n      5301\n      1705\n      Vaginal\n      1\n      4\n      21\n      4\n      4.0\n      Parda\n      Feminino\n      2610.0\n      8.0\n      9.0\n    \n    \n      28197163\n      2019\n      3019608\n      530010\n      170240\n      5301\n      1709\n      Vaginal\n      1\n      4\n      30\n      5\n      4.0\n      Parda\n      Masculino\n      2975.0\n      9.0\n      10.0\n    \n  \n\n28197164 rows × 17 columns"
  },
  {
    "objectID": "investigation/data_selection.html#cnes-da-base-sih",
    "href": "investigation/data_selection.html#cnes-da-base-sih",
    "title": "Seleção dos Dados",
    "section": "CNES da base SIH",
    "text": "CNES da base SIH\n\npath_zip_sih = f'{Path.home()}/Databases/SIHSUS/sih_count.csv.gzip'\ndf_cnes_sih = pd.read_csv(path_zip_sih)\ndf_cnes_sih\n\n\n\n\n\n  \n    \n      \n      cnes\n      count\n    \n  \n  \n    \n      0\n      2232\n      101955\n    \n    \n      1\n      3151794\n      75209\n    \n    \n      2\n      2323397\n      74712\n    \n    \n      3\n      2311682\n      64833\n    \n    \n      4\n      26794\n      63700\n    \n    \n      ...\n      ...\n      ...\n    \n    \n      4144\n      7320175\n      1\n    \n    \n      4145\n      7603029\n      1\n    \n    \n      4146\n      7621442\n      1\n    \n    \n      4147\n      7704364\n      1\n    \n    \n      4148\n      7743068\n      1\n    \n  \n\n4149 rows × 2 columns"
  },
  {
    "objectID": "investigation/data_selection.html#filtro-sus",
    "href": "investigation/data_selection.html#filtro-sus",
    "title": "Seleção dos Dados",
    "section": "Filtro SUS",
    "text": "Filtro SUS\n\ndf_sinasc_sus = df_sinasc.loc[\n  df_sinasc['cnes'].isin(df_cnes_sih['cnes'])].copy()\ndf_sinasc_sus\n\n\n\n\n\n  \n    \n      \n      ano\n      cnes\n      hosp_municipio\n      res_municipio\n      hosp_regiao_saude\n      res_regiao_saude\n      tipo_parto\n      n_gestados\n      n_pre_natal\n      idade\n      nivel_escolaridade\n      raca_cor\n      nasc_raca_cor\n      nasc_sexo\n      nasc_peso\n      nasc_apgar1\n      nasc_apgar5\n    \n  \n  \n    \n      2\n      2010\n      2798484\n      110030\n      120040\n      1103\n      1201\n      Vaginal\n      1\n      4\n      20\n      3\n      NaN\n      Branca\n      Masculino\n      3550.0\n      8.0\n      9.0\n    \n    \n      3\n      2010\n      5701929\n      120001\n      120001\n      1201\n      1201\n      Vaginal\n      1\n      3\n      21\n      4\n      NaN\n      Parda\n      Feminino\n      3000.0\n      9.0\n      10.0\n    \n    \n      4\n      2010\n      5701929\n      120001\n      120001\n      1201\n      1201\n      Vaginal\n      1\n      3\n      31\n      3\n      NaN\n      Parda\n      Feminino\n      3000.0\n      9.0\n      10.0\n    \n    \n      5\n      2010\n      5701929\n      120001\n      120001\n      1201\n      1201\n      Vaginal\n      1\n      4\n      23\n      3\n      NaN\n      Parda\n      Masculino\n      3900.0\n      7.0\n      9.0\n    \n    \n      6\n      2010\n      5701929\n      120001\n      120001\n      1201\n      1201\n      Vaginal\n      1\n      4\n      26\n      4\n      NaN\n      Parda\n      Feminino\n      3250.0\n      7.0\n      10.0\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      28197146\n      2019\n      2361787\n      520110\n      170730\n      5211\n      1710\n      Cesáreo\n      1\n      3\n      18\n      3\n      4.0\n      Parda\n      Feminino\n      2840.0\n      8.0\n      9.0\n    \n    \n      28197149\n      2019\n      2338564\n      520870\n      171110\n      5201\n      1704\n      Cesáreo\n      1\n      4\n      27\n      4\n      4.0\n      Parda\n      Feminino\n      3082.0\n      8.0\n      9.0\n    \n    \n      28197160\n      2019\n      10537\n      530010\n      170240\n      5301\n      1709\n      Cesáreo\n      1\n      3\n      36\n      5\n      NaN\n      Ignorado\n      Ignorado\n      2870.0\n      8.0\n      9.0\n    \n    \n      28197161\n      2019\n      5717515\n      530010\n      170610\n      5301\n      1710\n      Cesáreo\n      1\n      3\n      21\n      4\n      4.0\n      Parda\n      Masculino\n      2554.0\n      8.0\n      9.0\n    \n    \n      28197162\n      2019\n      5717515\n      530010\n      172100\n      5301\n      1705\n      Vaginal\n      1\n      4\n      21\n      4\n      4.0\n      Parda\n      Feminino\n      2610.0\n      8.0\n      9.0\n    \n  \n\n22773582 rows × 17 columns\n\n\n\n\n28197164 - 22773582\n\n5423582\n\n\n\n5423582 / 28197164\n\n0.1923449464634103"
  },
  {
    "objectID": "investigation/data_selection.html#editar-variáveis",
    "href": "investigation/data_selection.html#editar-variáveis",
    "title": "Seleção dos Dados",
    "section": "Editar variáveis",
    "text": "Editar variáveis\n\ndf_sinasc_sus.info()\n\n<class 'pandas.core.frame.DataFrame'>\nInt64Index: 22773582 entries, 2 to 28197162\nData columns (total 17 columns):\n #   Column              Dtype  \n---  ------              -----  \n 0   ano                 int64  \n 1   cnes                int64  \n 2   hosp_municipio      int64  \n 3   res_municipio       int64  \n 4   hosp_regiao_saude   int64  \n 5   res_regiao_saude    int64  \n 6   tipo_parto          object \n 7   n_gestados          int64  \n 8   n_pre_natal         int64  \n 9   idade               int64  \n 10  nivel_escolaridade  int64  \n 11  raca_cor            float64\n 12  nasc_raca_cor       object \n 13  nasc_sexo           object \n 14  nasc_peso           float64\n 15  nasc_apgar1         float64\n 16  nasc_apgar5         float64\ndtypes: float64(4), int64(10), object(3)\nmemory usage: 3.1+ GB\n\n\n\ntipo_parto\n\ndf_sinasc_sus['tipo_parto'].value_counts()\n\nVaginal    11563626\nCesáreo    11209956\nName: tipo_parto, dtype: int64\n\n\n\nparto_normal = {\n  'Vaginal': True, 'Cesáreo': False}\n\n\ndf_sinasc_sus.loc[:, 'tipo_parto'] = df_sinasc_sus['tipo_parto'].map(parto_normal)\ndf_sinasc_sus = df_sinasc_sus.rename(columns={'tipo_parto': 'parto_normal'})\n\n\n\nraca_cor\n\ndf_sinasc_sus['raca_cor'].value_counts()\n\n4.0    11625628\n1.0     5830464\n2.0     1122356\n5.0      137716\n3.0       61727\n9.0       15388\nName: raca_cor, dtype: int64\n\n\n\nraca_cor = {\n  1: 'Branca',\n  2: 'Preta',\n  3: 'Amarela',\n  4: 'Parda',\n  5: 'Indígena',\n  9: np.nan\n}\n\n\ndf_sinasc_sus.loc[:, 'raca_cor'] = df_sinasc_sus['raca_cor'].map(raca_cor)\n\n\n\nnasc_sexo\n\ndf_sinasc_sus['nasc_sexo'].value_counts()\n\nMasculino    11666829\nFeminino     11102679\nIgnorado         4074\nName: nasc_sexo, dtype: int64\n\n\n\nsexo_nasc = {\n  'Feminino': True, 'Masculino': False, 'Ignorado': np.nan}\n\n\ndf_sinasc_sus.loc[:, 'nasc_sexo'] = df_sinasc_sus['nasc_sexo'].map(sexo_nasc)\ndf_sinasc_sus = df_sinasc_sus.rename(columns={'nasc_sexo': 'sexo_fem'})\n\n\n\nnasc_peso\n\ndf_sinasc_sus.loc[:, 'nasc_peso'] = df_sinasc_sus['nasc_peso'].astype('Int64')\n\n\n\nnasc_apgar1\n\ndf_sinasc_sus.loc[:, 'nasc_apgar1'] = df_sinasc_sus['nasc_apgar1'].astype('Int64').replace(99, np.nan)\n\n\ndf_sinasc_sus['nasc_apgar1'].value_counts()\n\n9     11111390\n8      7312028\n7      1557666\n10      834776\n6       577964\n5       325601\n4       197379\n3       133466\n2        96165\n1        69305\n0        23272\nName: nasc_apgar1, dtype: Int64\n\n\n\n\nnasc_apgar5\n\ndf_sinasc_sus.loc[:, 'nasc_apgar5'] = df_sinasc_sus['nasc_apgar5'].astype('Int64').replace(99, np.nan)\n\n\ndf_sinasc_sus['nasc_apgar5'].value_counts()\n\n10    10244119\n9     10074459\n8      1357308\n7       291837\n6       102954\n5        56333\n1        31028\n4        28884\n2        18684\n3        18642\n0        14524\nName: nasc_apgar5, dtype: Int64\n\n\n\n\nperiodo\n\ndf_sinasc_sus.loc[:, 'periodo'] = df_sinasc_sus['ano'].apply(\n  lambda x: 'antes' if (x == 2010) | (x == 2011) else ('depois' if (x == 2018) | (x == 2019) else 'durante')\n)\n\n\ndf_sinasc_sus['periodo'].value_counts()\n\ndurante    13682037\ndepois      4573711\nantes       4517834\nName: periodo, dtype: int64"
  },
  {
    "objectID": "investigation/data_selection.html#dataset-final",
    "href": "investigation/data_selection.html#dataset-final",
    "title": "Seleção dos Dados",
    "section": "Dataset final",
    "text": "Dataset final\n\ndf_sinasc_sus\n\n\n\n\n\n  \n    \n      \n      ano\n      cnes\n      hosp_municipio\n      res_municipio\n      hosp_regiao_saude\n      res_regiao_saude\n      parto_normal\n      n_gestados\n      n_pre_natal\n      idade\n      nivel_escolaridade\n      raca_cor\n      nasc_raca_cor\n      sexo_fem\n      nasc_peso\n      nasc_apgar1\n      nasc_apgar5\n      periodo\n    \n  \n  \n    \n      2\n      2010\n      2798484\n      110030\n      120040\n      1103\n      1201\n      True\n      1\n      4\n      20\n      3\n      NaN\n      Branca\n      False\n      3550\n      8\n      9\n      antes\n    \n    \n      3\n      2010\n      5701929\n      120001\n      120001\n      1201\n      1201\n      True\n      1\n      3\n      21\n      4\n      NaN\n      Parda\n      True\n      3000\n      9\n      10\n      antes\n    \n    \n      4\n      2010\n      5701929\n      120001\n      120001\n      1201\n      1201\n      True\n      1\n      3\n      31\n      3\n      NaN\n      Parda\n      True\n      3000\n      9\n      10\n      antes\n    \n    \n      5\n      2010\n      5701929\n      120001\n      120001\n      1201\n      1201\n      True\n      1\n      4\n      23\n      3\n      NaN\n      Parda\n      False\n      3900\n      7\n      9\n      antes\n    \n    \n      6\n      2010\n      5701929\n      120001\n      120001\n      1201\n      1201\n      True\n      1\n      4\n      26\n      4\n      NaN\n      Parda\n      True\n      3250\n      7\n      10\n      antes\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      28197146\n      2019\n      2361787\n      520110\n      170730\n      5211\n      1710\n      False\n      1\n      3\n      18\n      3\n      Parda\n      Parda\n      True\n      2840\n      8\n      9\n      depois\n    \n    \n      28197149\n      2019\n      2338564\n      520870\n      171110\n      5201\n      1704\n      False\n      1\n      4\n      27\n      4\n      Parda\n      Parda\n      True\n      3082\n      8\n      9\n      depois\n    \n    \n      28197160\n      2019\n      10537\n      530010\n      170240\n      5301\n      1709\n      False\n      1\n      3\n      36\n      5\n      NaN\n      Ignorado\n      NaN\n      2870\n      8\n      9\n      depois\n    \n    \n      28197161\n      2019\n      5717515\n      530010\n      170610\n      5301\n      1710\n      False\n      1\n      3\n      21\n      4\n      Parda\n      Parda\n      False\n      2554\n      8\n      9\n      depois\n    \n    \n      28197162\n      2019\n      5717515\n      530010\n      172100\n      5301\n      1705\n      True\n      1\n      4\n      21\n      4\n      Parda\n      Parda\n      True\n      2610\n      8\n      9\n      depois\n    \n  \n\n22773582 rows × 18 columns\n\n\n\n\npath_sinasc_sus = f'{Path.home()}/Databases/SINASC/sinasc_sus.csv.gzip'\ndf_sinasc_sus.to_csv(path_sinasc_sus, index=False)"
  },
  {
    "objectID": "investigation/network.html",
    "href": "investigation/network.html",
    "title": "Rede de Deslocamento",
    "section": "",
    "text": "import os\nimport numpy as np\nimport pandas as pd\nfrom tqdm import tqdm\nfrom pathlib import Path\nfrom zipfile import ZipFile\nfrom datatable import dt, f, by\nimport matplotlib.pyplot as plt\nfrom matplotlib_venn import venn2, venn3\nfrom plotly import express as px, io as pio\n\npd.options.plotting.backend = 'plotly'\npio.renderers.default = 'plotly_mimetype+notebook_connected'"
  },
  {
    "objectID": "investigation/network.html#sih",
    "href": "investigation/network.html#sih",
    "title": "Rede de Deslocamento",
    "section": "SIH",
    "text": "SIH\n\npath_sihsus = f'{Path.home()}/Databases/SIHSUS/SIHSUS.csv.gzip'\ndf_sihsus = pd.read_csv(path_sihsus, low_memory=False)\ndf_sihsus\n\n\n\n\n\n  \n    \n      \n      ano\n      cnes\n      hosp_municipio\n      res_municipio\n      hosp_regiao_saude\n      res_regiao_saude\n      tipo_parto\n      idade\n      periodo\n    \n  \n  \n    \n      0\n      2010\n      2001020\n      120005\n      120005\n      1202\n      1202\n      normal\n      23\n      antes\n    \n    \n      1\n      2010\n      2000733\n      120040\n      120040\n      1201\n      1201\n      normal\n      28\n      antes\n    \n    \n      2\n      2010\n      2000733\n      120040\n      120040\n      1201\n      1201\n      normal\n      38\n      antes\n    \n    \n      3\n      2010\n      2000733\n      120040\n      120040\n      1201\n      1201\n      normal\n      16\n      antes\n    \n    \n      4\n      2010\n      2000733\n      120040\n      120040\n      1201\n      1201\n      normal\n      26\n      antes\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      16816986\n      2019\n      2765640\n      170930\n      171840\n      1704\n      1704\n      cesariano\n      24\n      depois\n    \n    \n      16816987\n      2019\n      2765640\n      170930\n      171670\n      1704\n      1704\n      cesariano\n      27\n      depois\n    \n    \n      16816988\n      2019\n      2765640\n      170930\n      171670\n      1704\n      1704\n      cesariano\n      22\n      depois\n    \n    \n      16816989\n      2019\n      2765640\n      170930\n      170930\n      1704\n      1704\n      cesariano\n      25\n      depois\n    \n    \n      16816990\n      2019\n      2755149\n      171610\n      171250\n      1708\n      1708\n      cesariano\n      21\n      depois\n    \n  \n\n16816991 rows × 9 columns\n\n\n\n\ndf_sihsus.info()\n\n<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 16816991 entries, 0 to 16816990\nData columns (total 9 columns):\n #   Column             Dtype \n---  ------             ----- \n 0   ano                int64 \n 1   cnes               int64 \n 2   hosp_municipio     int64 \n 3   res_municipio      int64 \n 4   hosp_regiao_saude  int64 \n 5   res_regiao_saude   int64 \n 6   tipo_parto         object\n 7   idade              int64 \n 8   periodo            object\ndtypes: int64(7), object(2)\nmemory usage: 1.1+ GB"
  },
  {
    "objectID": "investigation/network.html#sinasc",
    "href": "investigation/network.html#sinasc",
    "title": "Rede de Deslocamento",
    "section": "SINASC",
    "text": "SINASC\n\npath_sinasc_sus = f'{Path.home()}/Databases/SINASC/sinasc_sus.csv.gzip'\n# df_sinasc = pd.read_csv(path_sinasc_sus, low_memory=False)\n# df_sinasc\n\n\n# df_sinasc.info()"
  },
  {
    "objectID": "investigation/network.html#municípios",
    "href": "investigation/network.html#municípios",
    "title": "Rede de Deslocamento",
    "section": "Municípios",
    "text": "Municípios\n\npath_muns = f'{Path.home()}/Databases/MUNICIPIOS/municipios.csv.gzip'\ndf_muns = pd.read_csv(path_muns)\ndf_muns\n\n\n\n\n\n  \n    \n      \n      cod_ibge\n      regiao\n      uf\n      cod_uf\n      nome_uf\n      municipio\n      nome\n      capital\n      fronteira\n      amazonia\n      macroregiao_saude\n      regiao_saude\n      microregiao_saude\n      latitude\n      longitude\n      altitude\n      area\n    \n  \n  \n    \n      0\n      110000\n      Norte\n      RO\n      11\n      RONDONIA\n      Município ignorado - RO\n      MUNICIPIO IGNORADO - RO\n      False\n      False\n      False\n      1100\n      1100\n      11000\n      0.000000\n      0.000000\n      0.0\n      0.000000\n    \n    \n      1\n      110001\n      Norte\n      RO\n      11\n      RONDONIA\n      Alta Floresta D'Oeste\n      ALTA FLORESTA D'OESTE\n      False\n      True\n      True\n      1190\n      1102\n      11900\n      -11.929000\n      -61.995998\n      350.0\n      7066.702148\n    \n    \n      2\n      110002\n      Norte\n      RO\n      11\n      RONDONIA\n      Ariquemes\n      ARIQUEMES\n      False\n      False\n      True\n      1190\n      1104\n      11900\n      -9.913000\n      -63.041000\n      142.0\n      4426.558105\n    \n    \n      3\n      110003\n      Norte\n      RO\n      11\n      RONDONIA\n      Cabixi\n      CABIXI\n      False\n      True\n      True\n      1190\n      1103\n      11900\n      -13.492000\n      -60.544998\n      230.0\n      1314.354980\n    \n    \n      4\n      110004\n      Norte\n      RO\n      11\n      RONDONIA\n      Cacoal\n      CACOAL\n      False\n      False\n      True\n      1190\n      1102\n      11900\n      -11.438000\n      -61.448002\n      200.0\n      3792.637939\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      4789\n      522200\n      Centro-Oeste\n      GO\n      52\n      GOIAS\n      Vianópolis\n      VIANOPOLIS\n      False\n      False\n      False\n      5201\n      5202\n      52900\n      -16.742001\n      -48.515999\n      1002.0\n      954.278992\n    \n    \n      4790\n      522205\n      Centro-Oeste\n      GO\n      52\n      GOIAS\n      Vicentinópolis\n      VICENTINOPOLIS\n      False\n      False\n      False\n      5201\n      5202\n      52900\n      -17.735001\n      -49.806000\n      646.0\n      737.250977\n    \n    \n      4791\n      522220\n      Centro-Oeste\n      GO\n      52\n      GOIAS\n      Vila Boa\n      VILA BOA\n      False\n      False\n      False\n      5202\n      5206\n      52900\n      -15.038000\n      -47.058998\n      0.0\n      1060.170044\n    \n    \n      4792\n      522230\n      Centro-Oeste\n      GO\n      52\n      GOIAS\n      Vila Propício\n      VILA PROPICIO\n      False\n      False\n      False\n      5203\n      5212\n      52900\n      -15.457000\n      -48.889000\n      744.0\n      2181.574951\n    \n    \n      4793\n      530010\n      Centro-Oeste\n      DF\n      53\n      DISTRITO FEDERAL\n      Brasília\n      BRASILIA\n      True\n      False\n      False\n      5301\n      5301\n      53001\n      -15.780000\n      -47.930000\n      1171.0\n      5801.937012\n    \n  \n\n4794 rows × 17 columns\n\n\n\n\ndf_muns.info()\n\n<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 4794 entries, 0 to 4793\nData columns (total 17 columns):\n #   Column             Non-Null Count  Dtype  \n---  ------             --------------  -----  \n 0   cod_ibge           4794 non-null   int64  \n 1   regiao             4794 non-null   object \n 2   uf                 4794 non-null   object \n 3   cod_uf             4794 non-null   int64  \n 4   nome_uf            4794 non-null   object \n 5   municipio          4794 non-null   object \n 6   nome               4794 non-null   object \n 7   capital            4794 non-null   bool   \n 8   fronteira          4794 non-null   bool   \n 9   amazonia           4794 non-null   bool   \n 10  macroregiao_saude  4794 non-null   int64  \n 11  regiao_saude       4794 non-null   int64  \n 12  microregiao_saude  4794 non-null   int64  \n 13  latitude           4790 non-null   float64\n 14  longitude          4790 non-null   float64\n 15  altitude           4790 non-null   float64\n 16  area               4790 non-null   float64\ndtypes: bool(3), float64(4), int64(5), object(5)\nmemory usage: 538.5+ KB"
  },
  {
    "objectID": "investigation/network.html#distâncias",
    "href": "investigation/network.html#distâncias",
    "title": "Rede de Deslocamento",
    "section": "Distâncias",
    "text": "Distâncias\n\npath_dist = f'{Path.home()}/Databases/DISTANCIAS/matriz_distancias.zip'\ndf_dist = pd.read_csv(path_dist, low_memory=False)\ndf_dist\n\n\n\n\n\n  \n    \n      \n      origem\n      destino\n      distancia\n      tempo\n    \n  \n  \n    \n      0\n      110001\n      110001\n      0.000000\n      0.000000\n    \n    \n      1\n      110001\n      110002\n      309.050000\n      6.169056\n    \n    \n      2\n      110001\n      110003\n      399.499700\n      6.289056\n    \n    \n      3\n      110001\n      110004\n      81.201103\n      1.917750\n    \n    \n      4\n      110001\n      110005\n      391.704300\n      6.136361\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      31024895\n      530010\n      522200\n      161.728900\n      2.356000\n    \n    \n      31024896\n      530010\n      522205\n      382.708800\n      5.479556\n    \n    \n      31024897\n      530010\n      522220\n      161.603400\n      2.248944\n    \n    \n      31024898\n      530010\n      522230\n      190.000900\n      3.216083\n    \n    \n      31024899\n      530010\n      530010\n      0.000000\n      0.000000\n    \n  \n\n31024900 rows × 4 columns\n\n\n\n\ndf_dist.info()\n\n<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 31024900 entries, 0 to 31024899\nData columns (total 4 columns):\n #   Column     Dtype  \n---  ------     -----  \n 0   origem     int64  \n 1   destino    int64  \n 2   distancia  float64\n 3   tempo      float64\ndtypes: float64(2), int64(2)\nmemory usage: 946.8 MB"
  },
  {
    "objectID": "investigation/network.html#indicador-socioeconômico",
    "href": "investigation/network.html#indicador-socioeconômico",
    "title": "Rede de Deslocamento",
    "section": "Indicador SocioEconômico",
    "text": "Indicador SocioEconômico\n\npath_socioeco = f'{Path.home()}/Databases/HEALTH/health_regions.csv'\ndf_socioeco = pd.read_csv(path_socioeco)\ndf_socioeco\n\n\n\n\n\n  \n    \n      \n      UF\n      Município\n      Cód IBGE\n      Cód Região de Saúde\n      Nome da Região de Saúde\n      Grupo\n    \n  \n  \n    \n      0\n      AC\n      Acrelândia\n      120001\n      12002\n      Baixo Acre e Purus\n      2\n    \n    \n      1\n      AC\n      Assis Brasil\n      120005\n      12001\n      Alto Acre\n      1\n    \n    \n      2\n      AC\n      Brasiléia\n      120010\n      12001\n      Alto Acre\n      1\n    \n    \n      3\n      AC\n      Bujari\n      120013\n      12002\n      Baixo Acre e Purus\n      2\n    \n    \n      4\n      AC\n      Capixaba\n      120017\n      12002\n      Baixo Acre e Purus\n      2\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      5566\n      TO\n      Tocantinópolis\n      172120\n      17002\n      Bico do Papagaio\n      1\n    \n    \n      5567\n      TO\n      Tupirama\n      172125\n      17004\n      Cerrado Tocantins Araguaia\n      2\n    \n    \n      5568\n      TO\n      Tupiratins\n      172130\n      17004\n      Cerrado Tocantins Araguaia\n      2\n    \n    \n      5569\n      TO\n      Wanderlândia\n      172208\n      17001\n      Médio Norte Araguaia\n      3\n    \n    \n      5570\n      TO\n      Xambioá\n      172210\n      17001\n      Médio Norte Araguaia\n      3\n    \n  \n\n5571 rows × 6 columns\n\n\n\n\ndf_socioeco[['Cód IBGE', 'Grupo']]\n\n\n\n\n\n  \n    \n      \n      Cód IBGE\n      Grupo\n    \n  \n  \n    \n      0\n      120001\n      2\n    \n    \n      1\n      120005\n      1\n    \n    \n      2\n      120010\n      1\n    \n    \n      3\n      120013\n      2\n    \n    \n      4\n      120017\n      2\n    \n    \n      ...\n      ...\n      ...\n    \n    \n      5566\n      172120\n      1\n    \n    \n      5567\n      172125\n      2\n    \n    \n      5568\n      172130\n      2\n    \n    \n      5569\n      172208\n      3\n    \n    \n      5570\n      172210\n      3\n    \n  \n\n5571 rows × 2 columns"
  },
  {
    "objectID": "investigation/network.html#tabela-final",
    "href": "investigation/network.html#tabela-final",
    "title": "Rede de Deslocamento",
    "section": "Tabela Final",
    "text": "Tabela Final\n\npath_deslc = f'{Path.home()}/Databases/GESTANTES/deslocamento_sih.csv.gzip'\ndf_deslc.to_csv(path_deslc, index=False)\n\n\npd.read_csv(path_deslc, low_memory=False)\n\n\n\n\n\n  \n    \n      \n      periodo\n      tipo_parto\n      res_municipio\n      hosp_municipio\n      res_regiao_saude\n      hosp_regiao_saude\n      cnes\n      nascimentos\n      mun_diff\n      regsau_diff\n      ...\n      capital\n      fronteira\n      amazonia\n      res_latitude\n      res_longitude\n      hosp_latitude\n      hosp_longitude\n      distancia\n      tempo\n      socioeconomico\n    \n  \n  \n    \n      0\n      antes\n      normal\n      130260\n      130260\n      1301\n      1301\n      3151794\n      9330\n      False\n      False\n      ...\n      True\n      False\n      True\n      -3.102000\n      -60.025002\n      -3.102000\n      -60.025002\n      0.0000\n      0.000000\n      4\n    \n    \n      1\n      antes\n      normal\n      355030\n      355030\n      3501\n      3501\n      2077701\n      8989\n      False\n      False\n      ...\n      True\n      False\n      False\n      -23.548000\n      -46.636002\n      -23.548000\n      -46.636002\n      0.0000\n      0.000000\n      5\n    \n    \n      2\n      antes\n      normal\n      355030\n      355030\n      3501\n      3501\n      2077388\n      8722\n      False\n      False\n      ...\n      True\n      False\n      False\n      -23.548000\n      -46.636002\n      -23.548000\n      -46.636002\n      0.0000\n      0.000000\n      5\n    \n    \n      3\n      antes\n      normal\n      355030\n      355030\n      3501\n      3501\n      2079186\n      8594\n      False\n      False\n      ...\n      True\n      False\n      False\n      -23.548000\n      -46.636002\n      -23.548000\n      -46.636002\n      0.0000\n      0.000000\n      5\n    \n    \n      4\n      depois\n      normal\n      130260\n      130260\n      1301\n      1301\n      3151794\n      8524\n      False\n      False\n      ...\n      True\n      False\n      True\n      -3.102000\n      -60.025002\n      -3.102000\n      -60.025002\n      0.0000\n      0.000000\n      4\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      124776\n      antes\n      normal\n      310920\n      310620\n      3114\n      3101\n      26972\n      1\n      True\n      True\n      ...\n      False\n      False\n      False\n      -17.872999\n      -44.180000\n      -19.816999\n      -43.956001\n      286.4915\n      3.550611\n      1\n    \n    \n      124777\n      depois\n      cesariano\n      520725\n      521020\n      5214\n      5204\n      2519593\n      1\n      True\n      True\n      ...\n      False\n      False\n      False\n      -16.719999\n      -52.319000\n      -16.441999\n      -51.118000\n      172.7509\n      2.706389\n      3\n    \n    \n      124778\n      antes\n      normal\n      310910\n      316370\n      3110\n      3111\n      2764814\n      1\n      True\n      True\n      ...\n      False\n      False\n      False\n      -22.441000\n      -46.351002\n      -22.115999\n      -45.054001\n      196.7931\n      3.693056\n      3\n    \n    \n      124779\n      depois\n      cesariano\n      520725\n      521565\n      5214\n      5204\n      3485536\n      1\n      True\n      True\n      ...\n      False\n      False\n      False\n      -16.719999\n      -52.319000\n      -16.733000\n      -51.533001\n      107.2883\n      1.703556\n      3\n    \n    \n      124780\n      antes\n      normal\n      231340\n      231290\n      2313\n      2311\n      2426579\n      1\n      True\n      True\n      ...\n      False\n      False\n      False\n      -3.732000\n      -40.992001\n      -3.674000\n      -40.238998\n      89.0676\n      1.151917\n      1\n    \n  \n\n124781 rows × 22 columns\n\n\n\n\ndf_deslc = df_deslc[[\n  'periodo', 'tipo_parto', 'cnes',\n  'res_municipio', 'hosp_municipio',\n  'res_regiao_saude', 'hosp_regiao_saude',\n  'mun_diff', 'regsau_diff',\n  'regiao', 'uf',\n  'capital', 'fronteira', 'amazonia', 'socioeconomico',\n  'res_latitude', 'res_longitude',\n  'hosp_latitude', 'hosp_longitude',\n  'distancia', 'tempo',\n  'nascimentos']]\ndf_deslc\n\n\n\n\n\n  \n    \n      \n      periodo\n      tipo_parto\n      cnes\n      res_municipio\n      hosp_municipio\n      res_regiao_saude\n      hosp_regiao_saude\n      mun_diff\n      regsau_diff\n      regiao\n      ...\n      fronteira\n      amazonia\n      socioeconomico\n      res_latitude\n      res_longitude\n      hosp_latitude\n      hosp_longitude\n      distancia\n      tempo\n      nascimentos\n    \n  \n  \n    \n      0\n      antes\n      normal\n      3151794\n      130260\n      130260\n      1301\n      1301\n      False\n      False\n      Norte\n      ...\n      False\n      True\n      4\n      -3.102000\n      -60.025002\n      -3.102000\n      -60.025002\n      0.0000\n      0.000000\n      9330\n    \n    \n      1\n      antes\n      normal\n      2077701\n      355030\n      355030\n      3501\n      3501\n      False\n      False\n      Sudeste\n      ...\n      False\n      False\n      5\n      -23.548000\n      -46.636002\n      -23.548000\n      -46.636002\n      0.0000\n      0.000000\n      8989\n    \n    \n      2\n      antes\n      normal\n      2077388\n      355030\n      355030\n      3501\n      3501\n      False\n      False\n      Sudeste\n      ...\n      False\n      False\n      5\n      -23.548000\n      -46.636002\n      -23.548000\n      -46.636002\n      0.0000\n      0.000000\n      8722\n    \n    \n      3\n      antes\n      normal\n      2079186\n      355030\n      355030\n      3501\n      3501\n      False\n      False\n      Sudeste\n      ...\n      False\n      False\n      5\n      -23.548000\n      -46.636002\n      -23.548000\n      -46.636002\n      0.0000\n      0.000000\n      8594\n    \n    \n      4\n      depois\n      normal\n      3151794\n      130260\n      130260\n      1301\n      1301\n      False\n      False\n      Norte\n      ...\n      False\n      True\n      4\n      -3.102000\n      -60.025002\n      -3.102000\n      -60.025002\n      0.0000\n      0.000000\n      8524\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      124776\n      antes\n      normal\n      26972\n      310920\n      310620\n      3114\n      3101\n      True\n      True\n      Sudeste\n      ...\n      False\n      False\n      1\n      -17.872999\n      -44.180000\n      -19.816999\n      -43.956001\n      286.4915\n      3.550611\n      1\n    \n    \n      124777\n      depois\n      cesariano\n      2519593\n      520725\n      521020\n      5214\n      5204\n      True\n      True\n      Centro-Oeste\n      ...\n      False\n      False\n      3\n      -16.719999\n      -52.319000\n      -16.441999\n      -51.118000\n      172.7509\n      2.706389\n      1\n    \n    \n      124778\n      antes\n      normal\n      2764814\n      310910\n      316370\n      3110\n      3111\n      True\n      True\n      Sudeste\n      ...\n      False\n      False\n      3\n      -22.441000\n      -46.351002\n      -22.115999\n      -45.054001\n      196.7931\n      3.693056\n      1\n    \n    \n      124779\n      depois\n      cesariano\n      3485536\n      520725\n      521565\n      5214\n      5204\n      True\n      True\n      Centro-Oeste\n      ...\n      False\n      False\n      3\n      -16.719999\n      -52.319000\n      -16.733000\n      -51.533001\n      107.2883\n      1.703556\n      1\n    \n    \n      124780\n      antes\n      normal\n      2426579\n      231340\n      231290\n      2313\n      2311\n      True\n      True\n      Nordeste\n      ...\n      False\n      False\n      1\n      -3.732000\n      -40.992001\n      -3.674000\n      -40.238998\n      89.0676\n      1.151917\n      1\n    \n  \n\n124781 rows × 22 columns\n\n\n\n\ndf_deslc.to_excel(path_deslc.replace('csv.gzip', 'xlsx'))"
  },
  {
    "objectID": "investigation/network.html#rj",
    "href": "investigation/network.html#rj",
    "title": "Rede de Deslocamento",
    "section": "RJ",
    "text": "RJ\n\ndf_deslc_rj = df_deslc[df_deslc['uf'] == 'RJ']\ndf_deslc_rj\n\n\n\n\n\n  \n    \n      \n      periodo\n      tipo_parto\n      cnes\n      res_municipio\n      hosp_municipio\n      res_regiao_saude\n      hosp_regiao_saude\n      mun_diff\n      regsau_diff\n      regiao\n      ...\n      fronteira\n      amazonia\n      socioeconomico\n      res_latitude\n      res_longitude\n      hosp_latitude\n      hosp_longitude\n      distancia\n      tempo\n      nascimentos\n    \n  \n  \n    \n      11\n      antes\n      normal\n      2280248\n      330455\n      330455\n      3305\n      3305\n      False\n      False\n      Sudeste\n      ...\n      False\n      False\n      5\n      -22.903000\n      -43.208\n      -22.903000\n      -43.208000\n      0.0000\n      0.000000\n      6738\n    \n    \n      18\n      antes\n      normal\n      2270609\n      330455\n      330455\n      3305\n      3305\n      False\n      False\n      Sudeste\n      ...\n      False\n      False\n      5\n      -22.903000\n      -43.208\n      -22.903000\n      -43.208000\n      0.0000\n      0.000000\n      6250\n    \n    \n      21\n      depois\n      normal\n      7027397\n      330455\n      330455\n      3305\n      3305\n      False\n      False\n      Sudeste\n      ...\n      False\n      False\n      5\n      -22.903000\n      -43.208\n      -22.903000\n      -43.208000\n      0.0000\n      0.000000\n      5991\n    \n    \n      22\n      depois\n      normal\n      2270609\n      330455\n      330455\n      3305\n      3305\n      False\n      False\n      Sudeste\n      ...\n      False\n      False\n      5\n      -22.903000\n      -43.208\n      -22.903000\n      -43.208000\n      0.0000\n      0.000000\n      5986\n    \n    \n      24\n      depois\n      normal\n      2798662\n      330350\n      330350\n      3305\n      3305\n      False\n      False\n      Sudeste\n      ...\n      False\n      False\n      5\n      -22.759001\n      -43.451\n      -22.759001\n      -43.451000\n      0.0000\n      0.000000\n      5973\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      121177\n      antes\n      normal\n      2296241\n      330455\n      330430\n      3305\n      3302\n      True\n      True\n      Sudeste\n      ...\n      False\n      False\n      5\n      -22.903000\n      -43.208\n      -22.708000\n      -42.625999\n      75.5213\n      0.979028\n      1\n    \n    \n      121178\n      antes\n      normal\n      5042488\n      330455\n      330330\n      3305\n      3305\n      True\n      False\n      Sudeste\n      ...\n      False\n      False\n      5\n      -22.903000\n      -43.208\n      -22.882999\n      -43.104000\n      17.8948\n      0.306417\n      1\n    \n    \n      121180\n      antes\n      normal\n      6146376\n      330455\n      330185\n      3305\n      3305\n      True\n      False\n      Sudeste\n      ...\n      False\n      False\n      5\n      -22.903000\n      -43.208\n      -22.537001\n      -42.981998\n      73.8015\n      0.981694\n      1\n    \n    \n      121181\n      antes\n      normal\n      2280868\n      330455\n      330010\n      3305\n      3301\n      True\n      True\n      Sudeste\n      ...\n      False\n      False\n      5\n      -22.903000\n      -43.208\n      -23.007000\n      -44.318001\n      154.9166\n      2.006583\n      1\n    \n    \n      121182\n      antes\n      normal\n      2448203\n      330455\n      320245\n      3305\n      3202\n      True\n      True\n      Sudeste\n      ...\n      False\n      False\n      5\n      -22.903000\n      -43.208\n      -20.233999\n      -41.511002\n      497.5082\n      6.306889\n      1\n    \n  \n\n3464 rows × 22 columns\n\n\n\n\ndf_deslc_rj.to_excel(path_deslc.replace('.csv.gzip', '_rj.xlsx'), index=False)\n\n\ndf_deslc_rj['periodo'].value_counts()\n\ndepois    2127\nantes     1337\nName: periodo, dtype: int64\n\n\n\ndf_deslc_rj['tipo_parto'].value_counts()\n\nnormal       1887\ncesariano    1577\nName: tipo_parto, dtype: int64"
  },
  {
    "objectID": "investigation/data_network.html",
    "href": "investigation/data_network.html",
    "title": "Rede de Deslocamento",
    "section": "",
    "text": "import os\nimport numpy as np\nimport pandas as pd\nfrom tqdm import tqdm\nfrom pathlib import Path\nfrom zipfile import ZipFile\nfrom datatable import dt, f, by\nimport matplotlib.pyplot as plt\nfrom matplotlib_venn import venn2, venn3\nfrom plotly import express as px, io as pio\n\npd.options.plotting.backend = 'plotly'\npio.renderers.default = 'plotly_mimetype+notebook_connected'"
  },
  {
    "objectID": "investigation/data_network.html#procedimentos-sih",
    "href": "investigation/data_network.html#procedimentos-sih",
    "title": "Rede de Deslocamento",
    "section": "Procedimentos SIH",
    "text": "Procedimentos SIH\n\noutput_proc = f'{Path.home()}/Databases/GESTANTES/procedimentos_age.csv.gzip'\ndf_proc = dt.fread(output_proc)\n\n\npath_sihsus = f'{Path.home()}/Databases/GESTANTES/procedimentos.csv.gzip'\ndf_sihsus = pd.read_csv(path_sihsus)\ndf_sihsus\n\n\n\n\n\n  \n    \n      \n      ano\n      periodo\n      tipo_parto\n      cnes\n      hosp_cod_municipio\n      hosp_regiao_saude\n      cod_municipio\n      regiao_saude\n      count\n    \n  \n  \n    \n      0\n      2010\n      antes\n      normal\n      2077701\n      355030\n      3501\n      355030\n      3501\n      4358\n    \n    \n      1\n      2010\n      antes\n      normal\n      2077388\n      355030\n      3501\n      355030\n      3501\n      4207\n    \n    \n      2\n      2010\n      antes\n      normal\n      3151794\n      130260\n      1301\n      130260\n      1301\n      4145\n    \n    \n      3\n      2010\n      antes\n      normal\n      2079186\n      355030\n      3501\n      355030\n      3501\n      4059\n    \n    \n      4\n      2010\n      antes\n      normal\n      3956369\n      292740\n      2901\n      292740\n      2901\n      3935\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      461271\n      2019\n      depois\n      cesariano\n      9923837\n      270430\n      2701\n      355640\n      3520\n      1\n    \n    \n      461272\n      2019\n      depois\n      cesariano\n      9923837\n      270430\n      2701\n      420910\n      4213\n      1\n    \n    \n      461273\n      2019\n      depois\n      cesariano\n      9923837\n      270430\n      2701\n      510285\n      5109\n      1\n    \n    \n      461274\n      2019\n      depois\n      cesariano\n      9923837\n      270430\n      2701\n      510622\n      5114\n      1\n    \n    \n      461275\n      2019\n      depois\n      cesariano\n      9923837\n      270430\n      2701\n      510792\n      5114\n      1\n    \n  \n\n461276 rows × 9 columns\n\n\n\n\ndf_sihsus.info()\n\n<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 461276 entries, 0 to 461275\nData columns (total 9 columns):\n #   Column              Non-Null Count   Dtype \n---  ------              --------------   ----- \n 0   ano                 461276 non-null  int64 \n 1   periodo             461276 non-null  object\n 2   tipo_parto          461276 non-null  object\n 3   cnes                461276 non-null  int64 \n 4   hosp_cod_municipio  461276 non-null  int64 \n 5   hosp_regiao_saude   461276 non-null  int64 \n 6   cod_municipio       461276 non-null  int64 \n 7   regiao_saude        461276 non-null  int64 \n 8   count               461276 non-null  int64 \ndtypes: int64(7), object(2)\nmemory usage: 31.7+ MB\n\n\n\nCriando coluna periodo\n\ndf_proc['periodo'] = df_proc['ano'].apply(\n  lambda x: 'antes' if (x == 2010) | (x == 2011) else ('depois' if (x == 2018) | (x == 2019) else 'durante'))\ndf_proc\n\n\n\n\n\n  \n    \n      \n      ano\n      tipo_parto\n      cnes\n      hosp_cod_municipio\n      hosp_regiao_saude\n      cod_municipio\n      regiao_saude\n      idade\n      count\n      periodo\n    \n  \n  \n    \n      0\n      2011\n      normal\n      6627595\n      130260\n      1301\n      130260\n      1301\n      22\n      519\n      antes\n    \n    \n      1\n      2012\n      normal\n      6627595\n      130260\n      1301\n      130260\n      1301\n      27\n      449\n      durante\n    \n    \n      2\n      2011\n      normal\n      6627595\n      130260\n      1301\n      130260\n      1301\n      21\n      429\n      antes\n    \n    \n      3\n      2012\n      normal\n      2077388\n      355030\n      3501\n      355030\n      3501\n      20\n      404\n      durante\n    \n    \n      4\n      2011\n      cesariano\n      6627595\n      130260\n      1301\n      130260\n      1301\n      22\n      402\n      antes\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      3355686\n      2019\n      cesariano\n      9923837\n      270430\n      2701\n      355640\n      3520\n      29\n      1\n      depois\n    \n    \n      3355687\n      2019\n      cesariano\n      9923837\n      270430\n      2701\n      420910\n      4213\n      24\n      1\n      depois\n    \n    \n      3355688\n      2019\n      cesariano\n      9923837\n      270430\n      2701\n      510285\n      5109\n      28\n      1\n      depois\n    \n    \n      3355689\n      2019\n      cesariano\n      9923837\n      270430\n      2701\n      510622\n      5114\n      29\n      1\n      depois\n    \n    \n      3355690\n      2019\n      cesariano\n      9923837\n      270430\n      2701\n      510792\n      5114\n      14\n      1\n      depois\n    \n  \n\n3355691 rows × 10 columns"
  },
  {
    "objectID": "investigation/data_network.html#municípios",
    "href": "investigation/data_network.html#municípios",
    "title": "Rede de Deslocamento",
    "section": "Municípios",
    "text": "Municípios\n\npath_muns = f'{Path.home()}/Databases/GESTANTES/municipios.csv.gzip'\ndf_muns = pd.read_csv(path_muns)\ndf_muns\n\n\n\n\n\n  \n    \n      \n      cod_municipio\n      regiao\n      uf\n      cod_uf\n      nome_uf\n      municipio\n      nome\n      capital\n      fronteira\n      amazonia\n      macroregiao_saude\n      regiao_saude\n      microregiao_saude\n      latitude\n      longitude\n      altitude\n      area\n      count\n    \n  \n  \n    \n      0\n      355030\n      Sudeste\n      SP\n      35\n      SAO PAULO\n      São Paulo\n      SAO PAULO\n      S\n      N\n      N\n      3590\n      3501\n      35900\n      -23.5480\n      -46.6360\n      760.0\n      1522.986\n      806352\n    \n    \n      1\n      330455\n      Sudeste\n      RJ\n      33\n      RIO DE JANEIRO\n      Rio de Janeiro\n      RIO DE JANEIRO\n      S\n      N\n      N\n      3390\n      3305\n      33900\n      -22.9030\n      -43.2080\n      2.0\n      1182.296\n      368216\n    \n    \n      2\n      130260\n      Norte\n      AM\n      13\n      AMAZONAS\n      Manaus\n      MANAUS\n      S\n      N\n      S\n      1390\n      1301\n      13900\n      -3.1020\n      -60.0250\n      92.0\n      11401.058\n      297036\n    \n    \n      3\n      230440\n      Nordeste\n      CE\n      23\n      CEARA\n      Fortaleza\n      FORTALEZA\n      S\n      N\n      N\n      2301\n      2301\n      23900\n      -3.7170\n      -38.5430\n      21.0\n      313.140\n      203370\n    \n    \n      4\n      292740\n      Nordeste\n      BA\n      29\n      BAHIA\n      Salvador\n      SALVADOR\n      S\n      N\n      N\n      2902\n      2901\n      29021\n      -12.9710\n      -38.5110\n      8.0\n      706.799\n      169924\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      5564\n      520020\n      Centro-Oeste\n      GO\n      52\n      GOIAS\n      Água Limpa\n      AGUA LIMPA\n      N\n      N\n      N\n      5205\n      5216\n      52900\n      -18.0740\n      -48.7620\n      682.0\n      452.856\n      25\n    \n    \n      5565\n      510120\n      Centro-Oeste\n      MT\n      51\n      MATO GROSSO\n      Araguainha\n      ARAGUAINHA\n      N\n      N\n      S\n      5190\n      5107\n      51900\n      -16.8560\n      -53.0330\n      462.0\n      688.676\n      23\n    \n    \n      5566\n      350640\n      Sudeste\n      SP\n      35\n      SAO PAULO\n      Bilac\n      BILAC\n      N\n      N\n      N\n      3590\n      3506\n      35900\n      -21.4030\n      -50.4710\n      431.0\n      157.278\n      18\n    \n    \n      5567\n      500627\n      Centro-Oeste\n      MS\n      50\n      MATO GROSSO DO SUL\n      Paraíso das Águas\n      PARAISO DAS AGUAS\n      N\n      N\n      N\n      0\n      0\n      0\n      -19.0216\n      -53.0116\n      0.0\n      5032.469\n      15\n    \n    \n      5568\n      330513\n      Sudeste\n      RJ\n      33\n      RIO DE JANEIRO\n      São José de Ubá\n      SAO JOSE DE UBA\n      N\n      N\n      N\n      3390\n      3306\n      33900\n      -21.3580\n      -41.9430\n      95.0\n      250.596\n      6\n    \n  \n\n5569 rows × 18 columns\n\n\n\n\ndf_muns.info()\n\n<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 5569 entries, 0 to 5568\nData columns (total 18 columns):\n #   Column             Non-Null Count  Dtype  \n---  ------             --------------  -----  \n 0   cod_municipio      5569 non-null   int64  \n 1   regiao             5569 non-null   object \n 2   uf                 5569 non-null   object \n 3   cod_uf             5569 non-null   int64  \n 4   nome_uf            5569 non-null   object \n 5   municipio          5569 non-null   object \n 6   nome               5569 non-null   object \n 7   capital            5569 non-null   object \n 8   fronteira          5569 non-null   object \n 9   amazonia           5569 non-null   object \n 10  macroregiao_saude  5569 non-null   int64  \n 11  regiao_saude       5569 non-null   int64  \n 12  microregiao_saude  5569 non-null   int64  \n 13  latitude           5565 non-null   float64\n 14  longitude          5565 non-null   float64\n 15  altitude           5565 non-null   float64\n 16  area               5565 non-null   float64\n 17  count              5569 non-null   int64  \ndtypes: float64(4), int64(6), object(8)\nmemory usage: 783.3+ KB"
  },
  {
    "objectID": "investigation/data_network.html#distâncias",
    "href": "investigation/data_network.html#distâncias",
    "title": "Rede de Deslocamento",
    "section": "Distâncias",
    "text": "Distâncias\n\npath_dist = f'{Path.home()}/Databases/DISTANCIAS/matriz_distancias.zip'\ndf_dist = pd.read_csv(path_dist, low_memory=False)\ndf_dist\n\n\n\n\n\n  \n    \n      \n      origem\n      destino\n      distancia\n      tempo\n    \n  \n  \n    \n      0\n      110001\n      110001\n      0.000000\n      0.000000\n    \n    \n      1\n      110001\n      110002\n      309.050000\n      6.169056\n    \n    \n      2\n      110001\n      110003\n      399.499700\n      6.289056\n    \n    \n      3\n      110001\n      110004\n      81.201103\n      1.917750\n    \n    \n      4\n      110001\n      110005\n      391.704300\n      6.136361\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      31024895\n      530010\n      522200\n      161.728900\n      2.356000\n    \n    \n      31024896\n      530010\n      522205\n      382.708800\n      5.479556\n    \n    \n      31024897\n      530010\n      522220\n      161.603400\n      2.248944\n    \n    \n      31024898\n      530010\n      522230\n      190.000900\n      3.216083\n    \n    \n      31024899\n      530010\n      530010\n      0.000000\n      0.000000\n    \n  \n\n31024900 rows × 4 columns\n\n\n\n\ndf_dist.info()\n\n<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 31024900 entries, 0 to 31024899\nData columns (total 4 columns):\n #   Column     Dtype  \n---  ------     -----  \n 0   origem     int64  \n 1   destino    int64  \n 2   distancia  float64\n 3   tempo      float64\ndtypes: float64(2), int64(2)\nmemory usage: 946.8 MB"
  },
  {
    "objectID": "investigation/data_network.html#indicador-socioeconômico",
    "href": "investigation/data_network.html#indicador-socioeconômico",
    "title": "Rede de Deslocamento",
    "section": "Indicador SocioEconômico",
    "text": "Indicador SocioEconômico\n\npath_socioeco = f'{Path.home()}/Databases/HEALTH/health_regions.csv'\ndf_socioeco = pd.read_csv(path_socioeco)\ndf_socioeco\n\n\n\n\n\n  \n    \n      \n      UF\n      Município\n      Cód IBGE\n      Cód Região de Saúde\n      Nome da Região de Saúde\n      Grupo\n    \n  \n  \n    \n      0\n      AC\n      Acrelândia\n      120001\n      12002\n      Baixo Acre e Purus\n      2\n    \n    \n      1\n      AC\n      Assis Brasil\n      120005\n      12001\n      Alto Acre\n      1\n    \n    \n      2\n      AC\n      Brasiléia\n      120010\n      12001\n      Alto Acre\n      1\n    \n    \n      3\n      AC\n      Bujari\n      120013\n      12002\n      Baixo Acre e Purus\n      2\n    \n    \n      4\n      AC\n      Capixaba\n      120017\n      12002\n      Baixo Acre e Purus\n      2\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      5566\n      TO\n      Tocantinópolis\n      172120\n      17002\n      Bico do Papagaio\n      1\n    \n    \n      5567\n      TO\n      Tupirama\n      172125\n      17004\n      Cerrado Tocantins Araguaia\n      2\n    \n    \n      5568\n      TO\n      Tupiratins\n      172130\n      17004\n      Cerrado Tocantins Araguaia\n      2\n    \n    \n      5569\n      TO\n      Wanderlândia\n      172208\n      17001\n      Médio Norte Araguaia\n      3\n    \n    \n      5570\n      TO\n      Xambioá\n      172210\n      17001\n      Médio Norte Araguaia\n      3\n    \n  \n\n5571 rows × 6 columns\n\n\n\n\ndf_socioeco[['Cód IBGE', 'Grupo']]\n\n\n\n\n\n  \n    \n      \n      Cód IBGE\n      Grupo\n    \n  \n  \n    \n      0\n      120001\n      2\n    \n    \n      1\n      120005\n      1\n    \n    \n      2\n      120010\n      1\n    \n    \n      3\n      120013\n      2\n    \n    \n      4\n      120017\n      2\n    \n    \n      ...\n      ...\n      ...\n    \n    \n      5566\n      172120\n      1\n    \n    \n      5567\n      172125\n      2\n    \n    \n      5568\n      172130\n      2\n    \n    \n      5569\n      172208\n      3\n    \n    \n      5570\n      172210\n      3\n    \n  \n\n5571 rows × 2 columns"
  },
  {
    "objectID": "investigation/data_network.html#tabela-final",
    "href": "investigation/data_network.html#tabela-final",
    "title": "Rede de Deslocamento",
    "section": "Tabela Final",
    "text": "Tabela Final\n\npath_deslc = f'{Path.home()}/Databases/GESTANTES/deslocamento.csv.gzip'\ndf_deslc.to_csv(path_deslc, index=False)\n\n\npd.read_csv(path_deslc, low_memory=False)\n\n\n\n\n\n  \n    \n      \n      periodo\n      tipo_parto\n      cnes\n      hosp_cod_municipio\n      hosp_regiao_saude\n      cod_municipio\n      regiao_saude\n      count\n      mun_diff\n      regsau_diff\n      ...\n      capital\n      fronteira\n      amazonia\n      latitude\n      longitude\n      hosp_latitude\n      hosp_longitude\n      distancia\n      tempo\n      socioeconomico\n    \n  \n  \n    \n      0\n      antes\n      normal\n      3151794\n      130260\n      1301\n      130260\n      1301\n      9330\n      False\n      False\n      ...\n      S\n      N\n      S\n      -3.102\n      -60.025\n      -3.102\n      -60.025\n      0.0000\n      0.000000\n      4\n    \n    \n      1\n      antes\n      normal\n      2077701\n      355030\n      3501\n      355030\n      3501\n      8989\n      False\n      False\n      ...\n      S\n      N\n      N\n      -23.548\n      -46.636\n      -23.548\n      -46.636\n      0.0000\n      0.000000\n      5\n    \n    \n      2\n      antes\n      normal\n      2077388\n      355030\n      3501\n      355030\n      3501\n      8722\n      False\n      False\n      ...\n      S\n      N\n      N\n      -23.548\n      -46.636\n      -23.548\n      -46.636\n      0.0000\n      0.000000\n      5\n    \n    \n      3\n      antes\n      normal\n      2079186\n      355030\n      3501\n      355030\n      3501\n      8594\n      False\n      False\n      ...\n      S\n      N\n      N\n      -23.548\n      -46.636\n      -23.548\n      -46.636\n      0.0000\n      0.000000\n      5\n    \n    \n      4\n      depois\n      normal\n      3151794\n      130260\n      1301\n      130260\n      1301\n      8524\n      False\n      False\n      ...\n      S\n      N\n      S\n      -3.102\n      -60.025\n      -3.102\n      -60.025\n      0.0000\n      0.000000\n      4\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      124774\n      depois\n      cesariano\n      2101432\n      315340\n      3107\n      314800\n      3107\n      1\n      True\n      False\n      ...\n      N\n      N\n      N\n      -18.579\n      -46.518\n      -18.418\n      -46.418\n      28.4474\n      0.531889\n      3\n    \n    \n      124775\n      depois\n      cesariano\n      2101777\n      313630\n      3107\n      310020\n      3114\n      1\n      True\n      True\n      ...\n      N\n      N\n      N\n      -19.160\n      -45.446\n      -17.743\n      -46.173\n      373.7197\n      4.552083\n      3\n    \n    \n      124776\n      depois\n      cesariano\n      2101777\n      313630\n      3107\n      311580\n      3125\n      1\n      True\n      True\n      ...\n      N\n      N\n      N\n      -18.584\n      -49.199\n      -17.743\n      -46.173\n      555.0323\n      6.626444\n      5\n    \n    \n      124777\n      depois\n      cesariano\n      2101777\n      313630\n      3107\n      311680\n      3104\n      1\n      True\n      True\n      ...\n      N\n      N\n      N\n      -18.234\n      -42.840\n      -17.743\n      -46.173\n      656.4867\n      7.842056\n      3\n    \n    \n      124778\n      depois\n      normal\n      9923837\n      270430\n      2701\n      510623\n      5105\n      1\n      True\n      True\n      ...\n      N\n      N\n      S\n      -14.797\n      -57.288\n      -9.666\n      -35.735\n      3217.7273\n      39.940667\n      2\n    \n  \n\n124779 rows × 22 columns\n\n\n\n\ndf_deslc = df_deslc[[\n  'periodo', 'tipo_parto', 'cnes',\n  'cod_municipio', 'hosp_cod_municipio',\n  'regiao_saude', 'hosp_regiao_saude',\n  'mun_diff', 'regsau_diff',\n  'regiao', 'uf',\n  'capital', 'fronteira', 'amazonia', 'socioeconomico',\n  'latitude', 'longitude',\n  'hosp_latitude', 'hosp_longitude',\n  'distancia', 'tempo',\n  'count']]\ndf_deslc\n\n\n\n\n\n  \n    \n      \n      periodo\n      tipo_parto\n      cnes\n      cod_municipio\n      hosp_cod_municipio\n      regiao_saude\n      hosp_regiao_saude\n      mun_diff\n      regsau_diff\n      regiao\n      ...\n      fronteira\n      amazonia\n      socioeconomico\n      latitude\n      longitude\n      hosp_latitude\n      hosp_longitude\n      distancia\n      tempo\n      count\n    \n  \n  \n    \n      0\n      antes\n      normal\n      3151794\n      130260\n      130260\n      1301\n      1301\n      False\n      False\n      Norte\n      ...\n      N\n      S\n      4\n      -3.102\n      -60.025\n      -3.102\n      -60.025\n      0.0000\n      0.000000\n      9330\n    \n    \n      1\n      antes\n      normal\n      2077701\n      355030\n      355030\n      3501\n      3501\n      False\n      False\n      Sudeste\n      ...\n      N\n      N\n      5\n      -23.548\n      -46.636\n      -23.548\n      -46.636\n      0.0000\n      0.000000\n      8989\n    \n    \n      2\n      antes\n      normal\n      2077388\n      355030\n      355030\n      3501\n      3501\n      False\n      False\n      Sudeste\n      ...\n      N\n      N\n      5\n      -23.548\n      -46.636\n      -23.548\n      -46.636\n      0.0000\n      0.000000\n      8722\n    \n    \n      3\n      antes\n      normal\n      2079186\n      355030\n      355030\n      3501\n      3501\n      False\n      False\n      Sudeste\n      ...\n      N\n      N\n      5\n      -23.548\n      -46.636\n      -23.548\n      -46.636\n      0.0000\n      0.000000\n      8594\n    \n    \n      4\n      depois\n      normal\n      3151794\n      130260\n      130260\n      1301\n      1301\n      False\n      False\n      Norte\n      ...\n      N\n      S\n      4\n      -3.102\n      -60.025\n      -3.102\n      -60.025\n      0.0000\n      0.000000\n      8524\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      124774\n      depois\n      cesariano\n      2101432\n      314800\n      315340\n      3107\n      3107\n      True\n      False\n      Sudeste\n      ...\n      N\n      N\n      3\n      -18.579\n      -46.518\n      -18.418\n      -46.418\n      28.4474\n      0.531889\n      1\n    \n    \n      124775\n      depois\n      cesariano\n      2101777\n      310020\n      313630\n      3114\n      3107\n      True\n      True\n      Sudeste\n      ...\n      N\n      N\n      3\n      -19.160\n      -45.446\n      -17.743\n      -46.173\n      373.7197\n      4.552083\n      1\n    \n    \n      124776\n      depois\n      cesariano\n      2101777\n      311580\n      313630\n      3125\n      3107\n      True\n      True\n      Sudeste\n      ...\n      N\n      N\n      5\n      -18.584\n      -49.199\n      -17.743\n      -46.173\n      555.0323\n      6.626444\n      1\n    \n    \n      124777\n      depois\n      cesariano\n      2101777\n      311680\n      313630\n      3104\n      3107\n      True\n      True\n      Sudeste\n      ...\n      N\n      N\n      3\n      -18.234\n      -42.840\n      -17.743\n      -46.173\n      656.4867\n      7.842056\n      1\n    \n    \n      124778\n      depois\n      normal\n      9923837\n      510623\n      270430\n      5105\n      2701\n      True\n      True\n      Centro-Oeste\n      ...\n      N\n      S\n      2\n      -14.797\n      -57.288\n      -9.666\n      -35.735\n      3217.7273\n      39.940667\n      1\n    \n  \n\n124779 rows × 22 columns\n\n\n\n\ndf_deslc.to_excel(path_deslc.replace('csv.gzip', 'xlsx'))"
  },
  {
    "objectID": "investigation/data_network.html#rj",
    "href": "investigation/data_network.html#rj",
    "title": "Rede de Deslocamento",
    "section": "RJ",
    "text": "RJ\n\ndf_deslc_rj = df_deslc[df_deslc['uf'] == 'RJ']\ndf_deslc_rj\n\n\n\n\n\n  \n    \n      \n      periodo\n      tipo_parto\n      cnes\n      res_municipio\n      hosp_municipio\n      res_regiao_saude\n      hosp_regiao_saude\n      mun_diff\n      regsau_diff\n      regiao\n      ...\n      fronteira\n      amazonia\n      socioeconomico\n      res_latitude\n      res_longitude\n      hosp_latitude\n      hosp_longitude\n      distancia\n      tempo\n      nascimentos\n    \n  \n  \n    \n      11\n      antes\n      normal\n      2280248\n      330455\n      330455\n      3305\n      3305\n      False\n      False\n      Sudeste\n      ...\n      False\n      False\n      5\n      -22.903000\n      -43.208\n      -22.903000\n      -43.208000\n      0.0000\n      0.000000\n      6738\n    \n    \n      18\n      antes\n      normal\n      2270609\n      330455\n      330455\n      3305\n      3305\n      False\n      False\n      Sudeste\n      ...\n      False\n      False\n      5\n      -22.903000\n      -43.208\n      -22.903000\n      -43.208000\n      0.0000\n      0.000000\n      6250\n    \n    \n      21\n      depois\n      normal\n      7027397\n      330455\n      330455\n      3305\n      3305\n      False\n      False\n      Sudeste\n      ...\n      False\n      False\n      5\n      -22.903000\n      -43.208\n      -22.903000\n      -43.208000\n      0.0000\n      0.000000\n      5991\n    \n    \n      22\n      depois\n      normal\n      2270609\n      330455\n      330455\n      3305\n      3305\n      False\n      False\n      Sudeste\n      ...\n      False\n      False\n      5\n      -22.903000\n      -43.208\n      -22.903000\n      -43.208000\n      0.0000\n      0.000000\n      5986\n    \n    \n      24\n      depois\n      normal\n      2798662\n      330350\n      330350\n      3305\n      3305\n      False\n      False\n      Sudeste\n      ...\n      False\n      False\n      5\n      -22.759001\n      -43.451\n      -22.759001\n      -43.451000\n      0.0000\n      0.000000\n      5973\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      121177\n      antes\n      normal\n      2296241\n      330455\n      330430\n      3305\n      3302\n      True\n      True\n      Sudeste\n      ...\n      False\n      False\n      5\n      -22.903000\n      -43.208\n      -22.708000\n      -42.625999\n      75.5213\n      0.979028\n      1\n    \n    \n      121178\n      antes\n      normal\n      5042488\n      330455\n      330330\n      3305\n      3305\n      True\n      False\n      Sudeste\n      ...\n      False\n      False\n      5\n      -22.903000\n      -43.208\n      -22.882999\n      -43.104000\n      17.8948\n      0.306417\n      1\n    \n    \n      121180\n      antes\n      normal\n      6146376\n      330455\n      330185\n      3305\n      3305\n      True\n      False\n      Sudeste\n      ...\n      False\n      False\n      5\n      -22.903000\n      -43.208\n      -22.537001\n      -42.981998\n      73.8015\n      0.981694\n      1\n    \n    \n      121181\n      antes\n      normal\n      2280868\n      330455\n      330010\n      3305\n      3301\n      True\n      True\n      Sudeste\n      ...\n      False\n      False\n      5\n      -22.903000\n      -43.208\n      -23.007000\n      -44.318001\n      154.9166\n      2.006583\n      1\n    \n    \n      121182\n      antes\n      normal\n      2448203\n      330455\n      320245\n      3305\n      3202\n      True\n      True\n      Sudeste\n      ...\n      False\n      False\n      5\n      -22.903000\n      -43.208\n      -20.233999\n      -41.511002\n      497.5082\n      6.306889\n      1\n    \n  \n\n3464 rows × 22 columns\n\n\n\n\ndf_deslc_rj.to_excel(path_deslc.replace('.csv.gzip', '_rj.xlsx'), index=False)\n\n\ndf_deslc_rj['periodo'].value_counts()\n\ndepois    2127\nantes     1337\nName: periodo, dtype: int64\n\n\n\ndf_deslc_rj['tipo_parto'].value_counts()\n\nnormal       1887\ncesariano    1577\nName: tipo_parto, dtype: int64"
  },
  {
    "objectID": "notebooks/cnes.html",
    "href": "notebooks/cnes.html",
    "title": "Deslocamento de Gestantes",
    "section": "",
    "text": "def get_path_db_zip(db):\n    db_zip = f'{config.PATH_DATABASES}/{db}/{db}.zip'\n    if db == 'SIHSUS':\n        db_zip = '/Volumes/SanDisk/SIHSUS.zip'\n    return db_zip\n\n\ndef get_files_from_db_zip(db_zip):\n    return ZipFile(db_zip).namelist()\n\n\ndef get_cnes_list(db, df):\n    cnes_list = list()\n    if db == 'CNES':\n        cnes_list = df[f.VINC_SUS == 1, 'CNES'].to_list()[0]\n    if db == 'SINASC' and 'CODESTAB' in df.names:\n        df['CODESTAB'] = dt.Type.str32\n        cnes_list = df[\n        (\n            (f['ano_nasc'] >= 2010)\n            &\n            (f['ano_nasc'] <= 2019)\n        ) & (\n            (f['IDADEMAE'] >= 10)\n            &\n            (f['IDADEMAE'] <= 49)\n        ) & (\n            (f['res_RSAUDCOD'] != None)\n            &\n            (f['res_RSAUDCOD'] != 5301)\n        ) & (\n            (f['nasc_RSAUDCOD'] != None)\n        ) & (\n            (f['res_codigo_adotado'] != None)\n        ) & (\n            (f['nasc_codigo_adotado'] != None)\n        ) & (\n            (f['def_loc_nasc'] == 'Hospital')\n        ) & (\n            (f['def_parto'] != 'Ignorado')\n        ) & (\n            (f['CODESTAB'] != None)\n        ), 'CODESTAB']\n        cnes_list = cnes_list[0, :, by('CODESTAB')].to_list()[0]\n    if db == 'SIHSUS' and 'CNES' in df.names:\n        cnes_list = df[\n        (\n            (f['PROC_REA'] == 310010039)\n            |\n            (f['PROC_REA'] == 411010034)\n        ) & (\n            (f['ano_internacao'] >= 2010)\n            &\n            (f['ano_internacao'] <= 2019)\n        ), 'CNES']\n        cnes_list = cnes_list[0, :, by('CNES')].to_list()[0]\n    return cnes_list\n\n\ndef open_ith_file_in_db_zip(db, i):\n    db_zip = get_path_db_zip(db)\n    files = get_files_from_db_zip(db_zip)\n    l = [False for _ in range(236)]\n    l.append(True)\n    return dt.fread(f'{db_zip}/{files[i]}', columns=l)\n\n\ndef get_all_cnes(db):\n    zeros = '0000000'\n    possible_columns = {\n        'CNES', 'VINC_SUS', 'CODESTAB', 'PROC_REA',\n        'ano_internacao', 'ano_nasc', 'IDADEMAE',\n        'res_RSAUDCOD', 'nasc_RSAUDCOD',\n        'res_codigo_adotado', 'nasc_codigo_adotado',\n        'def_loc_nasc', 'def_parto'}\n    db_zip = get_path_db_zip(db)\n    files = get_files_from_db_zip(db_zip)\n    s = set()\n    for fname in tqdm(files):\n        if 'dict' in fname: continue\n        f_path = f'{db_zip}/{fname}'\n        colums = dt.fread(f_path, max_nrows=0).names\n        colums = [col in possible_columns for col in colums]\n        df = dt.fread(f_path, columns=colums)\n        cnes_list = get_cnes_list(db, df)\n        s.update({(zeros+str(cnes))[-7:] for cnes in cnes_list if cnes})\n    return s\n\n\ndef save_cnes_dbs(dbs):\n    for db in dbs:\n        df = get_all_cnes(db)\n        pd.DataFrame(df, columns=['cnes']).sort_values(\n            'cnes'\n        ).to_csv(\n            f'data/consult/cnes/{db}_cnes.csv',\n            index=False\n        )\n\n100%|██████████| 675/675 [01:49<00:00, 6.15it/s]\n100%|██████████| 4375/4375 [03:54<00:00, 18.67it/s]\n100%|██████████| 4401/4401 [17:08<00:00, 4.28it/s]\n\ndbs = ['SINASC'] # ['SINASC', 'CNES', 'SIHSUS']\nsave_cnes_dbs(dbs)\n\n100%|██████████| 675/675 [04:12<00:00,  2.67it/s]\n\n\n\ncnes = set(pd.read_csv('data/consult/cnes/CNES_cnes.csv', dtype={'cnes':str})['cnes'])\nsih = set(pd.read_csv('data/consult/cnes/SIHSUS_cnes.csv', dtype={'cnes':str})['cnes'])\nsinasc = set(pd.read_csv('data/consult/cnes/SINASC_cnes.csv', dtype={'cnes':str})['cnes'])\n\n\npd.DataFrame(cnes.intersection(sinasc), columns=['cnes']).to_csv(\n    'data/consult/cnes/cnes_sus_sinasc.csv',\n    index=False\n)\n\n\nlen(sih.intersection(sinasc))#/len(sih)\n\n4093\n\n\n\nlen(sih.intersection(cnes))/len(sih)\n\n0.999277108433735\n\n\n\nlen(sih)\n\n4150\n\n\n\nlen(sih.intersection(cnes))\n\n4147\n\n\n\ncnes no sinasc: 10370\ncnes que ta no sinasc e na base do cnes com vínculo com sus: 9084\nou seja, 87% dos cnes que estão no sinasc possuem vínculo com sus\n\ndos 4150 cnes que estão no sih, apenas 3 não estão na base do cnes com vínculo com sus\n\ndf = open_ith_file_in_db_zip('SINASC', 100)\ndf\n\nValueError: Input contains 85 columns, whereas columns parameter specifies only 237 columns"
  },
  {
    "objectID": "notebooks/data_query.html",
    "href": "notebooks/data_query.html",
    "title": "Deslocamento de Gestantes",
    "section": "",
    "text": "def read_query(path_query):\n  with open(path_query) as f:\n    query = f.read()\n    df = data_load.df_query(query)\n  return df\n\n\npath_query = 'queries/compare/cnes_sinasc.sql'\nread_query(path_query)\n\n\n\n\n\n  \n    \n      \n      records\n    \n  \n  \n    \n      0\n      8191.0\n    \n  \n\n\n\n\n\npath_query = 'queries/compare/cnes_sih.sql'\nread_query(path_query)\n\n\n\n\n\n  \n    \n      \n      records\n    \n  \n  \n    \n      0\n      4176.0\n    \n  \n\n\n\n\n\npath_query = 'queries/check/cnes_sus.sql'\nread_query(path_query)\n\n\n\n\n\n  \n    \n      \n      count(distinct CNES)\n    \n  \n  \n    \n      0\n      214.0\n    \n  \n\n\n\n\n\npath_query = 'queries/check/sih.sql'\nread_query(path_query)\n\n\n\n\n\n  \n    \n      \n      res_codigo_adotado\n      int_codigo_adotado\n      procedimentos\n    \n  \n  \n    \n      0\n      330455\n      330455\n      56423\n    \n    \n      1\n      330170\n      330170\n      8974\n    \n    \n      2\n      330350\n      330350\n      5973\n    \n    \n      3\n      330100\n      330100\n      4208\n    \n    \n      4\n      330490\n      330490\n      3293\n    \n    \n      ...\n      ...\n      ...\n      ...\n    \n    \n      785\n      330620\n      330610\n      1\n    \n    \n      786\n      330630\n      270915\n      1\n    \n    \n      787\n      330630\n      330411\n      1\n    \n    \n      788\n      330630\n      330455\n      1\n    \n    \n      789\n      330630\n      330490\n      1\n    \n  \n\n790 rows × 3 columns\n\n\n\n\nfname = 'sih_rj_edges_normal_2018_19_diff.csv' # _diff\ndf = df[df['res_codigo_adotado'] != df['int_codigo_adotado']]\ndf.to_csv(fname, index=False)\n\n\ndist = config.PATH_DATABASES + '/DISTANCIAS/matriz_distancias.zip'\ndist\n\n'/Users/lucas/Databases/DISTANCIAS/matriz_distancias/matriz_distancias.zip'\n\n\n\ndf_dist = pd.read_csv(dist)\ndf_dist\n\n\n\n\n\n  \n    \n      \n      origem\n      destino\n      distancia\n      tempo\n    \n  \n  \n    \n      0\n      110001\n      110001\n      0.000000\n      0.000000\n    \n    \n      1\n      110001\n      110002\n      309.050000\n      6.169056\n    \n    \n      2\n      110001\n      110003\n      399.499700\n      6.289056\n    \n    \n      3\n      110001\n      110004\n      81.201103\n      1.917750\n    \n    \n      4\n      110001\n      110005\n      391.704300\n      6.136361\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      31024895\n      530010\n      522200\n      161.728900\n      2.356000\n    \n    \n      31024896\n      530010\n      522205\n      382.708800\n      5.479556\n    \n    \n      31024897\n      530010\n      522220\n      161.603400\n      2.248944\n    \n    \n      31024898\n      530010\n      522230\n      190.000900\n      3.216083\n    \n    \n      31024899\n      530010\n      530010\n      0.000000\n      0.000000\n    \n  \n\n31024900 rows × 4 columns\n\n\n\n\nedges_rj = 'data/consult/edges/rj/'\n\nces_10 = 'sih_rj_edges_cesarea_2010_11_diff.csv'\nces_18 = 'sih_rj_edges_cesarea_2018_19_diff.csv'\nnor_10 = 'sih_rj_edges_normal_2010_11_diff.csv'\nnor_18 = 'sih_rj_edges_normal_2018_19_diff.csv'\n\nces_10_all = 'sih_rj_edges_cesarea_2010_11.csv'\nces_18_all = 'sih_rj_edges_cesarea_2018_19.csv'\nnor_10_all = 'sih_rj_edges_normal_2010_11.csv'\nnor_18_all = 'sih_rj_edges_normal_2018_19.csv'\n\n\ndef modify_df(fname, bienio, tipo_parto):\n    df = pd.read_csv(edges_rj + fname)\n    df = df.rename(columns={\n        'res_codigo_adotado' : 'origem',\n        'int_codigo_adotado' : 'destino',\n    })\n    df['biênio'] = bienio\n    df['tipo_parto'] = tipo_parto\n    return df[['biênio', 'tipo_parto', 'origem', 'destino', 'procedimentos']]\n\n\ndef adjust_df(fname, bienio, tipo_parto):\n    df = pd.read_csv(edges_rj + fname)\n    df = df.rename(columns={\n        'res_codigo_adotado' : 'origem',\n        'int_codigo_adotado' : 'destino',\n    })\n    df = df[df['origem'] == df['destino']]\n    df['biênio'] = bienio\n    df['tipo_parto'] = tipo_parto\n    df['distancia'] = 0\n    df['tempo'] = 0\n    return df[['biênio', 'tipo_parto', 'origem', 'destino', 'procedimentos', 'distancia', 'tempo']]\n\n\ndf = pd.concat([\n    modify_df(ces_10, '2010/11', 'cesárea'),\n    modify_df(nor_10, '2010/11', 'normal'),\n    modify_df(ces_18, '2018/19', 'cesárea'),\n    modify_df(nor_18, '2018/19', 'normal'),\n])\ndf\n\n\n\n\n\n  \n    \n      \n      biênio\n      tipo_parto\n      origem\n      destino\n      procedimentos\n    \n  \n  \n    \n      0\n      2010/11\n      cesárea\n      330350\n      330045\n      1207\n    \n    \n      1\n      2010/11\n      cesárea\n      330455\n      330045\n      798\n    \n    \n      2\n      2010/11\n      cesárea\n      330510\n      330045\n      380\n    \n    \n      3\n      2010/11\n      cesárea\n      330350\n      330414\n      362\n    \n    \n      4\n      2010/11\n      cesárea\n      330455\n      330510\n      310\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      720\n      2018/19\n      normal\n      330620\n      330610\n      1\n    \n    \n      721\n      2018/19\n      normal\n      330630\n      270915\n      1\n    \n    \n      722\n      2018/19\n      normal\n      330630\n      330411\n      1\n    \n    \n      723\n      2018/19\n      normal\n      330630\n      330455\n      1\n    \n    \n      724\n      2018/19\n      normal\n      330630\n      330490\n      1\n    \n  \n\n2205 rows × 5 columns\n\n\n\n\ndf_same_mun = pd.concat([\n    adjust_df(ces_10_all, '2010/11', 'cesárea'),\n    adjust_df(nor_10_all, '2010/11', 'normal'),\n    adjust_df(ces_18_all, '2018/19', 'cesárea'),\n    adjust_df(nor_18_all, '2018/19', 'normal'),\n])\ndf_same_mun\n\n\n\n\n\n  \n    \n      \n      biênio\n      tipo_parto\n      origem\n      destino\n      procedimentos\n      distancia\n      tempo\n    \n  \n  \n    \n      0\n      2010/11\n      cesárea\n      330455\n      330455\n      10025\n      0\n      0\n    \n    \n      1\n      2010/11\n      cesárea\n      330490\n      330490\n      3040\n      0\n      0\n    \n    \n      2\n      2010/11\n      cesárea\n      330170\n      330170\n      2005\n      0\n      0\n    \n    \n      3\n      2010/11\n      cesárea\n      330045\n      330045\n      1553\n      0\n      0\n    \n    \n      4\n      2010/11\n      cesárea\n      330100\n      330100\n      1526\n      0\n      0\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      196\n      2018/19\n      normal\n      330015\n      330015\n      10\n      0\n      0\n    \n    \n      241\n      2018/19\n      normal\n      330590\n      330590\n      6\n      0\n      0\n    \n    \n      273\n      2018/19\n      normal\n      330210\n      330210\n      4\n      0\n      0\n    \n    \n      345\n      2018/19\n      normal\n      330045\n      330045\n      2\n      0\n      0\n    \n    \n      781\n      2018/19\n      normal\n      330615\n      330615\n      1\n      0\n      0\n    \n  \n\n281 rows × 7 columns\n\n\n\n\ndf_res = pd.merge(\n    df, df_dist,\n    how='left',\n    left_on = ['origem', 'destino'],\n    right_on = ['origem', 'destino']\n)\ndf_res\n\n\n\n\n\n  \n    \n      \n      biênio\n      tipo_parto\n      origem\n      destino\n      procedimentos\n      distancia\n      tempo\n    \n  \n  \n    \n      0\n      2010/11\n      cesárea\n      330350\n      330045\n      1207\n      7.7325\n      0.128667\n    \n    \n      1\n      2010/11\n      cesárea\n      330455\n      330045\n      798\n      31.2666\n      0.469667\n    \n    \n      2\n      2010/11\n      cesárea\n      330510\n      330045\n      380\n      6.5351\n      0.122250\n    \n    \n      3\n      2010/11\n      cesárea\n      330350\n      330414\n      362\n      13.8964\n      0.269500\n    \n    \n      4\n      2010/11\n      cesárea\n      330455\n      330510\n      310\n      25.6388\n      0.393500\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      2200\n      2018/19\n      normal\n      330620\n      330610\n      1\n      34.2078\n      0.591694\n    \n    \n      2201\n      2018/19\n      normal\n      330630\n      270915\n      1\n      2017.5698\n      25.870056\n    \n    \n      2202\n      2018/19\n      normal\n      330630\n      330411\n      1\n      35.1378\n      0.636833\n    \n    \n      2203\n      2018/19\n      normal\n      330630\n      330455\n      1\n      127.4334\n      1.937028\n    \n    \n      2204\n      2018/19\n      normal\n      330630\n      330490\n      1\n      146.8082\n      2.268306\n    \n  \n\n2205 rows × 7 columns\n\n\n\n\ndf_final = pd.concat([\n    df_res,\n    df_same_mun\n])\ndf_final = df_final.sort_values('procedimentos', ascending=False)\ndf_final\n\n\n\n\n\n  \n    \n      \n      biênio\n      tipo_parto\n      origem\n      destino\n      procedimentos\n      distancia\n      tempo\n    \n  \n  \n    \n      0\n      2018/19\n      normal\n      330455\n      330455\n      56423\n      0.0000\n      0.000000\n    \n    \n      0\n      2010/11\n      normal\n      330455\n      330455\n      49736\n      0.0000\n      0.000000\n    \n    \n      0\n      2018/19\n      cesárea\n      330455\n      330455\n      20304\n      0.0000\n      0.000000\n    \n    \n      0\n      2010/11\n      cesárea\n      330455\n      330455\n      10025\n      0.0000\n      0.000000\n    \n    \n      1\n      2010/11\n      normal\n      330490\n      330490\n      9972\n      0.0000\n      0.000000\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      1263\n      2018/19\n      cesárea\n      330245\n      330330\n      1\n      184.0067\n      2.909417\n    \n    \n      1262\n      2018/19\n      cesárea\n      330240\n      330550\n      1\n      118.7163\n      1.602889\n    \n    \n      1261\n      2018/19\n      cesárea\n      330240\n      330490\n      1\n      163.6184\n      2.248528\n    \n    \n      1260\n      2018/19\n      cesárea\n      330240\n      330430\n      1\n      110.4914\n      1.583083\n    \n    \n      781\n      2018/19\n      normal\n      330615\n      330615\n      1\n      0.0000\n      0.000000\n    \n  \n\n2486 rows × 7 columns\n\n\n\n\ndf_final.to_csv(edges_rj + 'edges_with_dist.csv', index=False)\n\n\ndf_final = pd.read_csv(edges_rj + 'edges_with_dist.csv')\ndf_final\n\n\n\n\n\n  \n    \n      \n      biênio\n      tipo_parto\n      origem\n      destino\n      procedimentos\n      distancia\n      tempo\n    \n  \n  \n    \n      0\n      2018/19\n      normal\n      330455\n      330455\n      56423\n      0.0000\n      0.000000\n    \n    \n      1\n      2010/11\n      normal\n      330455\n      330455\n      49736\n      0.0000\n      0.000000\n    \n    \n      2\n      2018/19\n      cesárea\n      330455\n      330455\n      20304\n      0.0000\n      0.000000\n    \n    \n      3\n      2010/11\n      cesárea\n      330455\n      330455\n      10025\n      0.0000\n      0.000000\n    \n    \n      4\n      2010/11\n      normal\n      330490\n      330490\n      9972\n      0.0000\n      0.000000\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      2481\n      2018/19\n      cesárea\n      330245\n      330330\n      1\n      184.0067\n      2.909417\n    \n    \n      2482\n      2018/19\n      cesárea\n      330240\n      330550\n      1\n      118.7163\n      1.602889\n    \n    \n      2483\n      2018/19\n      cesárea\n      330240\n      330490\n      1\n      163.6184\n      2.248528\n    \n    \n      2484\n      2018/19\n      cesárea\n      330240\n      330430\n      1\n      110.4914\n      1.583083\n    \n    \n      2485\n      2018/19\n      normal\n      330615\n      330615\n      1\n      0.0000\n      0.000000\n    \n  \n\n2486 rows × 7 columns\n\n\n\n\ndf_final[(df_final['origem'] == 330455) & (df_final['procedimentos'] == 6)]\n\n\n\n\n\n  \n    \n      \n      biênio\n      tipo_parto\n      origem\n      destino\n      procedimentos\n      distancia\n      tempo\n    \n  \n  \n    \n      890\n      2018/19\n      normal\n      330455\n      220840\n      6\n      2775.4889\n      34.853667\n    \n    \n      908\n      2018/19\n      cesárea\n      330455\n      211010\n      6\n      2884.1629\n      36.885444\n    \n    \n      910\n      2018/19\n      normal\n      330455\n      211250\n      6\n      3025.2206\n      38.369611\n    \n    \n      911\n      2018/19\n      normal\n      330455\n      250690\n      6\n      2420.2223\n      30.911306\n    \n  \n\n\n\n\n\npth = '/Users/lucas/Desktop/doc_topics.xlsx'\nex = pd.read_excel(pth, sheet_name=1)\nex\n\nValueError: Worksheet index 1 is invalid, 1 worksheets found\n\n\n\nex.info()\n\n<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 39052 entries, 0 to 39051\nData columns (total 27 columns):\n #   Column                                   Non-Null Count  Dtype  \n---  ------                                   --------------  -----  \n 0   Unnamed: 0                               39052 non-null  int64  \n 1   id                                       39052 non-null  int64  \n 2   date                                     39052 non-null  object \n 3   period                                   39052 non-null  int64  \n 4   type                                     39052 non-null  object \n 5   n_authors                                39052 non-null  int64  \n 6   hic                                      39052 non-null  object \n 7   lmic                                     39038 non-null  object \n 8   producer                                 39052 non-null  object \n 9   tags                                     39052 non-null  object \n 10  Artificial Intelligence                  39052 non-null  float64\n 11  Biomedical engineering                   39052 non-null  float64\n 12  Blockchain and IOT                       39052 non-null  float64\n 13  Climate and environment                  39052 non-null  float64\n 14  Clinical Medicine                        39052 non-null  float64\n 15  Clinical Research                        39052 non-null  float64\n 16  Diagnostic assays                        39052 non-null  float64\n 17  Drug R&D and repurposing                 39052 non-null  float64\n 18  Economy, investments and sustainability  39052 non-null  float64\n 19  Education                                39052 non-null  float64\n 20  Genomics                                 39052 non-null  float64\n 21  Global/International Health              39052 non-null  float64\n 22  Healthcare Research                      39052 non-null  float64\n 23  Immunopathology                          39052 non-null  float64\n 24  Knowledge, attitudes and practices       39052 non-null  float64\n 25  Mental Health                            39052 non-null  float64\n 26  Political Science                        39052 non-null  float64\ndtypes: float64(17), int64(4), object(6)\nmemory usage: 8.0+ MB"
  },
  {
    "objectID": "notebooks/notebook.html",
    "href": "notebooks/notebook.html",
    "title": "Deslocamento de Gestantes",
    "section": "",
    "text": "No Brasil, 98% dos partos ocorrem em ambiente hospitalar, e 77% no Sistema Único de Saúde (SUS). O acesso oportuno aos serviços obstétricos de internação para o parto é fundamental para garantir a segurança do cuidado materno e neonatal. Entretanto, há “vazios assistenciais” na oferta de serviços hospitalares pelo SUS que fazem com que grande parte das parturientes precise se deslocar de um município a outro para ser assistida.\nO retardo na atenção obstétrica no momento do parto está associado à desfechos maternos adversos, e o deslocamento de grandes distâncias tem sido associado a níveis elevados de mortalidade infantil e neonatal, além de maior risco de morbimortalidade materna. Assim, a análise da distância percorrida pelas parturientes de sua residência até o hospital é um indicador útil e sensível para avaliar a dificuldade em acessar cuidados maternos e neonatais no SUS.\nA análise da acessibilidade geográfica é um componente importante da avaliação de serviços de saúde e reflete aspectos da distribuição espacial da oferta de serviços que dificultam ou promovem sua utilização. A metodologia de análise de redes sociais (ARS) tem sido utilizada nesse contexto, incluindo a internação para o parto, e também como ferramenta para gestão em saúde.\nEste projeto tem o objetivo de analisar a acessibilidade geográfica ao parto hospitalar realizado no SUS nos últimos 10 anos, em todo Brasil, aplicando a ARS como uma nova ferramenta para a gestão de serviços de saúde. Serão utilizados dados do Departamento de Informática do SUS (DATASUS) para a construção das redes de deslocamento das gestantes em busca de internação para o parto, levando-se em conta as distâncias percorridas, mapeando fluxos preferenciais e identificando lacunas geográficas de atendimento e polos de atração de maior demanda, como medida de inequidade no acesso aos serviços. O projeto avança no processo de avaliação do sistema de saúde ao desenvolver novos indicadores de acesso à serviços obstétricos, baseados em uma metodologia inovadora, e com abrangência nacional e aplicabilidade a outras áreas de saúde pública.\nEspera-se, com este estudo, gerar evidências que permitam um melhor entendimento da organização e das fragilidades do SUS na assistência à saúde da mulher no ciclo gravídico-puerperal, contribuindo para o planejamento da atenção obstétrica e para o fortalecimento de políticas públicas voltadas para melhoria do acesso aos serviços de saúde.\n\n\n\n\nhttps://github.com/lucaslopes/partos/\nhttps://pcdas.icict.fiocruz.br/rede-de-parcerias/a-distancia-importa-redes-de-deslocamento-para-acesso-ao-parto-hospitalar-no-brasil/\n\n\n\n\n\nimport sqlite3\nimport numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport plotly.express as px\nimport config, data_load, data_info, data_plot\nfrom plotly import graph_objects as go"
  },
  {
    "objectID": "notebooks/notebook.html#sistema-de-informações-hospitalares-do-sus-sihsus",
    "href": "notebooks/notebook.html#sistema-de-informações-hospitalares-do-sus-sihsus",
    "title": "Deslocamento de Gestantes",
    "section": "Sistema de Informações Hospitalares do SUS (SIHSUS)",
    "text": "Sistema de Informações Hospitalares do SUS (SIHSUS)\nDados do Sistema de Informações Hospitalares do SUS (SIHSUS) reunidos pela Plataforma de Ciência de Dados aplicada à Saúde (PCDaS). Os dados foram obtidos junto ao DATASUS (Ministério da Saúde), tratados e enriquecidos seguindo uma metodologia própria de ETL (processo de extração, transformação e carga dos dados) da PCDaS, resultando em um dataset mensal com todos os registros de internações hospitalares contidos no SIHSUS à partir de janeiro de 2008.\nA atualização dos dados é realizada pelo DATASUS e a PCDaS extrai os registros mensais referentes aos arquivos RD_UF_ANO_MÊS.dbc (Reduzidos de AIH) assim que disponibilizados. As colunas com nomes em MAIÚSCULO representam dados originais advindos do DATASUS e colunas com nomes iniciando em minúsculo representam dados resultantes de transformação ou enriquecimento.\nObservações\n\nA tabela contendo os municípios brasileiros e sua respectiva Região de Saúde ao qual faz parte pode ser obtida em https://sage.saude.gov.br/paineis/regiaoSaude/lista.php?output=html&\nO download da base de dados pode ser realizado através da PCDaS (necessário conta de usuário) pelo link: https://pcdas.icict.fiocruz.br/conjunto-de-dados/sistema-de-informacoes-hospitalares-do-sus-sihsus/\nAo concluír o download, é obtido um arquivo compactado SIHSUS.zip\nO arquivo contém 4401 arquivos no formato .csv, onde 4000 são arquivos com registros, e 1 é o dicionário das variáveis dict_SIH.csv, que também pode ser consultado em https://pcdas.icict.fiocruz.br/conjunto-de-dados/sistema-de-informacoes-hospitalares-do-sus-sihsus/dicionario-de-variaveis/\nO arquivo foi baixado da PCDaS em 11/03/2022 16:13\nUma tabela listando os arquivos .csv contidos no arquivo compactado .zip pode ser visualizada abaixo:\n\n\ndf_files = pd.read_csv('data/consult/files_in_zip.csv')\ndf_files\n\n\n\n\n\n  \n    \n      \n      file_names\n    \n  \n  \n    \n      0\n      dict_SIH.csv\n    \n    \n      1\n      ETLSIH.ST_AC_2010_10_t.csv\n    \n    \n      2\n      ETLSIH.ST_AC_2010_11_t.csv\n    \n    \n      3\n      ETLSIH.ST_AC_2010_12_t.csv\n    \n    \n      4\n      ETLSIH.ST_AC_2010_1_t.csv\n    \n    \n      ...\n      ...\n    \n    \n      4396\n      ETLSIH.ST_TO_2021_3_t.csv\n    \n    \n      4397\n      ETLSIH.ST_TO_2021_4_t.csv\n    \n    \n      4398\n      ETLSIH.ST_TO_2021_5_t.csv\n    \n    \n      4399\n      ETLSIH.ST_TO_2021_6_t.csv\n    \n    \n      4400\n      ETLSIH.ST_TO_2021_7_t.csv\n    \n  \n\n4401 rows × 1 columns"
  },
  {
    "objectID": "notebooks/notebook.html#regiões-de-saúde-do-brasil",
    "href": "notebooks/notebook.html#regiões-de-saúde-do-brasil",
    "title": "Deslocamento de Gestantes",
    "section": "Regiões de Saúde do Brasil",
    "text": "Regiões de Saúde do Brasil\nA Resolução nº 1 de 29 de Setemebro de 2011, estabelece diretrizes gerais para a instituição de Regiões de Saúde no âmbito do Sistema Único de Saúde (SUS), consituindo os objetivos sua organização:\n\ngarantir o acesso resolutivo da população, em tempo oportuno e com qualidade, a ações e serviços de promoção, proteção e recuperação, organizados em redes de atenção à saúde, assegurando-se um padrão de integralidade;\nefetivar o processo de descentralização de ações e serviços de saúde entre os entes federados, com responsabilização compartilhada, favorecendo a ação solidária e cooperativa entre os gestores, impedindo a duplicação de meios para atingir as mesmas finalidades; e\nbuscar a racionalidade dos gastos, a otimização de recursos e eficiência na rede de atenção à saúde, por meio da conjugação interfederativa de recursos financeiros entre outros, de modo a reduzir as desigualdades locais e regionais.\n\nA Sala de Apoio à Gestão Estratégica (SAGE) disponibiliza informações de saúde, especialmente das redes de atenção à saúde prioritárias, acompanhamento das metas, repasses, coberturas e indicadores epidemiológicos e operacionais das ações e programas para a tomada de decisão, gestão e geração de conhecimento pelos estados e municípios.\nObservações\n\nA tabela contendo os municípios brasileiros e sua respectiva Região de Saúde ao qual faz parte pode ser obtida em https://sage.saude.gov.br/paineis/regiaoSaude/lista.php?output=html&"
  },
  {
    "objectID": "notebooks/notebook.html#grupos-de-regiões-de-saúde-segundo-condições-socioeconômicas-e-de-saúde",
    "href": "notebooks/notebook.html#grupos-de-regiões-de-saúde-segundo-condições-socioeconômicas-e-de-saúde",
    "title": "Deslocamento de Gestantes",
    "section": "Grupos de Regiões de Saúde segundo Condições Socioeconômicas e de Saúde",
    "text": "Grupos de Regiões de Saúde segundo Condições Socioeconômicas e de Saúde\nCom o objetivo de elucidar os condicionantes estruturais do processo recente de regionalização nos estados, por meio da construção de uma tipologia nacional das regiões de saúde com base nas Comissões Intergestores Regionais – CIR formalmente constituídos até fevereiro de 2015. Essa tipologia é baseada na tipologia criada em 2010 para os antigos Colegiados de Gestão Regional – CGR’s que permitia observar os diversos graus de desenvolvimento econômico, social e características da rede de saúde dos municípios.\nA nova tipologia apresentada mantém os parâmetros que nortearam a construção da antiga – no nível de CGR – mas apresenta uma operacionalização mais amigável a partir de um número menor de componentes. Essa simplificação operacional é importante dado às possíveis mudanças no desenho das CIR’s que eventualmente venham a ocorrer ao longo do tempo. Destaca-se ainda a introdução de informações referentes ao Censo Demográfico 2010, que não estavam disponíveis no momento da construção da antiga tipologia.\nAnalogamente a tipologia anterior as CIR’s foram classificadas, de forma independente, em cinco grupos de acordo com suas características socioeconômicas e de sistema de saúde.\nObservações\n\nAs Regiões de Saúde e sua respectiva classificação em um dos 5 Grupos Socioeconômicos pode ser visualizada em https://indicadores.resbr.net.br/view/index.php\nA metododologia de como a classificação foi realizada está disponível em https://indicadores.resbr.net.br/view/pdf/relatorio_tipologia_versaofev2016.pdf\nOs indicadores de classificação foram exportados a partir de https://indicadores.resbr.net.br/view/indicadores.php?clrSession=true\nA informação do Indicador Socioeconômico de qual Grupo uma Região de Saúde pertence, foi mesclada com a tabela que lista dos Municípos e suas Regiões de Saúde, resultando na seguinte tabela abaixo:\n\n\nhealth_regions = pd.read_csv('data/consult/health_regions.csv')\nhealth_regions\n\n\n\n\n\n  \n    \n      \n      UF\n      Município\n      Cód IBGE\n      Cód Região de Saúde\n      Nome da Região de Saúde\n      Grupo\n    \n  \n  \n    \n      0\n      AC\n      Acrelândia\n      120001\n      12002\n      Baixo Acre e Purus\n      2\n    \n    \n      1\n      AC\n      Assis Brasil\n      120005\n      12001\n      Alto Acre\n      1\n    \n    \n      2\n      AC\n      Brasiléia\n      120010\n      12001\n      Alto Acre\n      1\n    \n    \n      3\n      AC\n      Bujari\n      120013\n      12002\n      Baixo Acre e Purus\n      2\n    \n    \n      4\n      AC\n      Capixaba\n      120017\n      12002\n      Baixo Acre e Purus\n      2\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      5566\n      TO\n      Tocantinópolis\n      172120\n      17002\n      Bico do Papagaio\n      1\n    \n    \n      5567\n      TO\n      Tupirama\n      172125\n      17004\n      Cerrado Tocantins Araguaia\n      2\n    \n    \n      5568\n      TO\n      Tupiratins\n      172130\n      17004\n      Cerrado Tocantins Araguaia\n      2\n    \n    \n      5569\n      TO\n      Wanderlândia\n      172208\n      17001\n      Médio Norte Araguaia\n      3\n    \n    \n      5570\n      TO\n      Xambioá\n      172210\n      17001\n      Médio Norte Araguaia\n      3\n    \n  \n\n5571 rows × 6 columns"
  },
  {
    "objectID": "notebooks/notebook.html#openstreetmap-osm",
    "href": "notebooks/notebook.html#openstreetmap-osm",
    "title": "Deslocamento de Gestantes",
    "section": "OpenStreetMap (OSM)",
    "text": "OpenStreetMap (OSM)\nOpenStreetMap (OSM) é um projeto de mapeamento colaborativo para criar um mapa livre e editável do mundo, inspirado por sites como a Wikipédia. Traduzindo para português o nome significa Mapa Aberto de Ruas. Ele fornece dados a centenas de sites na internet, aplicações de celular e outros dispositivos.\nO objetivo ao utilizar essa fonte de dados é obter unidades de medida como distância e tempo custado no deslocamento da gestante a partir de sua residência até o hospital de internação.\nObservações\n\nAinda não coletamos os dados de descolamento"
  },
  {
    "objectID": "notebooks/notebook.html#seleção-dos-dados",
    "href": "notebooks/notebook.html#seleção-dos-dados",
    "title": "Deslocamento de Gestantes",
    "section": "Seleção dos dados",
    "text": "Seleção dos dados\nPara isso, iremos selecionar as informações presentes nas fontes, para gerar as tabelas de nossa base resultante. Ao selecionar, consideramos as variáveis (colunas) e os registros (linhas) da forma descrita a seguir.\n\nSeleção das variáveis (colunas)\nDentre as variáveis disponíveis pelo SIHSUS, selecionamos de acordo com as seguintes características:\n\nhospital: informações que dizem respeito ao procedimento de internação que foi realizado;\ngestante: informações que dizem respeito a paciente que passou pelo procedimento de internação;\nlocalidade: informações que dizem respeito a localização do municipípio, seja de residência da paciente ou do hospital de internação, a ser diferenciado pelo prefixo res_ (residência) e int_ (internação)\n\nObservações\n\nCom o objetivo de facilitar a nomeclatura para o escopo deste projeto, renomeamos as variáveis de acordo com nossa necessidade e contexto\nUma tabela contendo a lista das variáveis utilizadas, com sua respectiva característica, definição e nome ao qual será renomeada pode ser visualizada abaixo:\n\n\nvariables = pd.read_csv('data/consult/variables.csv')\nvariables\n\n\n\n\n\n  \n    \n      \n      Característica\n      Variável\n      Renomear\n      Definição\n    \n  \n  \n    \n      0\n      hospital\n      ano_internacao\n      ano\n      Ano de internação\n    \n    \n      1\n      hospital\n      PROC_REA\n      parto\n      Procedimento realizado\n    \n    \n      2\n      hospital\n      CNES\n      cod_hosp\n      Código CNES do hospital\n    \n    \n      3\n      gestantante\n      IDADE\n      idade\n      Idade\n    \n    \n      4\n      gestantante\n      def_raca_cor\n      raca_cor\n      Definição de raça/cor do paciente\n    \n    \n      5\n      localidade\n      codigo_adotado\n      cod_municipio\n      Armazena o código atribuído ao município\n    \n    \n      6\n      localidade\n      MUNNOMEX\n      municipio\n      Nome (sem acentos, em maiúsculas) do Município\n    \n    \n      7\n      localidade\n      RSAUDCOD\n      regiao_saude\n      Código da Regional de Saúde a que o Município ...\n    \n    \n      8\n      localidade\n      SIGLA_UF\n      uf\n      Sigla da unidade da federação a que o Municípi...\n    \n    \n      9\n      localidade\n      REGIAO\n      regiao\n      Região do Brasil a que o Município pertence\n    \n    \n      10\n      localidade\n      LATITUDE\n      latitude\n      Latitude da sede do Município\n    \n    \n      11\n      localidade\n      LONGITUDE\n      longitude\n      Longitude da sede do Município\n    \n  \n\n\n\n\n\n\nSeleção dos registros (linhas)\nUma vez selecionado quais variáveis (colunas) utilizaremos, agora vamos definir quais são os critérios que usamos para selecionar os registros (linhas) a partir dos valores que possuem. A base do SIHSUS possui 157033546 registros no momento que foi baixada.\nFiltros\nA seguir descreveremos cada filtro aplicado, seu motivo, e o valor de registros resultantes ao aplica-lo (a ordem dos filtros importa).\n\nPROC_REA in (‘0310010039’, ‘0411010034’)\n\nNa base de dados do SIHSUS há vários procedimentos de internação que possuem seu código atribuído pelo Sistema de Gerenciamento da Tabela de Procedimentos (SIGTAP) registrado na variável PROC_REA que informa o procedimento que foi realizado. Em nossa análise, queremos observar apenas 2 códigos em específico: 03.10.01.003-9 para Parto Normal; e 04.11.01.003-4 para Parto Cesariano. Resutando em 23302307 registros.\n\nano_internacao between 2010 and 2019\n\nDos registros resultantes do filtro acima que foi aplicado, a variável ano_internacao contempla valores de 2007 até 2021. Entretanto, os da borda (2007 e 2021) estão incompletos. 2020 por ter sido um ano atípico devido a pandemia, é um ano que pode apresentar viés e portanto o consideremos ficar de fora de nossa análise. Escolhemos então analisar até o ano de 2019, e partir do anos de 2010 que inicia a segunda década deste milênio. Portanto, filtrando apenas os registros que possuiam o ano de internação entre 2010 e 2019, resultaram 17109256 registros.\n\nres_RSAUDCOD != 0\n\nPara realizarmos a análise de deslocamento entre residência e internação, precisamos necessariamente de ambas informações válidas. Como os registros são feitos no hospital, informações da localidade de internação já estão válido, já o de residência há excessões. Queremos portanto remover esses casos em que o código da Região de Saúde consta como 0. O que resulta em 17106725 registros.\n\nres_SIGLA_UF != ‘DF’\n\nEstamos considerando a residência da paciente como ponto referencial da análise, e ao investigar seu estado de residência, não é do nosso interesse considerar os casos do Distrito Federal, pois os registros que ocorrêm nesse caso são em sua maioria sem problemas de deslocamento. Portanto, estamos filtrando apenas registros que não possuem DF como UF de residência. Resultando em 16817215 registros.\n\nIDADE >= 10\n\nExistem alguns registros com valor da idade da gestante preenchido com apenas 1 dígito. Consideraremos apenas casos a partir de 10, resultando no valor final de 16816760 registros.\n\nfilters = pd.read_csv('data/check/filters.csv')\nfig_filters = go.Figure(go.Funnel(\n  x = filters['Registros'],\n  y = filters['Filtro'],\n  textposition = \"inside\",\n  textinfo = \"value+percent initial\",\n))\nfig_filters.show(renderer=\"svg\")"
  },
  {
    "objectID": "notebooks/notebook.html#criação-de-variáveis",
    "href": "notebooks/notebook.html#criação-de-variáveis",
    "title": "Deslocamento de Gestantes",
    "section": "Criação de variáveis",
    "text": "Criação de variáveis\nAlém das informações coletadas das fontes de dados, acrescentaremos algumas para facilitar o escopo de nossa análise, são elas:\n\nDeslocamento\nComo é do nosso interesse detectar casos em que o município e/ou a região de saúde de residência diverge da de internação, criamos 1 variável de criticidade indicando:\n\ncriticidade = 0: município de residência e internação são iguais;\ncriticidade = 1: município de residência e internação são diferentes, mas a região de saúde de residência é igual a região de saúde de internação;\ncriticidade = 2: tanto município e região de saúde de residência, são diferentes do município e região de saúde de internação.\n\n\n\nPeríodo\nQueremos comparar 2 momentos distanciados significativamente pelo tempo, que sejam recortes que sirvam como antes e depois. Para isso criamos 1 variável momento que informa se é:\n\nantes : 2010 e 2011;\ndepois : 2018 e 2019;\ndurante : demais anos intermediários."
  },
  {
    "objectID": "notebooks/notebook.html#tabelas-geradas",
    "href": "notebooks/notebook.html#tabelas-geradas",
    "title": "Deslocamento de Gestantes",
    "section": "Tabelas geradas",
    "text": "Tabelas geradas\nUma vez definido as informações a serem utilizadas na construção de nossa base de dados, agora vamos ver como ficou a estrutura resultante.\nA base de dados resultante é um aquivo de extensão.db criado a partir de uma instância de um banco SQLite3. O arquivo contém as informações necessárias para a análise de nosso projeto, e possui 820MB de tamanho. Ao comparar com a base completa do SIHSUS que possui 20GB, nossa base equivale a 3.58% do espaço da base original.\n\nsizes = pd.read_csv('data/consult/sizes.csv')\nfig = px.bar(\n    sizes,\n    x='File',\n    y='Bytes',\n    text_auto=True)\nfig.show(renderer=\"svg\")\n\n\n\n\nTal redução foi possível graças ao processo de filtragem, mas também devido a organização da informação em 2 tabelas, onde:\n\nTabela Partos: possui os registros de cada ocorrência, informando as variáveis pertinentes;\nTabela Localidades: possui informações relacionadas a localidade, como códigos, nomes, regiões, indicadores, etc.\n\nDessa forma, na tabela de partos, não é necessário ter todas as informações de localidade, ainda mais duplicado para a residência e internação, enquanto que no modelo atual, basta registrar o código do município da residência e da internação, e a partir desse código, é possível consultar na tabela de localidade informações detalhadas de tal município.\nPodemos olhar alguns registros e as colunas de cada tabela abaixo:\n\ncnx = sqlite3.connect(config.PATH_DB)\n\n\nTabela Partos\nA tabela de partos possui os 16816186 registros que estamos analisando.\n\npd.read_sql_query('select * from partos limit 5', cnx)\n\n\n\n\n\n  \n    \n      \n      ano\n      parto\n      cnes\n      idade\n      raca_cor\n      criticidade\n      momento\n      res_cod_municipio\n      int_cod_municipio\n    \n  \n  \n    \n      0\n      2010\n      NORMAL\n      2001020\n      23\n      Amarela\n      0\n      antes\n      120005\n      120005\n    \n    \n      1\n      2010\n      NORMAL\n      2000733\n      28\n      Amarela\n      0\n      antes\n      120040\n      120040\n    \n    \n      2\n      2010\n      NORMAL\n      2000733\n      38\n      Amarela\n      0\n      antes\n      120040\n      120040\n    \n    \n      3\n      2010\n      NORMAL\n      2000733\n      16\n      Amarela\n      0\n      antes\n      120040\n      120040\n    \n    \n      4\n      2010\n      NORMAL\n      2000733\n      26\n      Amarela\n      0\n      antes\n      120040\n      120040\n    \n  \n\n\n\n\n\n\nTabela Localidades\nA tabela de localidades possui 5564 municípios brasileiros que contemplam os casos visualizados na tabela de partos.\n\npd.read_sql_query('select * from places limit 5', cnx)\n\n\n\n\n\n  \n    \n      \n      cod_municipio\n      municipio\n      regiao_saude\n      uf\n      regiao\n      latitude\n      longitude\n      grupo\n    \n  \n  \n    \n      0\n      510452\n      IPIRANGA DO NORTE\n      5114\n      MT\n      Centro-Oeste\n      NaN\n      NaN\n      2\n    \n    \n      1\n      351600\n      FLORIDA PAULISTA\n      3514\n      SP\n      Sudeste\n      -21.615\n      -51.174\n      3\n    \n    \n      2\n      510454\n      ITANHANGA\n      5114\n      MT\n      Centro-Oeste\n      NaN\n      NaN\n      2\n    \n    \n      3\n      353990\n      POLONI\n      3522\n      SP\n      Sudeste\n      -20.785\n      -49.824\n      3\n    \n    \n      4\n      430063\n      AMARAL FERRADOR\n      4303\n      RS\n      Sul\n      -30.875\n      -52.253\n      3"
  },
  {
    "objectID": "notebooks/notebook.html#conhecimento-das-variávies",
    "href": "notebooks/notebook.html#conhecimento-das-variávies",
    "title": "Deslocamento de Gestantes",
    "section": "Conhecimento das variávies",
    "text": "Conhecimento das variávies\nVamos ter um primeiro contato com algumas das variáveis ao ver a contagem que os valores de cada variável possui.\n\ndef query_value_counts(var, table_partos=True):\n    if table_partos:\n        q = f'select parto, {var} as value, count({var}) as records from partos group by parto, {var} order by count({var}) desc'\n    else:\n        q = f'select parto, PL.{var} as value, count(PL.{var}) as records from partos P left join places PL on P.res_cod_municipio = PL.cod_municipio group by parto, PL.{var} order by count(PL.{var}) desc'\n    return q\n\n\ndef bar_plot(df, title=''):\n    return px.bar(\n        df,\n        x='value',\n        y='records',\n        color = 'parto',\n        category_orders={'value': df['value'].values},\n        text_auto=True,\n        title=title,\n    )\n\n\nConhecendo as variáveis da tabela de partos\n\nAno\nVamos começar obervando a quantidade de registros para cada ano de nossa base de dados.\nObservações\n\nSão todos bem parecidos\n\n\nvar = 'ano'\ndf = pd.read_csv(f'data/consult/value_counts/{var}.csv')\n# df = pd.read_sql_query(query_value_counts(var), cnx)\n# df.to_csv(f'data/consult/value_counts/{var}.csv', index=False)\nbar_plot(df, var).show(renderer=\"svg\")\n\n\n\n\n\n\nParto\nEm seguida vamos ver a quantidade de registros para cada tipo de parto.\nObservações\n\nCesariano é 2/3 o tamanho do Normal\n\n\nvar = 'parto'\ndf = pd.read_csv(f'data/consult/value_counts/{var}.csv')\n# df = pd.read_sql_query(query_value_counts(var), cnx)\n# df.to_csv(f'data/consult/value_counts/{var}.csv', index=False)\nbar_plot(df, var).show(renderer=\"svg\")\n\n\n\n\n\n\nIdade\nIdade que as gestantes costumam ter.\nObservações\n\nA distribuição pode ser modelada por uma gaussiana’\nO pico é 20 anos;\nApós os 20 anos há um leve declínio.\n\n\nvar = 'idade'\ndf = pd.read_csv(f'data/consult/value_counts/{var}.csv')\n# df = pd.read_sql_query(query_value_counts(var), cnx)\n# df.to_csv(f'data/consult/value_counts/{var}.csv', index=False)\nbar_plot(df, var).show(renderer=\"svg\")\n\n\n\n\n\n\nRaça/Cor\nVamos observar a frequência que cada raça/cor apresenta.\nObservações\n\nO segundo maior valor é None, ou seja, não possui informação de raça/cor disponível;\nPreta, Parda e principalmente Indígena estão subnotificados;\nA maioria está classificada como Amarela;\nBranca é um pouco mais que a metade de Amarela.\n\n\nvar = 'raca_cor'\ndf = pd.read_csv(f'data/consult/value_counts/{var}.csv')\n# df = pd.read_sql_query(query_value_counts(var), cnx)\n# df.to_csv(f'data/consult/value_counts/{var}.csv', index=False)\nbar_plot(df, var).show(renderer=\"svg\")\n\n\n\n\n\n\nCriticidade\nA quantidade de registros que possuem o município de residência diferente do de internação (valor 1), comparado com a quantidade cujo são iguais (valor 0)\nObservações\n\nA quantidade de municípios diferentes é cerca de 1/3 da quantidade de muncípio de residência e internação iguais.\n\n\nvar = 'criticidade'\ndf = pd.read_csv(f'data/consult/value_counts/{var}.csv')\n# df = pd.read_sql_query(query_value_counts(var), cnx)\n# df.to_csv(f'data/consult/value_counts/{var}.csv', index=False)\nbar_plot(df, var).show(renderer=\"svg\")\n\n\n\n\n\n\nPeríodo\nPor fim, vamos comparar os 2 biênios, passado (2010-11) e presente (2018-19).\nObservações\n\nO passado é um pouco maior que o presente.\n\n\nvar = 'momento'\ndf = pd.read_csv(f'data/consult/value_counts/{var}.csv')\n# df = pd.read_sql_query(query_value_counts(var), cnx)\n# df.to_csv(f'data/consult/value_counts/{var}.csv', index=False)\nbar_plot(df, var).show(renderer=\"svg\")\n\n\n\n\n\n\n\nConhecendo as variáveis da tabela de localidades\nAcima olhamos para variáveis da tabela de partos, agora olharemos para variáveis na tabela de localidades.\n\nRegião do Brasil\nRegiões que compõe o Brasil, são elas:\n\nNorte\nNordeste\nCentro-Oeste\nSudeste\nSul\n\nObservações\n\nNordeste e Sudeste são equivalentes;\nSul e Norte também\n\n\nvar = 'regiao'\ndf = pd.read_csv(f'data/consult/value_counts/{var}.csv')\n# df = pd.read_sql_query(query_value_counts(var, False), cnx)\n# df.to_csv(f'data/consult/value_counts/{var}.csv', index=False)\nbar_plot(df, var).show(renderer=\"svg\")\n\n\n\n\n\n\nGrupo Socioeconômico da Região de Saúde\nIndicador socioeconômico que informa a qual grupo uma região de saúde pertence, sendo de 1 até 5.\nObservações\n\nHá alguns registros que não foi possível obter seu respectivo indicador socioeconômico, ficando no grupo 0\n\n\nvar = 'grupo'\ndf = pd.read_csv(f'data/consult/value_counts/{var}.csv')\n# df = pd.read_sql_query(query_value_counts(var, False), cnx)\n# df.to_csv(f'data/consult/value_counts/{var}.csv', index=False)\nbar_plot(df, var).show(renderer=\"svg\")\n\n\n\n\n\n\nUnidade Federativa (UF)\nO Brasil constitui de 26 Estados.\nObservações\n\nSP é quase o dobro do segundo estado MG\n\n\nvar = 'uf'\ndf = pd.read_csv(f'data/consult/value_counts/{var}.csv')\n# df = pd.read_sql_query(query_value_counts(var, False), cnx)\n# df.to_csv(f'data/consult/value_counts/{var}.csv', index=False)\nbar_plot(df, var).show(renderer=\"svg\")"
  },
  {
    "objectID": "notebooks/notebook.html#comparando-momentos-temporais",
    "href": "notebooks/notebook.html#comparando-momentos-temporais",
    "title": "Deslocamento de Gestantes",
    "section": "Comparando momentos temporais",
    "text": "Comparando momentos temporais\n\ndef plot_bar_percent(\n        df,\n        x, y,\n        title='',\n    ):\n\n    return px.bar(\n        df, x=x, y=y,\n        color = 'parto',\n        text_auto=True,\n        title=title,\n        barmode='group',\n    )\n\n\npath_moments = 'data/consult/group/moments.csv'\npath_moments_q = path_moments.replace('data', 'queries').replace('csv', 'sql')\ndf_moments = pd.read_csv(path_moments)\n# df_moments = read_and_run_query(path_moments_q, cnx)\n# df_moments.to_csv(path_moments, index=False)\ndf_moments_counts = get_num_den(df_moments)\ndf_moments_counts\n\n\n\n\n\n  \n    \n      \n      momento\n      parto\n      regiao\n      uf\n      grupo\n      criticidade\n      records\n      records_den\n    \n  \n  \n    \n      0\n      durante\n      NORMAL\n      Nordeste\n      BA\n      1\n      municipal\n      125273\n      420550\n    \n    \n      1\n      durante\n      NORMAL\n      Nordeste\n      PE\n      1\n      municipal\n      80239\n      171589\n    \n    \n      2\n      durante\n      NORMAL\n      Sudeste\n      RJ\n      5\n      municipal\n      79153\n      399339\n    \n    \n      3\n      durante\n      CESARIANO\n      Nordeste\n      BA\n      1\n      municipal\n      76857\n      186654\n    \n    \n      4\n      durante\n      NORMAL\n      Sudeste\n      SP\n      5\n      municipal\n      73645\n      776083\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      485\n      antes\n      NORMAL\n      Norte\n      RR\n      2\n      regional\n      6\n      710\n    \n    \n      486\n      antes\n      CESARIANO\n      Norte\n      AP\n      2\n      regional\n      5\n      548\n    \n    \n      487\n      antes\n      NORMAL\n      Centro-Oeste\n      MS\n      2\n      regional\n      4\n      1351\n    \n    \n      488\n      antes\n      CESARIANO\n      Centro-Oeste\n      MS\n      2\n      regional\n      4\n      229\n    \n    \n      489\n      antes\n      CESARIANO\n      Norte\n      RR\n      2\n      regional\n      3\n      31\n    \n  \n\n982 rows × 8 columns\n\n\n\n\ndf_regioes = group_col(\n    df_moments_counts, column='regiao', value=None)\nplot_bar_percent(df_regioes, 'regiao', 'percent').show(renderer=\"svg\")\n\n\n\n\n\ndf_regioes\n\n\n\n\n\n  \n    \n      \n      momento\n      parto\n      regiao\n      criticidade\n      records\n      records_den\n      percent\n    \n  \n  \n    \n      52\n      durante\n      NORMAL\n      Nordeste\n      municipal\n      699622\n      2083726\n      33.575528\n    \n    \n      42\n      durante\n      CESARIANO\n      Nordeste\n      municipal\n      499142\n      1207945\n      41.321583\n    \n    \n      56\n      durante\n      NORMAL\n      Sudeste\n      municipal\n      440628\n      2189260\n      20.126801\n    \n    \n      46\n      durante\n      CESARIANO\n      Sudeste\n      municipal\n      281450\n      1287667\n      21.857359\n    \n    \n      12\n      antes\n      NORMAL\n      Nordeste\n      municipal\n      250103\n      817957\n      30.576546\n    \n    \n      32\n      depois\n      NORMAL\n      Nordeste\n      municipal\n      222392\n      634703\n      35.038750\n    \n    \n      58\n      durante\n      NORMAL\n      Sul\n      municipal\n      198546\n      764529\n      25.969715\n    \n    \n      22\n      depois\n      CESARIANO\n      Nordeste\n      municipal\n      181279\n      428789\n      42.276971\n    \n    \n      53\n      durante\n      NORMAL\n      Nordeste\n      regional\n      176996\n      662482\n      26.717103\n    \n    \n      2\n      antes\n      CESARIANO\n      Nordeste\n      municipal\n      163596\n      413105\n      39.601554\n    \n    \n      36\n      depois\n      NORMAL\n      Sudeste\n      municipal\n      150371\n      701907\n      21.423208\n    \n    \n      48\n      durante\n      CESARIANO\n      Sul\n      municipal\n      149781\n      561724\n      26.664519\n    \n    \n      16\n      antes\n      NORMAL\n      Sudeste\n      municipal\n      140816\n      772164\n      18.236540\n    \n    \n      43\n      durante\n      CESARIANO\n      Nordeste\n      regional\n      132790\n      493220\n      26.923077\n    \n    \n      54\n      durante\n      NORMAL\n      Norte\n      municipal\n      119164\n      796221\n      14.966197\n    \n    \n      26\n      depois\n      CESARIANO\n      Sudeste\n      municipal\n      104382\n      463234\n      22.533320\n    \n    \n      44\n      durante\n      CESARIANO\n      Norte\n      municipal\n      94726\n      479500\n      19.755162\n    \n    \n      50\n      durante\n      NORMAL\n      Centro-Oeste\n      municipal\n      90060\n      353234\n      25.495847\n    \n    \n      6\n      antes\n      CESARIANO\n      Sudeste\n      municipal\n      85166\n      428777\n      19.862539\n    \n    \n      38\n      depois\n      NORMAL\n      Sul\n      municipal\n      71082\n      236440\n      30.063441\n    \n    \n      13\n      antes\n      NORMAL\n      Nordeste\n      regional\n      64562\n      250132\n      25.811172\n    \n    \n      40\n      durante\n      CESARIANO\n      Centro-Oeste\n      municipal\n      60389\n      277740\n      21.742997\n    \n    \n      33\n      depois\n      NORMAL\n      Nordeste\n      regional\n      59201\n      211268\n      28.021754\n    \n    \n      18\n      antes\n      NORMAL\n      Sul\n      municipal\n      59116\n      273384\n      21.623797\n    \n    \n      28\n      depois\n      CESARIANO\n      Sul\n      municipal\n      56726\n      187838\n      30.199427\n    \n    \n      51\n      durante\n      NORMAL\n      Centro-Oeste\n      regional\n      48545\n      86949\n      55.831579\n    \n    \n      3\n      antes\n      CESARIANO\n      Nordeste\n      regional\n      47994\n      163596\n      29.336903\n    \n    \n      23\n      depois\n      CESARIANO\n      Nordeste\n      regional\n      47132\n      179260\n      26.292536\n    \n    \n      57\n      durante\n      NORMAL\n      Sudeste\n      regional\n      42057\n      333122\n      12.625104\n    \n    \n      14\n      antes\n      NORMAL\n      Norte\n      municipal\n      39730\n      291774\n      13.616703\n    \n    \n      34\n      depois\n      NORMAL\n      Norte\n      municipal\n      38669\n      251436\n      15.379262\n    \n    \n      8\n      antes\n      CESARIANO\n      Sul\n      municipal\n      37971\n      166097\n      22.860738\n    \n    \n      55\n      durante\n      NORMAL\n      Norte\n      regional\n      35815\n      171621\n      20.868658\n    \n    \n      24\n      depois\n      CESARIANO\n      Norte\n      municipal\n      33005\n      172802\n      19.099895\n    \n    \n      30\n      depois\n      NORMAL\n      Centro-Oeste\n      municipal\n      32940\n      117882\n      27.943197\n    \n    \n      41\n      durante\n      CESARIANO\n      Centro-Oeste\n      regional\n      30500\n      59182\n      51.535940\n    \n    \n      45\n      durante\n      CESARIANO\n      Norte\n      regional\n      29764\n      109905\n      27.081570\n    \n    \n      47\n      durante\n      CESARIANO\n      Sudeste\n      regional\n      26627\n      207424\n      12.836991\n    \n    \n      4\n      antes\n      CESARIANO\n      Norte\n      municipal\n      26529\n      146771\n      18.075097\n    \n    \n      10\n      antes\n      NORMAL\n      Centro-Oeste\n      municipal\n      25467\n      126106\n      20.194915\n    \n    \n      20\n      depois\n      CESARIANO\n      Centro-Oeste\n      municipal\n      23868\n      104931\n      22.746376\n    \n    \n      59\n      durante\n      NORMAL\n      Sul\n      regional\n      23015\n      278040\n      8.277586\n    \n    \n      49\n      durante\n      CESARIANO\n      Sul\n      regional\n      21641\n      208118\n      10.398428\n    \n    \n      31\n      depois\n      NORMAL\n      Centro-Oeste\n      regional\n      17681\n      31013\n      57.011576\n    \n    \n      37\n      depois\n      NORMAL\n      Sudeste\n      regional\n      15780\n      112454\n      14.032404\n    \n    \n      0\n      antes\n      CESARIANO\n      Centro-Oeste\n      municipal\n      14953\n      79117\n      18.899857\n    \n    \n      17\n      antes\n      NORMAL\n      Sudeste\n      regional\n      13246\n      107183\n      12.358303\n    \n    \n      35\n      depois\n      NORMAL\n      Norte\n      regional\n      13138\n      55701\n      23.586650\n    \n    \n      11\n      antes\n      NORMAL\n      Centro-Oeste\n      regional\n      12897\n      25388\n      50.799590\n    \n    \n      25\n      depois\n      CESARIANO\n      Norte\n      regional\n      11265\n      38843\n      29.001364\n    \n    \n      21\n      depois\n      CESARIANO\n      Centro-Oeste\n      regional\n      11019\n      28867\n      38.171615\n    \n    \n      27\n      depois\n      CESARIANO\n      Sudeste\n      regional\n      10524\n      80045\n      13.147604\n    \n    \n      15\n      antes\n      NORMAL\n      Norte\n      regional\n      9414\n      40536\n      23.223801\n    \n    \n      19\n      antes\n      NORMAL\n      Sul\n      regional\n      9126\n      85244\n      10.705739\n    \n    \n      7\n      antes\n      CESARIANO\n      Sudeste\n      regional\n      7860\n      68906\n      11.406844\n    \n    \n      39\n      depois\n      NORMAL\n      Sul\n      regional\n      7804\n      98385\n      7.932103\n    \n    \n      1\n      antes\n      CESARIANO\n      Centro-Oeste\n      regional\n      7234\n      14953\n      48.378252\n    \n    \n      5\n      antes\n      CESARIANO\n      Norte\n      regional\n      7104\n      25996\n      27.327281\n    \n    \n      29\n      depois\n      CESARIANO\n      Sul\n      regional\n      6992\n      76399\n      9.151952\n    \n    \n      9\n      antes\n      CESARIANO\n      Sul\n      regional\n      6847\n      50976\n      13.431811"
  },
  {
    "objectID": "notebooks/notebook.html#tendência-ao-longo-dos-anos",
    "href": "notebooks/notebook.html#tendência-ao-longo-dos-anos",
    "title": "Deslocamento de Gestantes",
    "section": "Tendência ao longo dos anos",
    "text": "Tendência ao longo dos anos\n\ndef plot_year_percent(df):\n    return sns.lineplot(\n        x='ano',\n        y='percent',\n        hue='parto',\n        style='criticidade',\n        data=df\n    )\n\n\npath_years = 'data/consult/group/years.csv'\npath_years_q = path_years.replace('data', 'queries').replace('csv', 'sql')\ndf_years = pd.read_csv(path_years)\n# df_years = read_and_run_query(path_years_q, cnx)\n# df_years.to_csv(path_years, index=False)\ndf_years_counts = get_num_den(df_years)\ndf_years_counts\n\n\n\n\n\n  \n    \n      \n      ano\n      parto\n      regiao\n      uf\n      grupo\n      criticidade\n      records\n      records_den\n    \n  \n  \n    \n      0\n      2010\n      NORMAL\n      Nordeste\n      BA\n      1\n      municipal\n      22866\n      84460\n    \n    \n      1\n      2011\n      NORMAL\n      Nordeste\n      BA\n      1\n      municipal\n      22350\n      80253\n    \n    \n      2\n      2012\n      NORMAL\n      Nordeste\n      BA\n      1\n      municipal\n      21502\n      73804\n    \n    \n      3\n      2015\n      NORMAL\n      Nordeste\n      BA\n      1\n      municipal\n      21412\n      71521\n    \n    \n      4\n      2016\n      NORMAL\n      Nordeste\n      BA\n      1\n      municipal\n      20926\n      68220\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      1629\n      2012\n      CESARIANO\n      Norte\n      RR\n      2\n      regional\n      1\n      3057\n    \n    \n      1630\n      2015\n      CESARIANO\n      Norte\n      RR\n      1\n      regional\n      1\n      7621\n    \n    \n      1631\n      2015\n      NORMAL\n      Norte\n      RR\n      1\n      regional\n      1\n      7518\n    \n    \n      1632\n      2013\n      CESARIANO\n      Norte\n      RR\n      2\n      regional\n      1\n      341\n    \n    \n      1633\n      2010\n      NORMAL\n      Centro-Oeste\n      MS\n      2\n      regional\n      1\n      98\n    \n  \n\n3274 rows × 8 columns\n\n\n\n\ndf_brasil = group_col(\n    df_years_counts, column=None, value=None)\nplot_year_percent(df_brasil)\n\n<AxesSubplot:xlabel='ano', ylabel='percent'>\n\n\n\n\n\n\ndf_rj = group_col(\n    df_years_counts, column='uf', value='RJ')\nplot_year_percent(df_rj)\n\n<AxesSubplot:xlabel='ano', ylabel='percent'>\n\n\n\n\n\n\ndf_norte = group_col(\n    df_years_counts, column='regiao', value='Norte')\nplot_year_percent(df_norte)\n\n<AxesSubplot:xlabel='ano', ylabel='percent'>\n\n\n\n\n\n\ndf_grupo_1 = group_col(\n    df_years_counts, column='grupo', value=1)\nplot_year_percent(df_grupo_1)\n\n<AxesSubplot:xlabel='ano', ylabel='percent'>"
  },
  {
    "objectID": "notebooks/data_collect.html",
    "href": "notebooks/data_collect.html",
    "title": "Deslocamento de Gestantes",
    "section": "",
    "text": "import config\nimport sqlite3\nimport pandas as pd\nfrom tqdm import tqdm\nfrom zipfile import ZipFile\nfrom datatable import dt, f"
  },
  {
    "objectID": "notebooks/data_collect.html#database-files",
    "href": "notebooks/data_collect.html#database-files",
    "title": "Deslocamento de Gestantes",
    "section": "Database Files",
    "text": "Database Files\n\ndef get_db_zip_path(db):\n    db = db.upper()\n    db_zip = f'{config.PATH_DATABASES}/{db}/{db}.zip'\n    if db == 'SIHSUS':\n        db_zip = '/Volumes/SanDisk/SIHSUS.zip'\n    return db_zip\n\n\ndef get_db_files(db):\n    db_zip = get_db_zip_path(db)\n    files = ZipFile(db_zip).namelist()\n    files_path = [\n        f'{db_zip}/{file}'for file in files if 'dict' not in file]\n    return files_path\n\n\ndef get_db_variables_map(db):\n    df = variables[(variables['Database'] == db)]\n    return {row['Variável'] : row['Renomear']\n        for _, row in df.iterrows()}\n\n\ndef get_db_variables_set(db):\n    return set(variables[\n        (variables['Database'] == db)\n    ]['Variável'].values)"
  },
  {
    "objectID": "notebooks/data_collect.html#filters",
    "href": "notebooks/data_collect.html#filters",
    "title": "Deslocamento de Gestantes",
    "section": "Filters",
    "text": "Filters\n\ndef filter_cnes(df):\n    return df[\n        (f['VINC_SUS'] == 1),\n        :\n    ]\n\n\ndef filter_sinasc(df):\n    cnes_col = df['CODESTAB'].to_list()[0]\n    df = df[\n        [cnes in cnes_sus for cnes in cnes_col],\n        :]\n    df = df[\n        (\n            (f['ano_nasc'] >= 2010)\n            &\n            (f['ano_nasc'] <= 2019)\n        ) & (\n            (f['IDADEMAE'] >= 10)\n            &\n            (f['IDADEMAE'] <= 49)\n        ) & (\n            (f['res_RSAUDCOD'] != None)\n            &\n            (f['res_RSAUDCOD'] != 5301)\n        ) & (\n            (f['nasc_RSAUDCOD'] != None)\n        ) & (\n            (f['res_codigo_adotado'] != None)\n        ) & (\n            (f['nasc_codigo_adotado'] != None)\n        ) & (\n            (f['def_loc_nasc'] == 'Hospital') # (f['def_loc_nasc'] == 'Hospital') (f['LOCNASC'] == 1)\n        ) & (\n            (f['def_parto'] != 'Ignorado') # (f['def_parto'] != 'Ignorado') (f['PARTO'] != 9)\n        ) & (\n            (f['CODESTAB'] != None)\n        ),\n        :\n    ]\n    return df\n\n\ndef filter_sih(df):\n    return df[\n        (\n            (f['PROC_REA'] == 310010039)\n            |\n            (f['PROC_REA'] == 411010034)\n        ) & (\n            (f['ano_internacao'] >= 2010)\n            &\n            (f['ano_internacao'] <= 2019)\n        ) & (\n            (f['def_idade_anos'] >= 10)\n            &\n            (f['def_idade_anos'] <= 49)\n        ) & (\n            (f['res_RSAUDCOD'] != None)\n            &\n            (f['res_RSAUDCOD'] != 5301)\n        ) & (\n            (f['int_RSAUDCOD'] != None)\n        ) & (\n            (f['res_codigo_adotado'] != None)\n        ) & (\n            (f['int_codigo_adotado'] != None)\n        ) & (\n            (f['CNES'] != None)\n        ),\n        :\n    ]\n\n\ndef filter_df(db, df):\n    df_filtered = pd.DataFrame()\n    db = db.upper()\n    if db == 'CNES':\n        df_filtered = filter_cnes(df)\n    if db == 'SINASC' and 'CODESTAB' in df.names:\n        df_filtered = filter_sinasc(df)\n    if db == 'SIHSUS' and 'CNES' in df.names:\n        df_filtered = filter_sih(df)\n    return df_filtered"
  },
  {
    "objectID": "notebooks/data_collect.html#sql-db-connection",
    "href": "notebooks/data_collect.html#sql-db-connection",
    "title": "Deslocamento de Gestantes",
    "section": "SQL DB Connection",
    "text": "SQL DB Connection\n\ndef create_connection(db_file=None):\n    db_file = (db_file\n        if db_file else config.PATH_DB)\n    try: conn = sqlite3.connect(db_file)\n    except sqlite3.Error as e: print(e)\n    return conn\n\n\ndef append_table_to_con(df, con, table):\n    try:\n        df.to_sql(\n            name = table,\n            con = con,\n            if_exists = 'append', # append | replace\n            index = False,\n        )\n    except Exception as excep:\n        print(excep)\n        print(df.columns)\n\n\ndef collect_db(db, con, chunk_size=25):\n    dfs = list()\n    files = get_db_files(db)\n    variables = get_db_variables_set(db)\n    map_cols = get_db_variables_map(db)\n    for file_path in tqdm(files):\n        colums = dt.fread(file_path, max_nrows=0).names\n        colums = [col in variables for col in colums]\n        df = dt.fread(file_path, columns=colums)\n        df = filter_df(db, df)\n        if df.shape[0] > 0:\n            df = df.to_pandas().rename(columns=map_cols)\n            dfs.append(df)\n        if len(dfs) > chunk_size:\n            append_table_to_con(pd.concat(dfs), con, db)\n            dfs = list()\n    if len(dfs) > 1:\n        append_table_to_con(pd.concat(dfs), con, db)\n    return True"
  },
  {
    "objectID": "notebooks/data_collect.html#run",
    "href": "notebooks/data_collect.html#run",
    "title": "Deslocamento de Gestantes",
    "section": "Run",
    "text": "Run\n\ndb_path = f'{config.PATH_DATABASES}/PARTOS/partos.db'\nwith (conn := create_connection(db_path)):\n    for db in ['sinasc']:#, 'cnes']:\n        collect_db(db, conn)\n\n100%|██████████| 675/675 [04:25<00:00,  2.54it/s]\n\n\n\ndef\n\n100%|██████████| 675/675 [05:24<00:00, 2.08it/s]\n2.48GB\n\nnumeros\n\n100%|██████████| 675/675 [03:50<00:00, 2.93it/s]\n1.48GB\n\nfiltro cnes e numeros\n\n100%|██████████| 675/675 [03:47<00:00, 2.97it/s]\n1.28GB\n\nfiltro cnes e def\n\n100%|██████████| 675/675 [04:25<00:00, 2.54it/s]\n2.15GB\n\nconn = create_connection(db_path)\n\n\nq = 'select count(*) from sinasc limit 5'\npd.read_sql_query(q, con=conn)\n\n\n\n\n\n  \n    \n      \n      count(*)\n    \n  \n  \n    \n      0\n      24494524\n    \n  \n\n\n\n\n24494524\n\n24494524-16816760\n\n7677764\n\n\n\nq = 'select * from sinasc order by cnes_hospital limit 5'\npd.read_sql_query(q, con=conn)\n\n\n\n\n\n  \n    \n      \n      cnes_hospital\n      idade\n      nivel_escolaridade\n      n_gestados\n      data\n      apgar1\n      apgar5\n      raca_cor\n      sexo_nascido\n      raca_cor_nascido\n      local_nascimento\n      tipo_parto\n      consultas_pre_natal\n      hosp_cod_regiao_saude\n      hosp_cod_municipio\n      res_cod_regiao_saude\n      res_cod_municipio\n      ano\n    \n  \n  \n    \n      0\n      27\n      32\n      4\n      1\n      4012010\n      8.0\n      9.0\n      None\n      Feminino\n      Parda\n      Hospital\n      Cesáreo\n      7 e mais\n      2601\n      260290\n      2601\n      260290\n      2010\n    \n    \n      1\n      27\n      21\n      5\n      1\n      19012010\n      8.0\n      9.0\n      None\n      Masculino\n      Parda\n      Hospital\n      Cesáreo\n      de 4 a 6\n      2601\n      260290\n      2601\n      260290\n      2010\n    \n    \n      2\n      27\n      23\n      4\n      1\n      3022010\n      9.0\n      10.0\n      None\n      Masculino\n      Parda\n      Hospital\n      Cesáreo\n      de 4 a 6\n      2601\n      260290\n      2601\n      260290\n      2010\n    \n    \n      3\n      27\n      25\n      4\n      1\n      27012010\n      8.0\n      9.0\n      None\n      Masculino\n      Parda\n      Hospital\n      Vaginal\n      7 e mais\n      2601\n      260290\n      2601\n      260720\n      2010\n    \n    \n      4\n      27\n      34\n      3\n      1\n      20012010\n      8.0\n      9.0\n      None\n      Feminino\n      Parda\n      Hospital\n      Cesáreo\n      de 1 a 3\n      2601\n      260290\n      2601\n      260720\n      2010\n    \n  \n\n\n\n\nnumeric ordinal: - idade - apgar1 - apgar5 - nivel_escolaridade - indice socioeconomico regiao saude res\ncategoric ordinal: - consultas_pre_natal\ncategoric one-hot encondig: - tipo_parto - raca_cor\n\nconn.close()\n\n\nddf = pd.DataFrame()\nddf['cor'] = ['b', 'b', 'a', 'p', 'p', 'p']\nddf['idade'] = [31, 21, 24, 26, 35, 19]\nddf['escol'] = [3, 2, 0, 1, 2, 2]\ny_target = pd.Series([0, 1, 1, 0, 2, 2])\nddf = pd.get_dummies(ddf)\n\n\nfrom sklearn.datasets import load_iris\nfrom sklearn.tree import DecisionTreeClassifier\n\n\niris = load_iris()\n\n\nclf = DecisionTreeClassifier(random_state=0)\n\n\nclf.fit(ddf, y_target)\n\nDecisionTreeClassifier(random_state=0)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.DecisionTreeClassifierDecisionTreeClassifier(random_state=0)\n\n\n\nfrom dtreeviz.trees import dtreeviz \n\n\nviz = dtreeviz(clf, ddf, y_target)\nviz\n\n/Users/lucas/Code/lucaslopes/partos/venv/lib/python3.10/site-packages/sklearn/base.py:450: UserWarning: X does not have valid feature names, but DecisionTreeClassifier was fitted with feature names\n  warnings.warn("
  },
  {
    "objectID": "notebooks/queries.html",
    "href": "notebooks/queries.html",
    "title": "Deslocamento de Gestantes",
    "section": "",
    "text": "conn = sqlite3.connect(f'{config.PATH_DATABASES}/PARTOS/partos.db')\n\n\npd.read_sql_query('select * from sinasc limit 5', con=conn)\n\n\n\n\n\n  \n    \n      \n      cnes_hospital\n      idade\n      nivel_escolaridade\n      n_gestados\n      data\n      apgar1\n      apgar5\n      raca_cor\n      sexo_nascido\n      raca_cor_nascido\n      local_nascimento\n      tipo_parto\n      consultas_pre_natal\n      hosp_cod_regiao_saude\n      hosp_cod_municipio\n      res_cod_regiao_saude\n      res_cod_municipio\n      ano\n    \n  \n  \n    \n      0\n      2515598\n      24\n      4\n      1\n      7052010\n      9.0\n      10.0\n      None\n      Masculino\n      Branca\n      Hospital\n      Cesáreo\n      7 e mais\n      1104\n      110002\n      1201\n      120040\n      2010\n    \n    \n      1\n      2798484\n      20\n      3\n      1\n      23022010\n      8.0\n      9.0\n      None\n      Masculino\n      Branca\n      Hospital\n      Vaginal\n      7 e mais\n      1103\n      110030\n      1201\n      120040\n      2010\n    \n    \n      2\n      5701929\n      21\n      4\n      1\n      18042010\n      9.0\n      10.0\n      None\n      Feminino\n      Parda\n      Hospital\n      Vaginal\n      de 4 a 6\n      1201\n      120001\n      1201\n      120001\n      2010\n    \n    \n      3\n      5701929\n      31\n      3\n      1\n      17032010\n      9.0\n      10.0\n      None\n      Feminino\n      Parda\n      Hospital\n      Vaginal\n      de 4 a 6\n      1201\n      120001\n      1201\n      120001\n      2010\n    \n    \n      4\n      5701929\n      23\n      3\n      1\n      18032010\n      7.0\n      9.0\n      None\n      Masculino\n      Parda\n      Hospital\n      Vaginal\n      7 e mais\n      1201\n      120001\n      1201\n      120001\n      2010\n    \n  \n\n\n\n\n\npath_query = 'queries/info/perfil.sql'\nwith open(path_query) as f:\n    query = f.read()\n# df = pd.read_sql_query(query, con=conn)\n# df\n\n\nperfil_path = 'data/consult/perfil_gestante.csv.xz'\n# df.to_csv(perfil_path, index=False)\ndf = pd.read_csv(perfil_path)\n\n\npath_query = 'queries/info/gestantes.sql'\nwith open(path_query) as f:\n    query = f.read()\n# df = data_load.df_query(query)\ndf\n\n\n\n\n\n  \n    \n      \n      idade\n      nivel_escolaridade\n      raca_cor\n      tipo_parto\n      res_cod_municipio\n      hosp_cod_municipio\n      res_cod_regiao_saude\n      hosp_cod_regiao_saude\n      raca_cor_nascido\n      apgar1\n      apgar5\n      records\n    \n  \n  \n    \n      0\n      21\n      4\n      4.0\n      Vaginal\n      130260\n      130260\n      1301\n      1301\n      Parda\n      9.0\n      10.0\n      241\n    \n    \n      1\n      33\n      5\n      1.0\n      Cesáreo\n      330455\n      330455\n      3305\n      3305\n      Branca\n      9.0\n      10.0\n      238\n    \n    \n      2\n      20\n      4\n      4.0\n      Vaginal\n      130260\n      130260\n      1301\n      1301\n      Parda\n      9.0\n      10.0\n      229\n    \n    \n      3\n      19\n      4\n      4.0\n      Vaginal\n      130260\n      130260\n      1301\n      1301\n      Parda\n      9.0\n      10.0\n      226\n    \n    \n      4\n      22\n      4\n      4.0\n      Vaginal\n      130260\n      130260\n      1301\n      1301\n      Parda\n      9.0\n      10.0\n      222\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      889959\n      49\n      4\n      4.0\n      Vaginal\n      230590\n      230410\n      2315\n      2315\n      Parda\n      8.0\n      9.0\n      1\n    \n    \n      889960\n      49\n      4\n      4.0\n      Vaginal\n      353800\n      353800\n      3524\n      3524\n      Parda\n      9.0\n      9.0\n      1\n    \n    \n      889961\n      49\n      5\n      1.0\n      Cesáreo\n      350950\n      350950\n      3512\n      3512\n      Branca\n      9.0\n      10.0\n      1\n    \n    \n      889962\n      49\n      5\n      1.0\n      Cesáreo\n      354580\n      350160\n      3512\n      3512\n      Branca\n      3.0\n      5.0\n      1\n    \n    \n      889963\n      49\n      5\n      4.0\n      Cesáreo\n      211130\n      211130\n      2101\n      2101\n      Parda\n      2.0\n      8.0\n      1\n    \n  \n\n889964 rows × 12 columns\n\n\n\n\nConversões de Tipagem\n\n# df['consultas'] = df['consultas'].astype(int)\ndf['nivel_escolaridade'] = df['nivel_escolaridade'].astype(int)\ndf['apgar1'] = df['apgar1'].astype(int)\ndf['apgar5'] = df['apgar5'].astype(int)\n\n\n\nIdade\n[(11.964, 24.0] < (24.0, 36.0] < (36.0, 48.0]]\nBins\n\ndf['idade'].unique()\n\narray([21, 33, 20, 19, 22, 31, 32, 30, 25, 18, 17, 24, 26, 23, 29, 34, 35,\n       28, 36, 16, 27, 37, 38, 15, 39, 40, 14, 42, 41, 13, 43, 44, 12, 45,\n       11, 46, 47, 10, 48, 49])\n\n\n\npd.cut(df['idade'], 3)\n\n0         (9.961, 23.0]\n1          (23.0, 36.0]\n2         (9.961, 23.0]\n3         (9.961, 23.0]\n4         (9.961, 23.0]\n              ...      \n889959     (36.0, 49.0]\n889960     (36.0, 49.0]\n889961     (36.0, 49.0]\n889962     (36.0, 49.0]\n889963     (36.0, 49.0]\nName: idade, Length: 889964, dtype: category\nCategories (3, interval[float64, right]): [(9.961, 23.0] < (23.0, 36.0] < (36.0, 49.0]]\n\n\n\ndf['idade'] = pd.cut(df['idade'], 3)\n\n\n\nRaça/Cor\nMap\n\ndf['raca_cor'] = df['raca_cor'].map(\n    {1: 'Branca', 2: 'Preta', 3: 'Amarela', 4: 'Parda', 5: 'Indígena'}\n)\n\n\n\nCriticidade\n\n0: res_cod_municipio == hosp_cod_municipio\n1: (res_cod_municipio != hosp_cod_municipio) and (res_cod_regiao_saude == hosp_cod_regiao_saude)\n2: res_cod_regiao_saude != hosp_cod_regiao_saude\n\n\ndf['criticidade_0'] = df['res_cod_municipio'] == df['hosp_cod_municipio']\ndf['criticidade_1'] = (df['res_cod_municipio'] != df['hosp_cod_municipio']) & (df['res_cod_regiao_saude'] == df['hosp_cod_regiao_saude'])\ndf['criticidade_2'] = df['res_cod_regiao_saude'] != df['hosp_cod_regiao_saude']\n\n\n\nGrupo SocioEconômico\nde 1 a 5 com base na região de saúde do município\n\nmunicipios = pd.read_csv('data/consult/health_regions.csv')\nmunicipios = {row['Cód IBGE'] : row['Grupo'] for _, row in municipios.iterrows()}\n\n\ndf['grupo'] = df['res_cod_municipio'].map(municipios)\n\n\ndf.grupo.unique()\n\narray([ 4.,  5.,  2.,  3.,  1.,  0., nan])\n\n\n\n\nRemover variáveis que não serão usadas\n\nres_cod_municipio\nhosp_cod_municipio\nres_cod_regiao_saude\nhosp_cod_regiao_saude\n\n\n# - res_cod_municipio\n# - hosp_cod_municipio\n# - res_cod_regiao_saude\n# - hosp_cod_regiao_saude\n\n\ndf.drop(['records', 'grupo',\n    'res_cod_municipio', 'hosp_cod_municipio',\n    'res_cod_regiao_saude', 'hosp_cod_regiao_saude',\n], axis=1, inplace=True)\n\n\n\nResultado\n\ndf = pd.get_dummies(df)\n\n\ndf\n\n\n\n\n\n  \n    \n      \n      nivel_escolaridade\n      apgar1\n      apgar5\n      criticidade_0\n      criticidade_1\n      criticidade_2\n      idade_(9.961, 23.0]\n      idade_(23.0, 36.0]\n      idade_(36.0, 49.0]\n      raca_cor_Amarela\n      ...\n      raca_cor_Indígena\n      raca_cor_Parda\n      raca_cor_Preta\n      tipo_parto_Cesáreo\n      tipo_parto_Vaginal\n      raca_cor_nascido_Amarela\n      raca_cor_nascido_Branca\n      raca_cor_nascido_Indígena\n      raca_cor_nascido_Parda\n      raca_cor_nascido_Preta\n    \n  \n  \n    \n      0\n      4\n      9\n      10\n      True\n      False\n      False\n      1\n      0\n      0\n      0\n      ...\n      0\n      1\n      0\n      0\n      1\n      0\n      0\n      0\n      1\n      0\n    \n    \n      1\n      5\n      9\n      10\n      True\n      False\n      False\n      0\n      1\n      0\n      0\n      ...\n      0\n      0\n      0\n      1\n      0\n      0\n      1\n      0\n      0\n      0\n    \n    \n      2\n      4\n      9\n      10\n      True\n      False\n      False\n      1\n      0\n      0\n      0\n      ...\n      0\n      1\n      0\n      0\n      1\n      0\n      0\n      0\n      1\n      0\n    \n    \n      3\n      4\n      9\n      10\n      True\n      False\n      False\n      1\n      0\n      0\n      0\n      ...\n      0\n      1\n      0\n      0\n      1\n      0\n      0\n      0\n      1\n      0\n    \n    \n      4\n      4\n      9\n      10\n      True\n      False\n      False\n      1\n      0\n      0\n      0\n      ...\n      0\n      1\n      0\n      0\n      1\n      0\n      0\n      0\n      1\n      0\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      889959\n      4\n      8\n      9\n      False\n      True\n      False\n      0\n      0\n      1\n      0\n      ...\n      0\n      1\n      0\n      0\n      1\n      0\n      0\n      0\n      1\n      0\n    \n    \n      889960\n      4\n      9\n      9\n      True\n      False\n      False\n      0\n      0\n      1\n      0\n      ...\n      0\n      1\n      0\n      0\n      1\n      0\n      0\n      0\n      1\n      0\n    \n    \n      889961\n      5\n      9\n      10\n      True\n      False\n      False\n      0\n      0\n      1\n      0\n      ...\n      0\n      0\n      0\n      1\n      0\n      0\n      1\n      0\n      0\n      0\n    \n    \n      889962\n      5\n      3\n      5\n      False\n      True\n      False\n      0\n      0\n      1\n      0\n      ...\n      0\n      0\n      0\n      1\n      0\n      0\n      1\n      0\n      0\n      0\n    \n    \n      889963\n      5\n      2\n      8\n      True\n      False\n      False\n      0\n      0\n      1\n      0\n      ...\n      0\n      1\n      0\n      1\n      0\n      0\n      0\n      0\n      1\n      0\n    \n  \n\n889964 rows × 21 columns\n\n\n\n\nfor col in df.columns:\n    print(col)\n\nnivel_escolaridade\napgar1\napgar5\ncriticidade_0\ncriticidade_1\ncriticidade_2\nidade_(9.961, 23.0]\nidade_(23.0, 36.0]\nidade_(36.0, 49.0]\nraca_cor_Amarela\nraca_cor_Branca\nraca_cor_Indígena\nraca_cor_Parda\nraca_cor_Preta\ntipo_parto_Cesáreo\ntipo_parto_Vaginal\nraca_cor_nascido_Amarela\nraca_cor_nascido_Branca\nraca_cor_nascido_Indígena\nraca_cor_nascido_Parda\nraca_cor_nascido_Preta\n\n\n\ndf['criticidade_0'] = df['criticidade_0'].astype(bool)\ndf['criticidade_1'] = df['criticidade_1'].astype(bool)\ndf['criticidade_2'] = df['criticidade_2'].astype(bool)\ndf['idade_(9.961, 23.0]'] = df['idade_(9.961, 23.0]'].astype(bool)\ndf['idade_(23.0, 36.0]'] = df['idade_(23.0, 36.0]'].astype(bool)\ndf['idade_(36.0, 49.0]'] = df['idade_(36.0, 49.0]'].astype(bool)\ndf['tipo_parto_Cesáreo'] = df['tipo_parto_Cesáreo'].astype(bool)\ndf['tipo_parto_Vaginal'] = df['tipo_parto_Vaginal'].astype(bool)\ndf['raca_cor_Amarela'] = df['raca_cor_Amarela'].astype(bool)\ndf['raca_cor_Branca'] = df['raca_cor_Branca'].astype(bool)\ndf['raca_cor_Indígena'] = df['raca_cor_Indígena'].astype(bool)\ndf['raca_cor_Parda'] = df['raca_cor_Parda'].astype(bool)\ndf['raca_cor_Preta'] = df['raca_cor_Preta'].astype(bool)\ndf['raca_cor_nascido_Preta'] = df['raca_cor_nascido_Preta'].astype(bool)\ndf['raca_cor_nascido_Amarela'] = df['raca_cor_nascido_Amarela'].astype(bool)\ndf['raca_cor_nascido_Branca'] = df['raca_cor_nascido_Branca'].astype(bool)\ndf['raca_cor_nascido_Indígena'] = df['raca_cor_nascido_Indígena'].astype(bool)\ndf['raca_cor_nascido_Parda'] = df['raca_cor_nascido_Parda'].astype(bool)\ndf['raca_cor_nascido_Preta'] = df['raca_cor_nascido_Preta'].astype(bool)\n\n\n\nSeparando X, y\n\ncriticidade = [\n    'criticidade_0', 'criticidade_1', 'criticidade_2'\n]\n\n\nX = df.drop(criticidade, axis=1)\ny = df[criticidade]\n\n\nX\n\n\n\n\n\n  \n    \n      \n      nivel_escolaridade\n      apgar1\n      apgar5\n      idade_(9.961, 23.0]\n      idade_(23.0, 36.0]\n      idade_(36.0, 49.0]\n      raca_cor_Amarela\n      raca_cor_Branca\n      raca_cor_Indígena\n      raca_cor_Parda\n      raca_cor_Preta\n      tipo_parto_Cesáreo\n      tipo_parto_Vaginal\n      raca_cor_nascido_Amarela\n      raca_cor_nascido_Branca\n      raca_cor_nascido_Indígena\n      raca_cor_nascido_Parda\n      raca_cor_nascido_Preta\n    \n  \n  \n    \n      0\n      4\n      9\n      10\n      True\n      False\n      False\n      False\n      False\n      False\n      True\n      False\n      False\n      True\n      False\n      False\n      False\n      True\n      False\n    \n    \n      1\n      5\n      9\n      10\n      False\n      True\n      False\n      False\n      True\n      False\n      False\n      False\n      True\n      False\n      False\n      True\n      False\n      False\n      False\n    \n    \n      2\n      4\n      9\n      10\n      True\n      False\n      False\n      False\n      False\n      False\n      True\n      False\n      False\n      True\n      False\n      False\n      False\n      True\n      False\n    \n    \n      3\n      4\n      9\n      10\n      True\n      False\n      False\n      False\n      False\n      False\n      True\n      False\n      False\n      True\n      False\n      False\n      False\n      True\n      False\n    \n    \n      4\n      4\n      9\n      10\n      True\n      False\n      False\n      False\n      False\n      False\n      True\n      False\n      False\n      True\n      False\n      False\n      False\n      True\n      False\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      889959\n      4\n      8\n      9\n      False\n      False\n      True\n      False\n      False\n      False\n      True\n      False\n      False\n      True\n      False\n      False\n      False\n      True\n      False\n    \n    \n      889960\n      4\n      9\n      9\n      False\n      False\n      True\n      False\n      False\n      False\n      True\n      False\n      False\n      True\n      False\n      False\n      False\n      True\n      False\n    \n    \n      889961\n      5\n      9\n      10\n      False\n      False\n      True\n      False\n      True\n      False\n      False\n      False\n      True\n      False\n      False\n      True\n      False\n      False\n      False\n    \n    \n      889962\n      5\n      3\n      5\n      False\n      False\n      True\n      False\n      True\n      False\n      False\n      False\n      True\n      False\n      False\n      True\n      False\n      False\n      False\n    \n    \n      889963\n      5\n      2\n      8\n      False\n      False\n      True\n      False\n      False\n      False\n      True\n      False\n      True\n      False\n      False\n      False\n      False\n      True\n      False\n    \n  \n\n889964 rows × 18 columns\n\n\n\n\ny\n\n\n\n\n\n  \n    \n      \n      criticidade_0\n      criticidade_1\n      criticidade_2\n    \n  \n  \n    \n      0\n      True\n      False\n      False\n    \n    \n      1\n      True\n      False\n      False\n    \n    \n      2\n      True\n      False\n      False\n    \n    \n      3\n      True\n      False\n      False\n    \n    \n      4\n      True\n      False\n      False\n    \n    \n      ...\n      ...\n      ...\n      ...\n    \n    \n      889959\n      False\n      True\n      False\n    \n    \n      889960\n      True\n      False\n      False\n    \n    \n      889961\n      True\n      False\n      False\n    \n    \n      889962\n      False\n      True\n      False\n    \n    \n      889963\n      True\n      False\n      False\n    \n  \n\n889964 rows × 3 columns\n\n\n\n\n\nÁrvore de Decisão\n\nclf = DecisionTreeClassifier(\n    random_state=0,\n    criterion='entropy',\n    max_depth=5\n)\nclf.fit(X, y)\n\nDecisionTreeClassifier(criterion='entropy', max_depth=5, random_state=0)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.DecisionTreeClassifierDecisionTreeClassifier(criterion='entropy', max_depth=5, random_state=0)\n\n\n\nestrutura = export_graphviz(\n    decision_tree = clf,\n    out_file = None,\n    feature_names = X.columns,\n    filled = True\n)\ngraph = graphviz.Source(estrutura)\npng_bytes = graph.pipe(format='png')\nwith open('dtree_pipe.png','wb') as f:\n    f.write(png_bytes)\n\n\nviz = dtreeviz(clf)\nviz\n\nTypeError: unhashable type: 'numpy.ndarray'"
  },
  {
    "objectID": "notebooks/cnes_inspec.html",
    "href": "notebooks/cnes_inspec.html",
    "title": "Deslocamento de Gestantes",
    "section": "",
    "text": "PATH_DBS = os.path.join(*[str(Path.home()), 'Databases',])\nfile_cnes = os.path.join(*[PATH_DBS, 'CNES', 'CNES.csv.gzip'])\n\n\ndf_cnes = dt.fread(file_cnes)\ndf_cnes\n\n\n\n  \n  \n    cod_ufmundef_naturezacod_esfera_admdef_retencaodef_tributosdef_esfera_admcod_retencaocnescod_natureza\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    0350410Administração Direta da Saúde (MS, SES, e SMS)3Estabelecimento PUBLICOEstabelecimento PUBLICOMUNICIPAL1027860521\n    1355030Empresa Privada4Estabelecimento PRIVADO LUCRATIVAPRIVADA1428147147\n    2351880Administração Direta da Saúde (MS, SES, e SMS)2Estabelecimento PUBLICOEstabelecimento PUBLICOESTADUAL1027847691\n    3350440Administração Direta da Saúde (MS, SES, e SMS)3Estabelecimento PUBLICOEstabelecimento PUBLICOMUNICIPAL1020510011\n    4352390Administração Direta da Saúde (MS, SES, e SMS)3Estabelecimento PUBLICOEstabelecimento PUBLICOMUNICIPAL1080128061\n    5355030Administração Direta da Saúde (MS, SES, e SMS)2Estabelecimento PUBLICOEstabelecimento PUBLICOESTADUAL1020284761\n    6355030Administração Direta da Saúde (MS, SES, e SMS)3Estabelecimento PUBLICOMUNICIPAL1020937311\n    7354090Administração Direta da Saúde (MS, SES, e SMS)3Estabelecimento PUBLICOEstabelecimento PUBLICOMUNICIPAL1020937661\n    8354090Administração Direta da Saúde (MS, SES, e SMS)3Estabelecimento PUBLICOEstabelecimento PUBLICOMUNICIPAL1020938711\n    9351340Administração Direta da Saúde (MS, SES, e SMS)3Estabelecimento PUBLICOEstabelecimento PUBLICOMUNICIPAL1020888941\n    10350860Administração Direta da Saúde (MS, SES, e SMS)3Estabelecimento PUBLICOEstabelecimento PUBLICOMUNICIPAL1020889081\n    11351620Adm Indireta - Organização Social Pública2Estabelecimento PUBLICOEstabelecimento PUBLICOESTADUAL1020607016\n    12350450Administração Direta da Saúde (MS, SES, e SMS)2Estabelecimento PUBLICOEstabelecimento PUBLICOESTADUAL1020504551\n    13353530Administração Direta da Saúde (MS, SES, e SMS)3Estabelecimento PUBLICOEstabelecimento PUBLICOMUNICIPAL1020940101\n    14354980Empresa Privada4Estabelecimento PRIVADO LUCRATIVAEstabelecimento PRIVADO LUCRATIVAPRIVADA1428047947\n    ⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮\n    13,327,506530180Administração Direta da Saúde (MS, SES, e SMS)2Estabelecimento PUBLICOEstabelecimento PUBLICOESTADUAL1037428221\n    13,327,507530180Administração Direta da Saúde (MS, SES, e SMS)2Estabelecimento PUBLICOEstabelecimento PUBLICOESTADUAL1054474101\n    13,327,508530180Empresa Privada4Estabelecimento PRIVADO LUCRATIVAPRIVADA1470222047\n    13,327,509530180Administração Direta da Saúde (MS, SES, e SMS)2Estabelecimento PUBLICOEstabelecimento PUBLICOESTADUAL1071089231\n    13,327,510530180Administração Direta da Saúde (MS, SES, e SMS)2Estabelecimento PUBLICOEstabelecimento PUBLICOESTADUAL1072387031\n  \n  \n  \n    13,327,511 rows × 9 columns\n  \n\n\n\n\ndf_cnes[:, dt.count(), by(\"def_natureza\")].sort(-f.count)\n\n\n\n  \n  \n    def_naturezacount\n    ▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    0Administração Direta da Saúde (MS, SES, e SMS)7553512\n    13790145\n    2Empresa Privada1368136\n    3Entidade Beneficente SEM fins lucrativos359050\n    4Adm Indireta - Fundação Pública49923\n    5Adm Direta outros orgãos (MEX, MEx, Marinha,...)45370\n    6Sindicato36903\n    7Adm Indireta - Empresa Pública32877\n    8Adm Indireta - Autarquias31627\n    9Fundação Privada28009\n    10Adm Indireta - Organização Social Pública16094\n    11Cooperativa10374\n    12Serviço Social Autônomo4722\n    13Economia MIsta769\n  \n  \n  \n    14 rows × 2 columns\n  \n\n\n\n\ndf_cnes[:, dt.count(), by(\"def_retencao\")].sort(-f.count)\n\n\n\n  \n  \n    def_retencaocount\n    ▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    0Estabelecimento PUBLICO7728280\n    13790145\n    2Estabelecimento PRIVADO LUCRATIVA1064926\n    3Estabelecimento FILANTROPICO283680\n    4Estabelecimento PRIVADO LUCRATIVA SIMPLES187560\n    5Estabelecimento SEM FINS LUCRATIVOS126286\n    6Estabelecimento PESSOA FISICA109798\n    7Estabelecimento SINDICAL36836\n  \n  \n  \n    8 rows × 2 columns\n  \n\n\n\n\ndf_cnes[:, dt.count(), by(\"def_tributos\")].sort(-f.count)\n\n\n\n  \n  \n    def_tributoscount\n    ▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    0Estabelecimento PUBLICO7635735\n    15511251\n    2Estabelecimento FILANTROPICO64401\n    3Estabelecimento SEM FINS LUCRATIVOS46389\n    4Estabelecimento PRIVADO LUCRATIVA43646\n    5Estabelecimento PRIVADO LUCRATIVA SIMPLES20068\n    6Estabelecimento SINDICAL3125\n    7Estabelecimento Ret.Manten.código IR2083\n    8Estabelecimento Ret.Manten.código 19372\n    9Estabelecimento PESSOA FISICA281\n    10Retenção de tributos da mantenedora não informada160\n  \n  \n  \n    11 rows × 2 columns\n  \n\n\n\n\ndf_cnes[:, dt.count(), by(\"def_esfera_adm\")].sort(-f.count)\n\n\n\n  \n  \n    def_esfera_admcount\n    ▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    0MUNICIPAL7378258\n    13790145\n    2PRIVADA1807963\n    3ESTADUAL313975\n    4FEDERAL37170\n  \n  \n  \n    5 rows × 2 columns"
  },
  {
    "objectID": "notebooks/data_compare.html",
    "href": "notebooks/data_compare.html",
    "title": "Deslocamento de Gestantes",
    "section": "",
    "text": "import config, data_load\nimport pandas as pd\nimport plotly.express as px\nfrom tqdm import tqdm\n\n\n\n\n\n\ndef read_query(query_name):\n    path_query = f'queries/compare/{query_name}.sql'\n    with open(path_query) as f:\n        query = f.read()\n    return query\n\n\ndef query_result(query_name):\n    query = read_query(query_name)\n    df = data_load.df_query(query)\n    return df\n\n\ndef query_cnes_result(query_name,\n        up_bound, low_bound, cnes_pref=None):\n    query = read_query(query_name)\n    query = query.replace('UP_BOUND', str(up_bound))\n    query = query.replace('LOW_BOUND', str(low_bound))\n    if cnes_pref != None:\n        increment = \"\\n and CODESTAB not like '2%'\"\n        if cnes_pref == False:\n            increment = increment.replace(' not', '')\n            print(increment)\n        query = query.replace('Hospital', increment)\n    df = data_load.df_query(query)\n    return df\n\n\n\n\n\nall_sih = 157033546 # query_result('count_sih')['records'][0]\nall_sinasc = 74398079 # query_result('count_sinasc')['records'][0]\n\n\ndf_count = pd.DataFrame([\n    ['SIH', all_sih],\n    ['SINASC', all_sinasc]\n], columns=['database', 'records'])\nfig = px.bar(df_count, x='database', y='records')\nfig.show()\n\nUnable to display output for mime type(s): application/vnd.plotly.v1+json\n\n\n\n\n\n\nflt_sih = 16814490 # query_result('filter_sih')['records'][0]\nflt_sinasc = 28197164 # query_result('filter_sinasc')['records'][0]\n\n\ndf_filter = pd.DataFrame([\n    ['SIH', flt_sih],\n    ['SINASC', flt_sinasc]\n], columns=['database', 'records'])\nfig = px.bar(df_filter, x='database', y='records')\nfig.show()\n\nUnable to display output for mime type(s): application/vnd.plotly.v1+json\n\n\n\n\n\n\ndf_cnes = pd.read_csv(\n    'data/consult/compare/cnes_sus.csv',\n    dtype={'CNES':str})\ndf_cnes\n\n\n\n\n\n  \n    \n      \n      CNES\n      repeted\n    \n  \n  \n    \n      0\n      2002043\n      163\n    \n    \n      1\n      2002159\n      163\n    \n    \n      2\n      3006166\n      163\n    \n    \n      3\n      3382745\n      163\n    \n    \n      4\n      3393984\n      163\n    \n    \n      ...\n      ...\n      ...\n    \n    \n      130269\n      9708618\n      1\n    \n    \n      130270\n      9715568\n      1\n    \n    \n      130271\n      3475840\n      1\n    \n    \n      130272\n      3933067\n      1\n    \n    \n      130273\n      6094325\n      1\n    \n  \n\n130274 rows × 2 columns\n\n\n\n\n# df_cnes_sih = pd.concat([\n#   query_cnes_result('sus_sih', 10**6, 4200),\n#   query_cnes_result('sus_sih', 4200, 1200),\n#   query_cnes_result('sus_sih', 1200, 270),\n#   query_cnes_result('sus_sih', 270, 6),\n#   query_cnes_result('sus_sih', 6, 1),\n# ])\npath_cnes_sih = 'data/consult/compare/cnes_sih.csv'\n# df_cnes_sih.to_csv(path_cnes_sih, index=False)\ndf_cnes_sih = pd.read_csv(\n    path_cnes_sih,\n    dtype={'CNES':str})\ndf_cnes_sih\n\n\n\n\n\n  \n    \n      \n      CNES\n      records\n    \n  \n  \n    \n      0\n      0002232\n      101955\n    \n    \n      1\n      3151794\n      75209\n    \n    \n      2\n      2323397\n      74417\n    \n    \n      3\n      2311682\n      64833\n    \n    \n      4\n      0026794\n      63700\n    \n    \n      ...\n      ...\n      ...\n    \n    \n      4144\n      7320175\n      1\n    \n    \n      4145\n      7603029\n      1\n    \n    \n      4146\n      7621442\n      1\n    \n    \n      4147\n      7704364\n      1\n    \n    \n      4148\n      7743068\n      1\n    \n  \n\n4149 rows × 2 columns\n\n\n\n\n# df_cnes_sinasc = pd.concat([\n#   query_cnes_result('sus_sinasc', 10**6, 7777),\n#   query_cnes_result('sus_sinasc', 7777, 2600),\n#   query_cnes_result('sus_sinasc', 2600, 1100),\n#   query_cnes_result('sus_sinasc', 1100, 365),\n#   query_cnes_result('sus_sinasc', 365, 51),\n#   query_cnes_result('sus_sinasc', 51, 6),\n#   query_cnes_result('sus_sinasc', 6, 2),\n#   query_cnes_result('sus_sinasc', 2, 1, cnes_pref=True),\n#   query_cnes_result('sus_sinasc', 2, 1, cnes_pref=False),\n# ])\npath_cnes_sinasc = 'data/consult/compare/cnes_sinasc.csv'\n# df_cnes_sinasc.to_csv(path_cnes_sinasc, index=False)\ndf_cnes_sinasc = pd.read_csv(\n    path_cnes_sinasc,\n    dtype={'CNES':str})\ndf_cnes_sinasc\n\n\n    and CODESTAB like '2%'\n\n\n\n\n\n\n  \n    \n      \n      CNES\n      records\n    \n  \n  \n    \n      0\n      2079542\n      145885\n    \n    \n      1\n      3037274\n      115195\n    \n    \n      2\n      0002232\n      104344\n    \n    \n      3\n      0026794\n      103932\n    \n    \n      4\n      2323397\n      101349\n    \n    \n      ...\n      ...\n      ...\n    \n    \n      8204\n      2810042\n      1\n    \n    \n      8205\n      2813483\n      1\n    \n    \n      8206\n      2818450\n      1\n    \n    \n      8207\n      2823330\n      1\n    \n    \n      8208\n      2824469\n      1\n    \n  \n\n8209 rows × 2 columns\n\n\n\n\nset_cnes_sus = set(df_cnes['CNES'])\n\nset_cnes_sih = set(df_cnes_sih['CNES'])\ncnes_sus_sih = set_cnes_sus.intersection(set_cnes_sih)\n\nset_cnes_sinasc = set(df_cnes_sinasc['CNES'])\ncnes_sus_sinasc = set_cnes_sus.intersection(set_cnes_sinasc)\n\nsus_sih = 15767633 # df_cnes_sih[df_cnes_sih['CNES'].isin(cnes_sus_sih)]['records'].sum()\nsus_sinasc = 21196305 # df_cnes_sinasc[df_cnes_sinasc['CNES'].isin(cnes_sus_sih)]['records'].sum()\n\n\ndf_filter = pd.DataFrame([\n    ['SIH', sus_sih],\n    ['SINASC', sus_sinasc]\n], columns=['database', 'records'])\nfig = px.bar(df_filter, x='database', y='records')\nfig.show()\n\nUnable to display output for mime type(s): application/vnd.plotly.v1+json\n\n\n\n\n\n\ndf_filter = pd.DataFrame([\n    ['SIH', 'all', all_sih],\n    ['SINASC', 'all', all_sinasc],\n    ['SIH', 'filter', flt_sih],\n    ['SINASC', 'filter', flt_sinasc],\n    ['SIH', 'sus', sus_sih],\n    ['SINASC', 'sus', sus_sinasc],\n], columns=['database', 'selection', 'records'])\nfig = px.bar(df_filter, x='database', y='records', color='selection', barmode='overlay')\nfig.show()\n\nUnable to display output for mime type(s): application/vnd.plotly.v1+json\n\n\n\n\n\n\n\n\ndf_cnes_sih[df_cnes_sih['CNES'].isin(set_cnes_sus)]\n\n\n\n\n\n  \n    \n      \n      CNES\n      records\n    \n  \n  \n    \n      1\n      3151794\n      75209\n    \n    \n      2\n      2323397\n      74417\n    \n    \n      3\n      2311682\n      64833\n    \n    \n      5\n      2020068\n      59610\n    \n    \n      6\n      6627595\n      58139\n    \n    \n      ...\n      ...\n      ...\n    \n    \n      4144\n      7320175\n      1\n    \n    \n      4145\n      7603029\n      1\n    \n    \n      4146\n      7621442\n      1\n    \n    \n      4147\n      7704364\n      1\n    \n    \n      4148\n      7743068\n      1\n    \n  \n\n4071 rows × 2 columns\n\n\n\n\n\n\n\ndf_cnes_sinasc[df_cnes_sinasc['CNES'].isin(set_cnes_sus)]\n\n\n\n\n\n  \n    \n      \n      CNES\n      records\n    \n  \n  \n    \n      4\n      2323397\n      101349\n    \n    \n      5\n      2022621\n      99602\n    \n    \n      6\n      2311682\n      87673\n    \n    \n      7\n      2566168\n      87672\n    \n    \n      8\n      3151794\n      85933\n    \n    \n      ...\n      ...\n      ...\n    \n    \n      8201\n      2806878\n      1\n    \n    \n      8202\n      2806924\n      1\n    \n    \n      8205\n      2813483\n      1\n    \n    \n      8206\n      2818450\n      1\n    \n    \n      8207\n      2823330\n      1\n    \n  \n\n6829 rows × 2 columns\n\n\n\n\n\n\n\n\ndef read_cnes_query(path_query, prefix=1, init_two=False):\n  with open(path_query) as f:\n    query = f.read()\n    rep_prefix = f'{prefix}%'\n    rep_prefix = '2'+rep_prefix if init_two else rep_prefix\n    query = query.replace('1%', rep_prefix)\n    df = data_load.df_query(query)\n  return df\n\n\ndef list_cnes(path_query):\n  dfs = list()\n  for i in tqdm(range(10)):\n    if i == 2:\n      for j in tqdm(range(10)):\n        df_cnes_sus = read_cnes_query(path_query, j, i==2)\n        dfs.append(df_cnes_sus)\n    else:\n      df_cnes_sus = read_cnes_query(path_query, i)\n      dfs.append(df_cnes_sus)\n  df_cnes_sus = pd.concat(dfs)\n  return df_cnes_sus\n\n\npath_query = 'queries/compare/cnes_sih.sql'\ndf_cnes_sih = list_cnes(path_query)\ndf_cnes_sih.to_csv('cnes_sih.csv.zip', index=False)\ndf_cnes_sih = pd.read_csv('cnes_sih.csv.zip', dtype={'CNES':str})\ndf_cnes_sih\n\n100%|██████████| 10/10 [00:14<00:00,  1.42s/it]\n100%|██████████| 10/10 [00:21<00:00,  2.10s/it]\n\n\n\n\n\n\n  \n    \n      \n      CNES\n    \n  \n  \n    \n      0\n      0000027\n    \n    \n      1\n      0000035\n    \n    \n      2\n      0000094\n    \n    \n      3\n      0000396\n    \n    \n      4\n      0000418\n    \n    \n      ...\n      ...\n    \n    \n      4472\n      9677011\n    \n    \n      4473\n      9680500\n    \n    \n      4474\n      9813349\n    \n    \n      4475\n      9917322\n    \n    \n      4476\n      9923837\n    \n  \n\n4477 rows × 1 columns\n\n\n\n\ndf_sinasc_cnes = df_cnes_sinasc[df_cnes_sinasc['CNES'].isin(set(df_cnes_sih['CNES']))]\ndf_sinasc_cnes\n\n\n\n\n\n  \n    \n      \n      CNES\n      records\n    \n  \n  \n    \n      2\n      0002232\n      104344\n    \n    \n      3\n      0026794\n      103932\n    \n    \n      4\n      2323397\n      101349\n    \n    \n      5\n      2022621\n      99602\n    \n    \n      6\n      2311682\n      87673\n    \n    \n      ...\n      ...\n      ...\n    \n    \n      8162\n      2761157\n      1\n    \n    \n      8170\n      2772213\n      1\n    \n    \n      8179\n      2777819\n      1\n    \n    \n      8187\n      2789345\n      1\n    \n    \n      8193\n      2796597\n      1\n    \n  \n\n4299 rows × 2 columns\n\n\n\n\nsih_sinasc = df_sinasc_cnes['records'].sum() # 22928708\nsih_sinasc\n\n22899941\n\n\n\ndf_filter = pd.DataFrame([\n    ['SIH', 'all', all_sih],\n    ['SINASC', 'all', all_sinasc],\n    ['SIH', 'filter', flt_sih],\n    ['SINASC', 'filter', flt_sinasc],\n    ['SIH', 'sus', sus_sih],\n    ['SINASC', 'sus', sih_sinasc],\n], columns=['database', 'selection', 'records'])\nfig = px.bar(df_filter, x='database', y='records', color='selection', barmode='overlay')\nfig.show()\n\nUnable to display output for mime type(s): application/vnd.plotly.v1+json"
  },
  {
    "objectID": "notebooks/dashboard.html",
    "href": "notebooks/dashboard.html",
    "title": "Deslocamento de Gestantes",
    "section": "",
    "text": "path_zip = config.PATH_DATABASE_ZIP\nfiles = data_load.get_namelist_in_zip(path_zip)\n\n\npath_query = 'queries/check/partos.sql'\nwith open(path_query) as f:\n    query = f.read()\ndf_partos = data_load.df_query(query)\ndf_partos\n\n\n\n\n\n  \n    \n      \n      def_procedimento_realizado\n      records\n    \n  \n  \n    \n      0\n      PARTO NORMAL\n      10410614\n    \n    \n      1\n      PARTO CESARIANO\n      6405986\n    \n    \n      2\n      PARTO CESARIANO EM GESTACAO DE ALTO RISCO\n      1219953\n    \n    \n      3\n      PARTO NORMAL EM GESTACAO DE ALTO RISCO\n      791773\n    \n    \n      4\n      PARTO CESARIANO C/ LAQUEADURA TUBARIA\n      284565\n    \n    \n      5\n      PARTO NORMAL EM CENTRO DE PARTO NORMAL (CPN)\n      73667\n    \n  \n\n\n\n\n\nolhando = df_partos['records'][:2].sum()\ndescarte = df_partos['records'][2:].sum()\n100 - (olhando / (olhando + descarte))\n\n99.12352117169333\n\n\n\nprint(olhando)\nprint(descarte)\n\n16816760\n2369967\n\n\n\npath_query = 'queries/check/sinasc.sql'\nwith open(path_query) as f:\n    query = f.read()\ndf_nasc = data_load.df_query(query)\ndf_nasc\n\n\n\n\n\n  \n    \n      \n      CODOCUPMAE\n      records\n    \n  \n  \n    \n      0\n      999992\n      17399629\n    \n    \n      1\n      00800\n      9093489\n    \n    \n      2\n      999991\n      1943456\n    \n    \n      3\n      621005\n      1584098\n    \n    \n      4\n      622020\n      1244137\n    \n    \n      ...\n      ...\n      ...\n    \n    \n      995\n      765005\n      293\n    \n    \n      996\n      17000\n      291\n    \n    \n      997\n      87300\n      291\n    \n    \n      998\n      223102\n      290\n    \n    \n      999\n      010205\n      288\n    \n  \n\n1000 rows × 2 columns\n\n\n\n\nracacor = {0: 'None', 1: 'Branca', 2: 'Preta', 3: 'Amarela', 4: 'Parda', 5: 'Indígena'}\n\n\ndf_nasc['RACACORMAE'] = df_nasc['RACACORMAE'].fillna(0).astype(int)\ndf_nasc['RACACORMAE'] = df_nasc['RACACORMAE'].map(racacor)\ndf_nasc\n\n\n\n\n\n  \n    \n      \n      RACACORMAE\n      records\n    \n  \n  \n    \n      0\n      Parda\n      15126864\n    \n    \n      1\n      Branca\n      9587813\n    \n    \n      2\n      Preta\n      1538078\n    \n    \n      3\n      Indígena\n      228426\n    \n    \n      4\n      Amarela\n      110413\n    \n    \n      5\n      NaN\n      19313\n    \n    \n      6\n      None\n      0\n    \n  \n\n\n\n\n\ndf['CODMUNRES'].apply(lambda x: len(str(x))).value_counts()\n\n6    587\n7    413\nName: CODMUNRES, dtype: int64\n\n\n\ndf_nasc['CODMUNNASC'].apply(lambda x: len(str(x))).value_counts()\n\n6    577\n7    423\nName: CODMUNNASC, dtype: int64\n\n\n\n74398079-74398079\n\n0\n\n\n\ncnx = sqlite3.connect(config.PATH_DB)\n\n\npath_filters = 'queries/info/check.sql'\nwith open(path_filters) as f:\n    query_filters = f.read()\ndf = data_load.df_query(query_filters)\ndf\n\n\npath_year_percent = 'queries/info/grouped.sql'\nwith open(path_year_percent) as f:\n    query = f.read()\ndf = pd.read_sql_query(query, cnx)\ndf\n\n\n\n\n\n  \n    \n      \n      ano\n      parto\n      regiao\n      uf\n      grupo\n      mov_municipio\n      mov_regiao_saude\n      records\n    \n  \n  \n    \n      0\n      2010\n      NORMAL\n      Sudeste\n      SP\n      2\n      0\n      0\n      81325\n    \n    \n      1\n      2010\n      CESARIANO\n      Sudeste\n      SP\n      2\n      0\n      0\n      35302\n    \n    \n      2\n      2010\n      NORMAL\n      Sudeste\n      SP\n      1\n      0\n      0\n      34039\n    \n    \n      3\n      2010\n      NORMAL\n      Nordeste\n      MA\n      1\n      0\n      0\n      32523\n    \n    \n      4\n      2010\n      NORMAL\n      Sudeste\n      RJ\n      3\n      0\n      0\n      31756\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      7458\n      2019\n      NORMAL\n      Norte\n      AC\n      5\n      1\n      1\n      2\n    \n    \n      7459\n      2019\n      NORMAL\n      Norte\n      RO\n      4\n      1\n      1\n      2\n    \n    \n      7460\n      2019\n      NORMAL\n      Norte\n      RR\n      2\n      1\n      1\n      2\n    \n    \n      7461\n      2019\n      CESARIANO\n      Norte\n      RO\n      4\n      1\n      1\n      1\n    \n    \n      7462\n      2019\n      NORMAL\n      Norte\n      RR\n      4\n      1\n      1\n      1\n    \n  \n\n7463 rows × 8 columns\n\n\n\n\ndef group_all_but(df, but='records'):\n    return df.groupby(\n        by=[col for col in df.columns if col != but],\n        as_index=False\n    ).sum().sort_values(\n        by=['ano', 'records'],\n        ascending=[True, False],\n    )\n\n\ndef get_mov_between(df, mov_between):\n    cols = [col\n        for col in df.columns if col[:3] != 'mov']\n    dff = df[cols].copy()\n    dff['mov_between'] = mov_between\n    dff = group_all_but(dff)\n    return dff\n\n\ndef group_mov_between(df):\n    return pd.concat([\n        get_mov_between(df, 'all'),\n        get_mov_between(df[df['mov_municipio'] == 1], 'municipal'),\n        get_mov_between(df[df['mov_regiao_saude'] == 1], 'regional')\n    ]).reset_index(drop=True)\n\n\ndef separate_movs_in_dict(df):\n    d = dict()\n    movs = df['mov_between'].unique()\n    cols = [col for col in df.columns if col[:3] != 'mov']\n    for mov in movs:\n        dff = df[\n            df['mov_between'] == mov\n        ][cols].set_index(['ano', 'parto'])\n        d[mov] = dff\n    return d\n\n\ndef join_dfs(d, left, right):\n    df = d[left].join(\n        d[right],\n        lsuffix='_num',\n        rsuffix='_den',\n    )\n    df['mov_between'] = left\n    df['percent'] = 100. * df['records_num'] / df['records_den']\n    df = df.reset_index()\n    return df\n\n\ndef get_frac(df):\n    d = separate_movs_in_dict(df)\n    return pd.concat([\n        join_dfs(d, 'municipal', 'all'),\n        join_dfs(d, 'regional', 'municipal')\n    ])\n\n\ndef group_col(df, column=None, value=None):\n    del_cols = ['regiao', 'uf', 'grupo']\n    if column:\n        del_cols = [col\n            for col in del_cols\n                if col != column]\n    cols_filter = [col for col in df.columns\n            if col not in del_cols]\n    dff = df[cols_filter].copy()\n    if value:\n        dff = dff[dff[column] == value]\n    dff = group_all_but(dff)\n    return get_frac(dff)\n\n\ndf_s = group_mov_between(df)\ndf_s\n\n\n\n\n\n  \n    \n      \n      ano\n      parto\n      regiao\n      uf\n      grupo\n      mov_between\n      records\n    \n  \n  \n    \n      0\n      2010\n      NORMAL\n      Sudeste\n      SP\n      2\n      all\n      86899\n    \n    \n      1\n      2010\n      NORMAL\n      Sudeste\n      SP\n      1\n      all\n      42266\n    \n    \n      2\n      2010\n      NORMAL\n      Nordeste\n      BA\n      1\n      all\n      40926\n    \n    \n      3\n      2010\n      CESARIANO\n      Sudeste\n      SP\n      2\n      all\n      38797\n    \n    \n      4\n      2010\n      NORMAL\n      Nordeste\n      MA\n      1\n      all\n      36604\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      7610\n      2019\n      NORMAL\n      Norte\n      AC\n      5\n      regional\n      2\n    \n    \n      7611\n      2019\n      NORMAL\n      Norte\n      RO\n      4\n      regional\n      2\n    \n    \n      7612\n      2019\n      NORMAL\n      Norte\n      RR\n      2\n      regional\n      2\n    \n    \n      7613\n      2019\n      CESARIANO\n      Norte\n      RO\n      4\n      regional\n      1\n    \n    \n      7614\n      2019\n      NORMAL\n      Norte\n      RR\n      4\n      regional\n      1\n    \n  \n\n7615 rows × 7 columns\n\n\n\n\ndef plot(df):\n    return px.scatter(df,\n        x='ano',\n        y='percent',\n        color='parto',\n        symbol='mov_between',\n        trendline=\"ols\",\n    )\n\n\ndf = group_col(df_s,\n    column = 'grupo',\n    value  = 5,\n)\nfig = plot(df)\nfig.show()\n\nUnable to display output for mime type(s): application/vnd.plotly.v1+json\n\n\n\nresults = px.get_trendline_results(fig)\nresults['px_fit_results'][0].params\n\narray([-1.00026217e+03,  5.09885052e-01])\n\n\n\ndt = pd.DataFrame([r.params for r in results['px_fit_results']])\ndt\n\n\n\n\n\n  \n    \n      \n      0\n      1\n    \n  \n  \n    \n      0\n      -1000.262167\n      0.509885\n    \n    \n      1\n      -556.269282\n      0.287995\n    \n    \n      2\n      -569.622453\n      0.297477\n    \n    \n      3\n      -197.884087\n      0.109798\n    \n  \n\n\n\n\n\npx.scatter(dt,x=1,y=0)\n\nUnable to display output for mime type(s): application/vnd.plotly.v1+json\n\n\n\nfor r in results:\n    print(r)\n\nparto\nmov_between\npx_fit_results\n\n\n\ndf\nfig = plot(df)\nfig.show()\n\nUnable to display output for mime type(s): application/vnd.plotly.v1+json\n\n\n\ndf = group_col(df_s,\n    column = 'regiao',\n    value  = 'Norte',\n)\n\n\ndf\nfig = plot(df)\nfig.show()\n\nUnable to display output for mime type(s): application/vnd.plotly.v1+json\n\n\n\ndf = group_col(df_s,\n    column = 'regiao',\n    value  = None,\n)\ndf\n\n\n\n\n\n  \n    \n      \n      ano\n      parto\n      regiao_num\n      records_num\n      regiao_den\n      records_den\n      mov_between\n      percent\n    \n  \n  \n    \n      0\n      2010\n      CESARIANO\n      Nordeste\n      80764\n      Sudeste\n      209153\n      municipal\n      38.614794\n    \n    \n      1\n      2010\n      CESARIANO\n      Nordeste\n      80764\n      Nordeste\n      202687\n      municipal\n      39.846660\n    \n    \n      2\n      2010\n      CESARIANO\n      Nordeste\n      80764\n      Sul\n      79104\n      municipal\n      102.098503\n    \n    \n      3\n      2010\n      CESARIANO\n      Nordeste\n      80764\n      Norte\n      69379\n      municipal\n      116.409865\n    \n    \n      4\n      2010\n      CESARIANO\n      Nordeste\n      80764\n      Centro-Oeste\n      52453\n      municipal\n      153.974034\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      495\n      2019\n      NORMAL\n      Sul\n      3859\n      Nordeste\n      106610\n      regional\n      3.619735\n    \n    \n      496\n      2019\n      NORMAL\n      Sul\n      3859\n      Sudeste\n      71948\n      regional\n      5.363596\n    \n    \n      497\n      2019\n      NORMAL\n      Sul\n      3859\n      Centro-Oeste\n      50447\n      regional\n      7.649612\n    \n    \n      498\n      2019\n      NORMAL\n      Sul\n      3859\n      Sul\n      34509\n      regional\n      11.182590\n    \n    \n      499\n      2019\n      NORMAL\n      Sul\n      3859\n      Norte\n      19181\n      regional\n      20.118868\n    \n  \n\n1000 rows × 8 columns"
  },
  {
    "objectID": "notebooks/sinasc.html",
    "href": "notebooks/sinasc.html",
    "title": "Deslocamento de Gestantes",
    "section": "",
    "text": "cache_length = 25\ncon = data_load.create_connection()\npath_zip = config.PATH_DATABASE_ZIP\nfiles = data_load.get_namelist_in_zip(path_zip)\nsinasc_cols = pd.read_csv('data/check/sinasc_cols_count.csv')['variavel'].values\n\n\ndef adjust_df(df, sinasc_cols):\n    df = df.to_pandas()\n    for col in sinasc_cols:\n        if col not in df.columns:\n            df[col] = np.nan\n    df = df.drop(['CONTADOR'], axis=1)\n    return df\n\n\nwith (con):\n    dfs = list()\n    for f in tqdm(files):\n        df = dt.fread(f'{path_zip}/{f}')\n        df = adjust_df(df, sinasc_cols)\n        dfs.append(df)\n        if len(dfs) > cache_length:\n            data_load.append_table_to_con(\n                pd.concat(dfs),con)\n            dfs = list()\n    data_load.append_table_to_con(\n            pd.concat(dfs),con)\n\n 15%|█▌        | 103/675 [02:43<09:50,  1.03s/it] \n\n\n15% = 1.82GB\n\ncnx = sqlite3.connect(config.PATH_DB)\n\n\n# df = pd.read_sql_query('select * from sinasc order by data_nasc, DTNASCMAE limit 5', cnx)\n# df[sorted(df.columns)]\n\n\nsinasc_cols = pd.read_csv('data/check/sinasc_cols_count.csv')\nsinasc_cols = sinasc_cols[sinasc_cols['percent'] >= 80]['variavel'].values\npath_query = 'queries/check/sinasc.sql'\nwith open(path_query) as f:\n    query_base = f.read()\n\n\nlen(sinasc_cols)\n\n\ncounts = list()\nfor var in tqdm(sinasc_cols):\n    query = query_base.replace('*', var)\n    records = data_load.df_query(query)['records'].values[0]\n    counts.append({\n        'variavel' : var,\n        'recods' : records})\ndf_counts = pd.DataFrame(counts).sort_values(by='recods', ascending=False)\ndf = df_counts.sort_values(\n    by=['recods', 'variavel'], ascending=[False, True]\n)\ndf['percent'] = df['recods'] / 28672255 * 100\n\ndf.to_csv('data/check/sinasc_cols_count.csv', index=False)\n\n\npath_zip = config.PATH_DATABASE_ZIP\nfiles = data_load.get_namelist_in_zip(path_zip)\npd.Series(files)\n\n\ndf = dt.fread(f'{path_zip}/{files[2]}')\ndf\n\n\nd = list()\nfor f in tqdm(files):\n    df = dt.fread(f'{path_zip}/{f}')\n    rows, columns = df.shape\n    d.append({'rows':rows, 'columns':columns})\ndf_shapes = pd.DataFrame(d)\ndf_shapes\n\n\ndf_shapes.rows.sum()\n\n\nwith (con := data_load.create_connection()):\n    for f in tqdm(files[:10]):\n        df = dt.fread(f'{path_zip}/{f}')\n        df = df.to_pandas()\n        df = df[sinasc_cols]\n        # df.to_csv(f'{config.PATH_DATABASE}/csvs/{f}', index=False)\n\n\nwith (con := data_load.create_connection()):\n    dfs = list()\n    for f in tqdm(files):\n        df = dt.fread(f'{path_zip}/{f}')\n        df = df.to_pandas()\n        for col in sinasc_cols:\n            if col not in df.columns:\n                df[col] = np.nan\n        df = df.drop(['CONTADOR'], axis=1)\n        dfs.append(df)\n        if len(dfs) > 50:\n            df.to_sql(\n                name = 'sinasc',\n                con = con,\n                if_exists = 'append', # append | replace\n                index = False,\n            )\n            dfs = list()\n    try:\n        df.to_sql(\n            name = 'sinasc',\n            con = con,\n            if_exists = 'append', # append | replace\n            index = False,\n        )\n    except Exception as exc:\n        print(exc)\n        print(df.columns)"
  },
  {
    "objectID": "sections/municipios.html",
    "href": "sections/municipios.html",
    "title": "Municípios",
    "section": "",
    "text": "Descrição\nDados do Sistema de Informações Hospitalares do SUS (SIHSUS) reunidos pela Plataforma de Ciência de Dados aplicada à Saúde (PCDaS). Os dados foram obtidos junto ao DATASUS (Ministério da Saúde), tratados e enriquecidos seguindo uma metodologia própria de ETL (processo de extração, transformação e carga dos dados) da PCDaS, resultando em um dataset mensal com todos os registros de internações hospitalares contidos no SIHSUS à partir de janeiro de 2008.\nA atualização dos dados é realizada pelo DATASUS e a PCDaS extrai os registros mensais referentes aos arquivos RD_UF_ANO_MÊS.dbc (Reduzidos de AIH) assim que disponibilizados. As colunas com nomes em MAIÚSCULO representam dados originais advindos do DATASUS e colunas com nomes iniciando em minúsculo representam dados resultantes de transformação ou enriquecimento.\n\n\nTabelas base\n\noutput_mun = f'{Path.home()}/Databases/GESTANTES/municipios.csv.gzip'\ndf_mun = dt.fread(output_mun)\n\n\n\n  \n  \n    anoparto_normalcnesidadehosp_cod_municipiohosp_regiao_saudecod_municipioregiaoufcod_uf…microregiao_saudelatitudelongitudealtitudearea\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    020103100100392001020231200051202120005NorteAC12…12900−10.941−69.5672392875.91\n    120103100100392000733281200401201120040NorteAC12…12900−9.975−67.811539222.58\n    220103100100392000733381200401201120040NorteAC12…12900−9.975−67.811539222.58\n    320103100100392000733161200401201120040NorteAC12…12900−9.975−67.811539222.58\n    420103100100392000733261200401201120040NorteAC12…12900−9.975−67.811539222.58\n    520103100100392000733261200401201120040NorteAC12…12900−9.975−67.811539222.58\n    620103100100392000733271200401201120040NorteAC12…12900−9.975−67.811539222.58\n    720103100100392001020311200051202120005NorteAC12…12900−10.941−69.5672392875.91\n    820103100100392000733301200401201120040NorteAC12…12900−9.975−67.811539222.58\n    920103100100392000733181200401201120040NorteAC12…12900−9.975−67.811539222.58\n    1020103100100392001020281200051202120005NorteAC12…12900−10.941−69.5672392875.91\n    1120103100100392000733321200401201120038NorteAC12…12900−10.276−67.151362047.45\n    1220103100100392000733301200401201120040NorteAC12…12900−9.975−67.811539222.58\n    1320103100100392000733261200401201120001NorteAC12…12900−9.828−66.883251574.55\n    1420103100100392000733261200401201120040NorteAC12…12900−9.975−67.811539222.58\n    ⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋱⋮⋮⋮⋮⋮\n    16,816,98620194110100342765640241709301704171840NorteTO17…17900−8.539−48.506247770.418\n    16,816,98720194110100342765640271709301704171670NorteTO17…17900−8.729−48.765362990.712\n    16,816,98820194110100342765640221709301704171670NorteTO17…17900−8.729−48.765362990.712\n    16,816,98920194110100342765640251709301704170930NorteTO17…17900−8.834−48.512592268.15\n    16,816,99020194110100342755149211716101708171250NorteTO17…17900−9.796−49.6541462091.36\n  \n  \n  \n    16,816,991 rows × 24 columns\n  \n\n\n\n\nColunas da tabela\n\ncols_mun = df_sih.names[6:]\ncols_mun\n\n('cod_municipio',\n 'regiao',\n 'uf',\n 'cod_uf',\n 'nome_uf',\n 'municipio',\n 'nome_municipio',\n 'capital',\n 'fronteira',\n 'amazonia',\n 'macroregiao_saude',\n 'regiao_saude',\n 'nome_regiao_saude',\n 'microregiao_saude',\n 'latitude',\n 'longitude',\n 'altitude',\n 'area')\n\n\n\n\nTabela resutante\n\ndf_mun = group_cols(df_sih, cols_mun)\ndf_mun = df_mun.sort(-f.count)\ndf_mun\n\n\n\n  \n  \n    cod_municipioregiaoufcod_ufnome_ufmunicipionome_municipiocapitalfronteiraamazonia…latitudelongitudealtitudeareacount\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    0355030SudesteSP35SAO PAULOSão PauloSAO PAULOSNN…−23.548−46.6367601522.99806352\n    1330455SudesteRJ33RIO DE JANEIRORio de JaneiroRIO DE JANEIROSNN…−22.903−43.20821182.3368216\n    2130260NorteAM13AMAZONASManausMANAUSSNS…−3.102−60.0259211401.1297036\n    3230440NordesteCE23CEARAFortalezaFORTALEZASNN…−3.717−38.54321313.14203370\n    4292740NordesteBA29BAHIASalvadorSALVADORSNN…−12.971−38.5118706.799169924\n    5150140NortePA15PARABelémBELEMSNS…−1.456−48.504101064.92126918\n    6310620SudesteMG31MINAS GERAISBelo HorizonteBELO HORIZONTESNN…−19.817−43.956858330.954125370\n    7431490SulRS43RIO GRANDE DO SULPorto AlegrePORTO ALEGRESNN…−30.033−51.233496.827105321\n    8410690SulPR41PARANACuritibaCURITIBASNN…−25.428−49.273934434.967101337\n    9270430NordesteAL27ALAGOASMaceióMACEIOSNN…−9.666−35.73516510.65593551\n    10520870Centro-OesteGO52GOIASGoiâniaGOIANIASNN…−16.679−49.254749739.49292068\n    11351880SudesteSP35SAO PAULOGuarulhosGUARULHOSNNN…−23.463−46.533759318.01491617\n    12221100NordestePI22PIAUITeresinaTERESINASNN…−5.089−42.802721755.786245\n    13500270Centro-OesteMS50MATO GROSSO DO SULCampo GrandeCAMPO GRANDESNN…−20.443−54.6465328096.0584481\n    14261160NordestePE26PERNAMBUCORecifeRECIFESNN…−8.054−34.8814217.49483833\n    ⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋱⋮⋮⋮⋮⋮\n    5564520020Centro-OesteGO52GOIASÁgua LimpaAGUA LIMPANNN…−18.074−48.762682452.85625\n    5565510120Centro-OesteMT51MATO GROSSOAraguainhaARAGUAINHANNS…−16.856−53.033462688.67623\n    5566350640SudesteSP35SAO PAULOBilacBILACNNN…−21.403−50.471431157.27818\n    5567500627Centro-OesteMS50MATO GROSSO DO SULParaíso das ÁguasPARAISO DAS AGUASNNN…−19.0216−53.011605032.4715\n    5568330513SudesteRJ33RIO DE JANEIROSão José de UbáSAO JOSE DE UBANNN…−21.358−41.94395250.5966\n  \n  \n  \n    5569 rows × 19 columns\n  \n\n\n\n\n\nExportando tabela\n\noutput_mun = f'{Path.home()}/Databases/GESTANTES/municipios.csv.gzip'\ndf_mun.to_csv(output_mun)\n\n\ndt.fread(output_mun)\n\n\n\n  \n  \n    cod_municipioregiaoufcod_ufnome_ufmunicipionome_municipiocapitalfronteiraamazonia…latitudelongitudealtitudeareacount\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    0355030SudesteSP35SAO PAULOSão PauloSAO PAULOSNN…−23.548−46.6367601522.99806352\n    1330455SudesteRJ33RIO DE JANEIRORio de JaneiroRIO DE JANEIROSNN…−22.903−43.20821182.3368216\n    2130260NorteAM13AMAZONASManausMANAUSSNS…−3.102−60.0259211401.1297036\n    3230440NordesteCE23CEARAFortalezaFORTALEZASNN…−3.717−38.54321313.14203370\n    4292740NordesteBA29BAHIASalvadorSALVADORSNN…−12.971−38.5118706.799169924\n    5150140NortePA15PARABelémBELEMSNS…−1.456−48.504101064.92126918\n    6310620SudesteMG31MINAS GERAISBelo HorizonteBELO HORIZONTESNN…−19.817−43.956858330.954125370\n    7431490SulRS43RIO GRANDE DO SULPorto AlegrePORTO ALEGRESNN…−30.033−51.233496.827105321\n    8410690SulPR41PARANACuritibaCURITIBASNN…−25.428−49.273934434.967101337\n    9270430NordesteAL27ALAGOASMaceióMACEIOSNN…−9.666−35.73516510.65593551\n    10520870Centro-OesteGO52GOIASGoiâniaGOIANIASNN…−16.679−49.254749739.49292068\n    11351880SudesteSP35SAO PAULOGuarulhosGUARULHOSNNN…−23.463−46.533759318.01491617\n    12221100NordestePI22PIAUITeresinaTERESINASNN…−5.089−42.802721755.786245\n    13500270Centro-OesteMS50MATO GROSSO DO SULCampo GrandeCAMPO GRANDESNN…−20.443−54.6465328096.0584481\n    14261160NordestePE26PERNAMBUCORecifeRECIFESNN…−8.054−34.8814217.49483833\n    ⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋱⋮⋮⋮⋮⋮\n    5564520020Centro-OesteGO52GOIASÁgua LimpaAGUA LIMPANNN…−18.074−48.762682452.85625\n    5565510120Centro-OesteMT51MATO GROSSOAraguainhaARAGUAINHANNS…−16.856−53.033462688.67623\n    5566350640SudesteSP35SAO PAULOBilacBILACNNN…−21.403−50.471431157.27818\n    5567500627Centro-OesteMS50MATO GROSSO DO SULParaíso das ÁguasPARAISO DAS AGUASNNN…−19.0216−53.011605032.4715\n    5568330513SudesteRJ33RIO DE JANEIROSão José de UbáSAO JOSE DE UBANNN…−21.358−41.94395250.5966\n  \n  \n  \n    5569 rows × 19 columns"
  },
  {
    "objectID": "sections/socioecon.html",
    "href": "sections/socioecon.html",
    "title": "Socioeconômico",
    "section": "",
    "text": "Descrição\nEntre os desafios mais urgentes do Sistema Único de Saúde (SUS) estão a ampliação do acesso e a adequação dos serviços ofertados. No Brasil, as relações existentes entre regiões e redes de atenção à saúde indicam que o avanço do processo de regionalização do SUS pode interferir positivamente na oferta de ações de serviços de saúde, tornando-a mais eficiente e abrangente.\nSaiba mais\nDownload\n\n\nTabela\n\npath_socioeco = get_path('HEALTH', 'health_regions.csv')\ndf_socioeco = dt.fread(path_socioeco)\ndf_socioeco\n\n\n\n  \n  \n    UFMunicípioCód IBGECód Região de SaúdeNome da Região de SaúdeGrupo\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    0ACAcrelândia12000112002Baixo Acre e Purus2\n    1ACAssis Brasil12000512001Alto Acre1\n    2ACBrasiléia12001012001Alto Acre1\n    3ACBujari12001312002Baixo Acre e Purus2\n    4ACCapixaba12001712002Baixo Acre e Purus2\n    5ACCruzeiro do Sul12002012003Juruá e Tarauacá/Envira1\n    6ACEpitaciolândia12002512001Alto Acre1\n    7ACFeijó12003012003Juruá e Tarauacá/Envira1\n    8ACJordão12003212002Baixo Acre e Purus2\n    9ACMâncio Lima12003312003Juruá e Tarauacá/Envira1\n    10ACManoel Urbano12003412002Baixo Acre e Purus2\n    11ACMarechal Thaumaturgo12003512003Juruá e Tarauacá/Envira1\n    12ACPlácido de Castro12003812002Baixo Acre e Purus2\n    13ACPorto Acre12008012002Baixo Acre e Purus2\n    14ACPorto Walter12003912003Juruá e Tarauacá/Envira1\n    ⋮⋮⋮⋮⋮⋮⋮\n    5566TOTocantinópolis17212017002Bico do Papagaio1\n    5567TOTupirama17212517004Cerrado Tocantins Araguaia2\n    5568TOTupiratins17213017004Cerrado Tocantins Araguaia2\n    5569TOWanderlândia17220817001Médio Norte Araguaia3\n    5570TOXambioá17221017001Médio Norte Araguaia3\n  \n  \n  \n    5571 rows × 6 columns"
  },
  {
    "objectID": "sections/distancias.html",
    "href": "sections/distancias.html",
    "title": "Distâncias",
    "section": "",
    "text": "Descrição\nThis working paper describes the methodological procedure for calculating distances and travel time between the 5,570 Brazilian municipalities using the APIs from Google Maps (Application Programming Interface) and, mainly, OpenStreet Maps. This is an update of the results of Carvalho et at. (2016). The data generated by this work provide relevant information that can be used by other academic works with the most diverse applications, such as, for example, applications in regional economics, dynamic allocation models, operational research, spatial econometrics or general equilibrium models. Therefore, the main objective of this work is to build a database that can be used in several applied studies.\nhttps://ideas.repec.org/p/cdp/texdis/td630.html\n\n\nTabela\n\npath_dist = get_path('DISTANCIAS', 'matriz_distancias.zip')\ndf_dist = dt.fread(path_dist)\ndf_dist\n\n\n\n  \n  \n    origemdestinodistanciatempo\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    011000111000100\n    1110001110002309.056.16906\n    2110001110003399.56.28906\n    311000111000481.20111.91775\n    4110001110005391.7046.13636\n    5110001110006353.4175.53989\n    6110001110007313.5926.18117\n    7110001110008326.9835.34175\n    8110001110009145.6782.346\n    9110001110010649.54513.405\n    10110001110011214.1253.83481\n    11110001110012130.772.54781\n    12110001110013357.5117.13067\n    1311000111001460.21031.02275\n    14110001110015172.9263.18425\n    ⋮⋮⋮⋮⋮\n    31,024,895530010522200161.7292.356\n    31,024,896530010522205382.7095.47956\n    31,024,897530010522220161.6032.24894\n    31,024,898530010522230190.0013.21608\n    31,024,89953001053001000\n  \n  \n  \n    31,024,900 rows × 4 columns"
  },
  {
    "objectID": "sections/database_socioecon.html",
    "href": "sections/database_socioecon.html",
    "title": "Socioeconômico",
    "section": "",
    "text": "Descrição\nEntre os desafios mais urgentes do Sistema Único de Saúde (SUS) estão a ampliação do acesso e a adequação dos serviços ofertados. No Brasil, as relações existentes entre regiões e redes de atenção à saúde indicam que o avanço do processo de regionalização do SUS pode interferir positivamente na oferta de ações de serviços de saúde, tornando-a mais eficiente e abrangente.\nSaiba mais\nDownload\n\n\nTabela\n\npath_socioeco = get_path('HEALTH', 'health_regions.csv')\ndf_socioeco = dt.fread(path_socioeco)\ndf_socioeco\n\n\n\n  \n  \n    UFMunicípioCód IBGECód Região de SaúdeNome da Região de SaúdeGrupo\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    0ACAcrelândia12000112002Baixo Acre e Purus2\n    1ACAssis Brasil12000512001Alto Acre1\n    2ACBrasiléia12001012001Alto Acre1\n    3ACBujari12001312002Baixo Acre e Purus2\n    4ACCapixaba12001712002Baixo Acre e Purus2\n    5ACCruzeiro do Sul12002012003Juruá e Tarauacá/Envira1\n    6ACEpitaciolândia12002512001Alto Acre1\n    7ACFeijó12003012003Juruá e Tarauacá/Envira1\n    8ACJordão12003212002Baixo Acre e Purus2\n    9ACMâncio Lima12003312003Juruá e Tarauacá/Envira1\n    10ACManoel Urbano12003412002Baixo Acre e Purus2\n    11ACMarechal Thaumaturgo12003512003Juruá e Tarauacá/Envira1\n    12ACPlácido de Castro12003812002Baixo Acre e Purus2\n    13ACPorto Acre12008012002Baixo Acre e Purus2\n    14ACPorto Walter12003912003Juruá e Tarauacá/Envira1\n    ⋮⋮⋮⋮⋮⋮⋮\n    5566TOTocantinópolis17212017002Bico do Papagaio1\n    5567TOTupirama17212517004Cerrado Tocantins Araguaia2\n    5568TOTupiratins17213017004Cerrado Tocantins Araguaia2\n    5569TOWanderlândia17220817001Médio Norte Araguaia3\n    5570TOXambioá17221017001Médio Norte Araguaia3\n  \n  \n  \n    5571 rows × 6 columns"
  },
  {
    "objectID": "sections/table_procs.html",
    "href": "sections/table_procs.html",
    "title": "Procedimentos",
    "section": "",
    "text": "from utils import get_path, group_cols\nfrom datatable import dt, f"
  },
  {
    "objectID": "README.html",
    "href": "README.html",
    "title": "Introdução",
    "section": "",
    "text": "Contexto\nNo Brasil, 98% dos partos ocorrem em ambiente hospitalar, e 77% no Sistema Único de Saúde (SUS). O acesso oportuno aos serviços obstétricos de internação para o parto é fundamental para garantir a segurança do cuidado materno e neonatal. Entretanto, há “vazios assistenciais” na oferta de serviços hospitalares pelo SUS que fazem com que grande parte das parturientes precise se deslocar de um município a outro para ser assistida.\nO retardo na atenção obstétrica no momento do parto está associado à desfechos maternos adversos, e o deslocamento de grandes distâncias tem sido associado a níveis elevados de mortalidade infantil e neonatal, além de maior risco de morbimortalidade materna. Assim, a análise da distância percorrida pelas parturientes de sua residência até o hospital é um indicador útil e sensível para avaliar a dificuldade em acessar cuidados maternos e neonatais no SUS.\nA análise da acessibilidade geográfica é um componente importante da avaliação de serviços de saúde e reflete aspectos da distribuição espacial da oferta de serviços que dificultam ou promovem sua utilização. A metodologia de análise de redes sociais (ARS) tem sido utilizada nesse contexto, incluindo a internação para o parto, e também como ferramenta para gestão em saúde.\nEste projeto tem o objetivo de analisar a acessibilidade geográfica ao parto hospitalar realizado no SUS nos últimos 10 anos, em todo Brasil, aplicando a ARS como uma nova ferramenta para a gestão de serviços de saúde. Serão utilizados dados do Departamento de Informática do SUS (DATASUS) para a construção das redes de deslocamento das gestantes em busca de internação para o parto, levando-se em conta as distâncias percorridas, mapeando fluxos preferenciais e identificando lacunas geográficas de atendimento e polos de atração de maior demanda, como medida de inequidade no acesso aos serviços. O projeto avança no processo de avaliação do sistema de saúde ao desenvolver novos indicadores de acesso à serviços obstétricos, baseados em uma metodologia inovadora, e com abrangência nacional e aplicabilidade a outras áreas de saúde pública.\nEspera-se, com este estudo, gerar evidências que permitam um melhor entendimento da organização e das fragilidades do SUS na assistência à saúde da mulher no ciclo gravídico-puerperal, contribuindo para o planejamento da atenção obstétrica e para o fortalecimento de políticas públicas voltadas para melhoria do acesso aos serviços de saúde."
  },
  {
    "objectID": "sections/database_dists.html",
    "href": "sections/database_dists.html",
    "title": "Distâncias",
    "section": "",
    "text": "Descrição\nThis working paper describes the methodological procedure for calculating distances and travel time between the 5,570 Brazilian municipalities using the APIs from Google Maps (Application Programming Interface) and, mainly, OpenStreet Maps. This is an update of the results of Carvalho et at. (2016). The data generated by this work provide relevant information that can be used by other academic works with the most diverse applications, such as, for example, applications in regional economics, dynamic allocation models, operational research, spatial econometrics or general equilibrium models. Therefore, the main objective of this work is to build a database that can be used in several applied studies.\nhttps://ideas.repec.org/p/cdp/texdis/td630.html\n\n\nTabela\n\npath_dist = get_path('DISTANCIAS', 'matriz_distancias.zip')\ndf_dist = dt.fread(path_dist)\ndf_dist\n\n\n\n  \n  \n    origemdestinodistanciatempo\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    011000111000100\n    1110001110002309.056.16906\n    2110001110003399.56.28906\n    311000111000481.20111.91775\n    4110001110005391.7046.13636\n    5110001110006353.4175.53989\n    6110001110007313.5926.18117\n    7110001110008326.9835.34175\n    8110001110009145.6782.346\n    9110001110010649.54513.405\n    10110001110011214.1253.83481\n    11110001110012130.772.54781\n    12110001110013357.5117.13067\n    1311000111001460.21031.02275\n    14110001110015172.9263.18425\n    ⋮⋮⋮⋮⋮\n    31,024,895530010522200161.7292.356\n    31,024,896530010522205382.7095.47956\n    31,024,897530010522220161.6032.24894\n    31,024,898530010522230190.0013.21608\n    31,024,89953001053001000\n  \n  \n  \n    31,024,900 rows × 4 columns"
  },
  {
    "objectID": "sections/database_sih.html",
    "href": "sections/database_sih.html",
    "title": "SIH",
    "section": "",
    "text": "from utils import data_load\nfrom datatable import dt, f, by"
  },
  {
    "objectID": "sections/database_sih.html#filtro-de-colunas",
    "href": "sections/database_sih.html#filtro-de-colunas",
    "title": "SIH",
    "section": "Filtro de Colunas",
    "text": "Filtro de Colunas\n\ncols_sih = {\n  # Infomações do procedimento:\n  'ano_internacao': 'ano',\n  'PROC_REA': 'parto_normal',\n  'CNES': 'cnes',\n  # Infomações da gestante:\n  'def_idade_anos': 'idade',\n  # Infomações de localidade do hospital de interção:\n  'int_codigo_adotado': 'hosp_cod_municipio',\n  'int_RSAUDCOD': 'hosp_regiao_saude',\n  # Infomações de localidade da residência:\n  'res_codigo_adotado': 'cod_municipio', # Armazena o código atribuído ao município de residência atualmente, tratando os casos em que múltiplos códigos tenham sido utilizados para um mesmo município ao longo do tempo\n  'res_REGIAO': 'regiao', # Nome da região da unidade da federação de residência\n  'res_SIGLA_UF': 'uf', # Sigla da unidade da federação de residência\n  'res_CODIGO_UF': 'cod_uf', # Código da UF de residência\n  'res_NOME_UF': 'nome_uf', # Nome da unidade da federação de residência\n  'res_MUNNOME': 'municipio', # Nome do município de residência\n  'res_MUNNOMEX': 'nome_municipio', # Nome do município de residência em maiúsculas e sem acentos\n  'res_CAPITAL': 'capital', # Indica (S/N) se o município de residência é capital de UF\n  'res_FRONTEIRA': 'fronteira', # Indica (S/N) se o município de residência faz parte da faixa de fronteira (conforme IBGE)\n  'res_AMAZONIA': 'amazonia', # Indica (S/N) se o município de residência faz parte da Amazônia Legal (conforme IBGE)\n  'res_MSAUDCOD': 'macroregiao_saude', # Código da Macrorregional de Saúde a que o Município de residência pertence\n  'res_RSAUDCOD': 'regiao_saude', # Código da Regional de Saúde a que o Município de residência pertence\n  'def_regiao_res': 'nome_regiao_saude', # Nome da Regional de Saúde a que o Município de residência pertence\n  'res_CSAUDCOD': 'microregiao_saude', # Código da Microrregional de Saúde a que o Município de residência pertence\n  'res_LATITUDE': 'latitude', # Latitude do município de residência\n  'res_LONGITUDE': 'longitude', # Longitude do município de residência\n  'res_ALTITUDE': 'altitude', # Altitude do município de residência\n  'res_AREA': 'area', # Área do município de residência\n}"
  },
  {
    "objectID": "sections/database_sih.html#filtro-de-linhas",
    "href": "sections/database_sih.html#filtro-de-linhas",
    "title": "SIH",
    "section": "Filtro de Linhas",
    "text": "Filtro de Linhas\n\ndef filter_sih(df, cols):\n  cols = list(cols.values())[:-1]\n  cols = [c for c in cols if c in df.names]\n  df_filtered = df[\n    (\n      (f['ano'] > 2009) & (f['ano'] < 2020)\n    ) & (\n      (f['idade'] > 9) & (f['idade'] < 50)\n    ) & (\n      (f['parto_normal'] == 310010039) | (f['parto_normal'] == 411010034)\n    ) & (\n      (f['cnes'] != None)\n    ) & (\n      (f['uf'] != 'DF')\n    ) & (\n      (f['regiao_saude'] != None)\n    ) & (\n      (f['hosp_regiao_saude'] != None)\n    ) & (\n      (f['cod_municipio'] != None)\n    ), cols]\n  return df_filtered"
  },
  {
    "objectID": "sections/table_muns.html",
    "href": "sections/table_muns.html",
    "title": "Municípios",
    "section": "",
    "text": "from utils import get_path, group_cols\nfrom datatable import dt, f"
  },
  {
    "objectID": "sections/table_muns.html#sih",
    "href": "sections/table_muns.html#sih",
    "title": "Municípios",
    "section": "SIH",
    "text": "SIH\n\nColunas da tabela\n\ncols_mun = [\n  'cod_municipio',\n  'regiao',\n  'uf',\n  'cod_uf',\n  'nome_uf',\n  'municipio',\n  'nome_municipio',\n  'capital',\n  'fronteira',\n  'amazonia',\n  'macroregiao_saude',\n  'regiao_saude',\n  'nome_regiao_saude',\n  'microregiao_saude',\n  'latitude',\n  'longitude',\n  'altitude',\n  'area',\n]\n\n\npath_sih = '/Volumes/SanDisk/Databases/SIH/SIHSUS.jay'\ndf_mun = dt.fread(path_sih)\ndf_mun = df_mun[:, cols_mun]\ndf_mun\n\n\n\n  \n  \n    cod_municipioregiaoufcod_ufnome_ufmunicipionome_municipiocapitalfronteiraamazonia…microregiao_saudelatitudelongitudealtitudearea\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    0120005NorteAC12ACREAssis BrasilASSIS BRASILNSS…12900−10.941−69.5672392875.91\n    1120040NorteAC12ACRERio BrancoRIO BRANCOSSS…12900−9.975−67.811539222.58\n    2120040NorteAC12ACRERio BrancoRIO BRANCOSSS…12900−9.975−67.811539222.58\n    3120040NorteAC12ACRERio BrancoRIO BRANCOSSS…12900−9.975−67.811539222.58\n    4120040NorteAC12ACRERio BrancoRIO BRANCOSSS…12900−9.975−67.811539222.58\n    5120040NorteAC12ACRERio BrancoRIO BRANCOSSS…12900−9.975−67.811539222.58\n    6120040NorteAC12ACRERio BrancoRIO BRANCOSSS…12900−9.975−67.811539222.58\n    7120005NorteAC12ACREAssis BrasilASSIS BRASILNSS…12900−10.941−69.5672392875.91\n    8120040NorteAC12ACRERio BrancoRIO BRANCOSSS…12900−9.975−67.811539222.58\n    9120040NorteAC12ACRERio BrancoRIO BRANCOSSS…12900−9.975−67.811539222.58\n    10120005NorteAC12ACREAssis BrasilASSIS BRASILNSS…12900−10.941−69.5672392875.91\n    11120038NorteAC12ACREPlácido de CastroPLACIDO DE CASTRONSS…12900−10.276−67.151362047.45\n    12120040NorteAC12ACRERio BrancoRIO BRANCOSSS…12900−9.975−67.811539222.58\n    13120001NorteAC12ACREAcrelândiaACRELANDIANSS…12900−9.828−66.883251574.55\n    14120040NorteAC12ACRERio BrancoRIO BRANCOSSS…12900−9.975−67.811539222.58\n    ⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋱⋮⋮⋮⋮⋮\n    16,816,986171840NorteTO17TOCANTINSPresidente KennedyPRESIDENTE KENNEDYNNS…17900−8.539−48.506247770.418\n    16,816,987171670NorteTO17TOCANTINSColméiaCOLMEIANNS…17900−8.729−48.765362990.712\n    16,816,988171670NorteTO17TOCANTINSColméiaCOLMEIANNS…17900−8.729−48.765362990.712\n    16,816,989170930NorteTO17TOCANTINSGuaraíGUARAINNS…17900−8.834−48.512592268.15\n    16,816,990171250NorteTO17TOCANTINSMarianópolis do TocantinsMARIANOPOLIS DO TOCANTINSNNS…17900−9.796−49.6541462091.36\n  \n  \n  \n    16,816,991 rows × 18 columns\n  \n\n\n\n\n\nTabela agrupada\n\ndf_mun = group_cols(df_mun, cols_mun)\ndf_mun = df_mun.sort(-f.count)\ndf_mun\n\n\n\n  \n  \n    cod_municipioregiaoufcod_ufnome_ufmunicipionome_municipiocapitalfronteiraamazonia…latitudelongitudealtitudeareacount\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    0355030SudesteSP35SAO PAULOSão PauloSAO PAULOSNN…−23.548−46.6367601522.99806352\n    1330455SudesteRJ33RIO DE JANEIRORio de JaneiroRIO DE JANEIROSNN…−22.903−43.20821182.3368216\n    2130260NorteAM13AMAZONASManausMANAUSSNS…−3.102−60.0259211401.1297036\n    3230440NordesteCE23CEARAFortalezaFORTALEZASNN…−3.717−38.54321313.14203370\n    4292740NordesteBA29BAHIASalvadorSALVADORSNN…−12.971−38.5118706.799169924\n    5150140NortePA15PARABelémBELEMSNS…−1.456−48.504101064.92126918\n    6310620SudesteMG31MINAS GERAISBelo HorizonteBELO HORIZONTESNN…−19.817−43.956858330.954125370\n    7431490SulRS43RIO GRANDE DO SULPorto AlegrePORTO ALEGRESNN…−30.033−51.233496.827105321\n    8410690SulPR41PARANACuritibaCURITIBASNN…−25.428−49.273934434.967101337\n    9270430NordesteAL27ALAGOASMaceióMACEIOSNN…−9.666−35.73516510.65593551\n    10520870Centro-OesteGO52GOIASGoiâniaGOIANIASNN…−16.679−49.254749739.49292068\n    11351880SudesteSP35SAO PAULOGuarulhosGUARULHOSNNN…−23.463−46.533759318.01491617\n    12221100NordestePI22PIAUITeresinaTERESINASNN…−5.089−42.802721755.786245\n    13500270Centro-OesteMS50MATO GROSSO DO SULCampo GrandeCAMPO GRANDESNN…−20.443−54.6465328096.0584481\n    14261160NordestePE26PERNAMBUCORecifeRECIFESNN…−8.054−34.8814217.49483833\n    ⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋱⋮⋮⋮⋮⋮\n    5564520020Centro-OesteGO52GOIASÁgua LimpaAGUA LIMPANNN…−18.074−48.762682452.85625\n    5565510120Centro-OesteMT51MATO GROSSOAraguainhaARAGUAINHANNS…−16.856−53.033462688.67623\n    5566350640SudesteSP35SAO PAULOBilacBILACNNN…−21.403−50.471431157.27818\n    5567500627Centro-OesteMS50MATO GROSSO DO SULParaíso das ÁguasPARAISO DAS AGUASNNN…−19.0216−53.011605032.4715\n    5568330513SudesteRJ33RIO DE JANEIROSão José de UbáSAO JOSE DE UBANNN…−21.358−41.94395250.5966\n  \n  \n  \n    5569 rows × 19 columns"
  },
  {
    "objectID": "sections/table_muns.html#índice-socioeconômico",
    "href": "sections/table_muns.html#índice-socioeconômico",
    "title": "Municípios",
    "section": "Índice Socioeconômico",
    "text": "Índice Socioeconômico\n\nColunas da tabela\n\ncols_socioecon = {\n  'Cód IBGE': 'cod_municipio',\n  'Grupo': 'socioecon',\n  ...: None\n}\n\n\npath_socioeco = get_path('HEALTH', 'health_regions.csv')\ndf_socioeco = dt.fread(path_socioeco, columns=cols_socioecon)\ndf_socioeco\n\n\n\n  \n  \n    cod_municipiosocioecon\n    ▪▪▪▪▪▪▪▪\n  \n  \n    01200012\n    11200051\n    21200101\n    31200132\n    41200172\n    51200201\n    61200251\n    71200301\n    81200322\n    91200331\n    101200342\n    111200351\n    121200382\n    131200802\n    141200391\n    ⋮⋮⋮\n    55661721201\n    55671721252\n    55681721302\n    55691722083\n    55701722103\n  \n  \n  \n    5571 rows × 2 columns"
  },
  {
    "objectID": "sections/table_procs.html#sih",
    "href": "sections/table_procs.html#sih",
    "title": "Procedimentos",
    "section": "SIH",
    "text": "SIH\n\nColunas da tabela\n\ncols_proc = [\n  'ano',\n  'parto_normal',\n  'cnes',\n  'hosp_cod_municipio',\n  'hosp_regiao_saude',\n  'cod_municipio',\n  'regiao_saude',\n  'idade'\n]\n\n\npath_sih = '/Volumes/SanDisk/Databases/SIH/SIHSUS.jay'\ndf_proc = dt.fread(path_sih)\ndf_proc = df_proc[:, cols_proc]\ndf_proc\n\n\n\n  \n  \n    anoparto_normalcneshosp_cod_municipiohosp_regiao_saudecod_municipioregiao_saudeidade\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    0201031001003920010201200051202120005120223\n    1201031001003920007331200401201120040120128\n    2201031001003920007331200401201120040120138\n    3201031001003920007331200401201120040120116\n    4201031001003920007331200401201120040120126\n    5201031001003920007331200401201120040120126\n    6201031001003920007331200401201120040120127\n    7201031001003920010201200051202120005120231\n    8201031001003920007331200401201120040120130\n    9201031001003920007331200401201120040120118\n    10201031001003920010201200051202120005120228\n    11201031001003920007331200401201120038120132\n    12201031001003920007331200401201120040120130\n    13201031001003920007331200401201120001120126\n    14201031001003920007331200401201120040120126\n    ⋮⋮⋮⋮⋮⋮⋮⋮⋮\n    16,816,986201941101003427656401709301704171840170424\n    16,816,987201941101003427656401709301704171670170427\n    16,816,988201941101003427656401709301704171670170422\n    16,816,989201941101003427656401709301704170930170425\n    16,816,990201941101003427551491716101708171250170821\n  \n  \n  \n    16,816,991 rows × 8 columns\n  \n\n\n\n\n\nTabela agrupada\n\ndf_proc = group_cols(df_proc, cols_proc)\ndf_proc = df_proc.sort(f.ano, -f.count)\ndf_proc\n\n\n\n  \n  \n    anoparto_normalcneshosp_cod_municipiohosp_regiao_saudecod_municipioregiao_saudeidadecount\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    0201031001003920773883550303501355030350122362\n    1201031001003920773883550303501355030350120333\n    2201031001003920773883550303501355030350119331\n    3201031001003920773883550303501355030350124327\n    4201031001003920777013550303501355030350121318\n    5201031001003920773883550303501355030350121303\n    6201031001003920773883550303501355030350123297\n    7201031001003920777013550303501355030350120296\n    8201031001003920777013550303501355030350122295\n    9201031001003920773883550303501355030350118292\n    10201031001003931517941302601301130260130120288\n    11201031001003931517941302601301130260130119276\n    12201031001003920773883550303501355030350125270\n    13201031001003920791863550303501355030350122269\n    14201031001003931517941302601301130260130122269\n    ⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮\n    3,355,6862019411010034992383727043027013556403520291\n    3,355,6872019411010034992383727043027014209104213241\n    3,355,6882019411010034992383727043027015102855109281\n    3,355,6892019411010034992383727043027015106225114291\n    3,355,6902019411010034992383727043027015107925114141\n  \n  \n  \n    3,355,691 rows × 9 columns\n  \n\n\n\n\nwith age: 3_355_691 rows × 9 columns\nwithout age: 461_276 rows × 8 columns\n\n\n\nAtualizando variável parto normal\n\ndf_proc[:, dt.update(parto_normal = f.parto_normal == 310010039)] # {310010039: 'normal', 411010034: 'cesariano'}\ndf_proc\n\n\n\n  \n  \n    anoparto_normalcneshosp_cod_municipiohosp_regiao_saudecod_municipioregiao_saudeidadecount\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    02010120773883550303501355030350122362\n    12010120773883550303501355030350120333\n    22010120773883550303501355030350119331\n    32010120773883550303501355030350124327\n    42010120777013550303501355030350121318\n    52010120773883550303501355030350121303\n    62010120773883550303501355030350123297\n    72010120777013550303501355030350120296\n    82010120777013550303501355030350122295\n    92010120773883550303501355030350118292\n    102010131517941302601301130260130120288\n    112010131517941302601301130260130119276\n    122010120773883550303501355030350125270\n    132010120791863550303501355030350122269\n    142010131517941302601301130260130122269\n    ⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮\n    3,355,68620190992383727043027013556403520291\n    3,355,68720190992383727043027014209104213241\n    3,355,68820190992383727043027015102855109281\n    3,355,68920190992383727043027015106225114291\n    3,355,69020190992383727043027015107925114141\n  \n  \n  \n    3,355,691 rows × 9 columns"
  },
  {
    "objectID": "sections/table_dists.html",
    "href": "sections/table_dists.html",
    "title": "Distâncias",
    "section": "",
    "text": "from utils import get_path, group_cols\nfrom datatable import dt, f"
  },
  {
    "objectID": "sections/table_dists.html#sih",
    "href": "sections/table_dists.html#sih",
    "title": "Distâncias",
    "section": "SIH",
    "text": "SIH\n\nColunas da tabela\n\ncols_mun = [\n  'cod_municipio',\n  'regiao',\n  'uf',\n  'cod_uf',\n  'nome_uf',\n  'municipio',\n  'nome_municipio',\n  'capital',\n  'fronteira',\n  'amazonia',\n  'macroregiao_saude',\n  'regiao_saude',\n  'nome_regiao_saude',\n  'microregiao_saude',\n  'latitude',\n  'longitude',\n  'altitude',\n  'area',\n]\n\n\npath_sih = '/Volumes/SanDisk/Databases/SIH/SIHSUS.jay'\ndf_mun = dt.fread(path_sih)\ndf_mun = df_mun[:, cols_mun]\ndf_mun\n\n\n\n  \n  \n    cod_municipioregiaoufcod_ufnome_ufmunicipionome_municipiocapitalfronteiraamazonia…microregiao_saudelatitudelongitudealtitudearea\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    0120005NorteAC12ACREAssis BrasilASSIS BRASILNSS…12900−10.941−69.5672392875.91\n    1120040NorteAC12ACRERio BrancoRIO BRANCOSSS…12900−9.975−67.811539222.58\n    2120040NorteAC12ACRERio BrancoRIO BRANCOSSS…12900−9.975−67.811539222.58\n    3120040NorteAC12ACRERio BrancoRIO BRANCOSSS…12900−9.975−67.811539222.58\n    4120040NorteAC12ACRERio BrancoRIO BRANCOSSS…12900−9.975−67.811539222.58\n    5120040NorteAC12ACRERio BrancoRIO BRANCOSSS…12900−9.975−67.811539222.58\n    6120040NorteAC12ACRERio BrancoRIO BRANCOSSS…12900−9.975−67.811539222.58\n    7120005NorteAC12ACREAssis BrasilASSIS BRASILNSS…12900−10.941−69.5672392875.91\n    8120040NorteAC12ACRERio BrancoRIO BRANCOSSS…12900−9.975−67.811539222.58\n    9120040NorteAC12ACRERio BrancoRIO BRANCOSSS…12900−9.975−67.811539222.58\n    10120005NorteAC12ACREAssis BrasilASSIS BRASILNSS…12900−10.941−69.5672392875.91\n    11120038NorteAC12ACREPlácido de CastroPLACIDO DE CASTRONSS…12900−10.276−67.151362047.45\n    12120040NorteAC12ACRERio BrancoRIO BRANCOSSS…12900−9.975−67.811539222.58\n    13120001NorteAC12ACREAcrelândiaACRELANDIANSS…12900−9.828−66.883251574.55\n    14120040NorteAC12ACRERio BrancoRIO BRANCOSSS…12900−9.975−67.811539222.58\n    ⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋱⋮⋮⋮⋮⋮\n    16,816,986171840NorteTO17TOCANTINSPresidente KennedyPRESIDENTE KENNEDYNNS…17900−8.539−48.506247770.418\n    16,816,987171670NorteTO17TOCANTINSColméiaCOLMEIANNS…17900−8.729−48.765362990.712\n    16,816,988171670NorteTO17TOCANTINSColméiaCOLMEIANNS…17900−8.729−48.765362990.712\n    16,816,989170930NorteTO17TOCANTINSGuaraíGUARAINNS…17900−8.834−48.512592268.15\n    16,816,990171250NorteTO17TOCANTINSMarianópolis do TocantinsMARIANOPOLIS DO TOCANTINSNNS…17900−9.796−49.6541462091.36\n  \n  \n  \n    16,816,991 rows × 18 columns\n  \n\n\n\n\n\nTabela agrupada\n\ndf_mun = group_cols(df_mun, cols_mun)\ndf_mun = df_mun.sort(-f.count)\ndf_mun\n\n\n\n  \n  \n    cod_municipioregiaoufcod_ufnome_ufmunicipionome_municipiocapitalfronteiraamazonia…latitudelongitudealtitudeareacount\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    0355030SudesteSP35SAO PAULOSão PauloSAO PAULOSNN…−23.548−46.6367601522.99806352\n    1330455SudesteRJ33RIO DE JANEIRORio de JaneiroRIO DE JANEIROSNN…−22.903−43.20821182.3368216\n    2130260NorteAM13AMAZONASManausMANAUSSNS…−3.102−60.0259211401.1297036\n    3230440NordesteCE23CEARAFortalezaFORTALEZASNN…−3.717−38.54321313.14203370\n    4292740NordesteBA29BAHIASalvadorSALVADORSNN…−12.971−38.5118706.799169924\n    5150140NortePA15PARABelémBELEMSNS…−1.456−48.504101064.92126918\n    6310620SudesteMG31MINAS GERAISBelo HorizonteBELO HORIZONTESNN…−19.817−43.956858330.954125370\n    7431490SulRS43RIO GRANDE DO SULPorto AlegrePORTO ALEGRESNN…−30.033−51.233496.827105321\n    8410690SulPR41PARANACuritibaCURITIBASNN…−25.428−49.273934434.967101337\n    9270430NordesteAL27ALAGOASMaceióMACEIOSNN…−9.666−35.73516510.65593551\n    10520870Centro-OesteGO52GOIASGoiâniaGOIANIASNN…−16.679−49.254749739.49292068\n    11351880SudesteSP35SAO PAULOGuarulhosGUARULHOSNNN…−23.463−46.533759318.01491617\n    12221100NordestePI22PIAUITeresinaTERESINASNN…−5.089−42.802721755.786245\n    13500270Centro-OesteMS50MATO GROSSO DO SULCampo GrandeCAMPO GRANDESNN…−20.443−54.6465328096.0584481\n    14261160NordestePE26PERNAMBUCORecifeRECIFESNN…−8.054−34.8814217.49483833\n    ⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋱⋮⋮⋮⋮⋮\n    5564520020Centro-OesteGO52GOIASÁgua LimpaAGUA LIMPANNN…−18.074−48.762682452.85625\n    5565510120Centro-OesteMT51MATO GROSSOAraguainhaARAGUAINHANNS…−16.856−53.033462688.67623\n    5566350640SudesteSP35SAO PAULOBilacBILACNNN…−21.403−50.471431157.27818\n    5567500627Centro-OesteMS50MATO GROSSO DO SULParaíso das ÁguasPARAISO DAS AGUASNNN…−19.0216−53.011605032.4715\n    5568330513SudesteRJ33RIO DE JANEIROSão José de UbáSAO JOSE DE UBANNN…−21.358−41.94395250.5966\n  \n  \n  \n    5569 rows × 19 columns"
  },
  {
    "objectID": "sections/table_dists.html#índice-socioeconômico",
    "href": "sections/table_dists.html#índice-socioeconômico",
    "title": "Distâncias",
    "section": "Índice Socioeconômico",
    "text": "Índice Socioeconômico\n\nColunas da tabela\n\ncols_socioecon = {\n  'Cód IBGE': 'cod_municipio',\n  'Grupo': 'socioecon',\n  ...: None\n}\n\n\npath_socioeco = get_path('HEALTH', 'health_regions.csv')\ndf_socioeco = dt.fread(path_socioeco, columns=cols_socioecon)\ndf_socioeco\n\n\n\n  \n  \n    cod_municipiosocioecon\n    ▪▪▪▪▪▪▪▪\n  \n  \n    01200012\n    11200051\n    21200101\n    31200132\n    41200172\n    51200201\n    61200251\n    71200301\n    81200322\n    91200331\n    101200342\n    111200351\n    121200382\n    131200802\n    141200391\n    ⋮⋮⋮\n    55661721201\n    55671721252\n    55681721302\n    55691722083\n    55701722103\n  \n  \n  \n    5571 rows × 2 columns"
  },
  {
    "objectID": "sections/table_dists.html#distâncias",
    "href": "sections/table_dists.html#distâncias",
    "title": "Distâncias",
    "section": "Distâncias",
    "text": "Distâncias\n\nColunas da tabela\n\ncols_mun = [\n  'cod_municipio',\n  'regiao',\n  'uf',\n  'cod_uf',\n  'nome_uf',\n  'municipio',\n  'nome_municipio',\n  'capital',\n  'fronteira',\n  'amazonia',\n  'macroregiao_saude',\n  'regiao_saude',\n  'nome_regiao_saude',\n  'microregiao_saude',\n  'latitude',\n  'longitude',\n  'altitude',\n  'area',\n]\n\n\npath_dist = get_path('DISTANCIAS', 'matriz_distancias.zip')\ndf_dist = dt.fread(path_dist)\ndf_dist\n\n\n\n  \n  \n    origemdestinodistanciatempo\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    011000111000100\n    1110001110002309.056.16906\n    2110001110003399.56.28906\n    311000111000481.20111.91775\n    4110001110005391.7046.13636\n    5110001110006353.4175.53989\n    6110001110007313.5926.18117\n    7110001110008326.9835.34175\n    8110001110009145.6782.346\n    9110001110010649.54513.405\n    10110001110011214.1253.83481\n    11110001110012130.772.54781\n    12110001110013357.5117.13067\n    1311000111001460.21031.02275\n    14110001110015172.9263.18425\n    ⋮⋮⋮⋮⋮\n    31,024,895530010522200161.7292.356\n    31,024,896530010522205382.7095.47956\n    31,024,897530010522220161.6032.24894\n    31,024,898530010522230190.0013.21608\n    31,024,89953001053001000\n  \n  \n  \n    31,024,900 rows × 4 columns"
  },
  {
    "objectID": "sections/table_dists.html#procedimentos",
    "href": "sections/table_dists.html#procedimentos",
    "title": "Distâncias",
    "section": "Procedimentos",
    "text": "Procedimentos\n\nColunas da tabela\n\ncols_deslc = {\n  'cod_municipio': 'origem',\n  'hosp_cod_municipio': 'destino',\n  ...: None\n}\n\n\npath_deslc = get_path('GESTANTES', 'procedimentos.csv.gzip')\ndf_deslc = dt.fread(path_deslc, columns=cols_deslc)\ndf_deslc\n\n\n\n  \n  \n    destinoorigem\n    ▪▪▪▪▪▪▪▪\n  \n  \n    0355030355030\n    1355030355030\n    2355030355030\n    3355030355030\n    4355030355030\n    5355030355030\n    6355030355030\n    7355030355030\n    8355030355030\n    9355030355030\n    10130260130260\n    11130260130260\n    12355030355030\n    13355030355030\n    14130260130260\n    ⋮⋮⋮\n    3,355,686270430355640\n    3,355,687270430420910\n    3,355,688270430510285\n    3,355,689270430510622\n    3,355,690270430510792\n  \n  \n  \n    3,355,691 rows × 2 columns\n  \n\n\n\n\n\nTabela agrupada\n\ndf_deslc = group_cols(df_deslc, list(cols_deslc.values())[:-1])\ndf_deslc = df_deslc.sort(-f.count)\ndf_deslc\n\n\n\n  \n  \n    origemdestinocount\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    035503035503021807\n    13304553304559922\n    22304402304407113\n    31302601302605488\n    42927402927405406\n    51501401501405142\n    65208705208704669\n    73106203106204408\n    84314904314903879\n    92303702304403507\n    102704302704303353\n    114106904106903310\n    122111302111303208\n    132211002211003059\n    145002705002702902\n    ⋮⋮⋮⋮\n    71,6815222205205401\n    71,6825222205218301\n    71,6835222305218301\n    71,6845222305219701\n    71,6855222305220451\n  \n  \n  \n    71,686 rows × 3 columns"
  }
]