[
  {
    "objectID": "README.html",
    "href": "README.html",
    "title": "Introdução",
    "section": "",
    "text": "Contexto\nNo Brasil, 98% dos partos ocorrem em ambiente hospitalar, e 77% no Sistema Único de Saúde (SUS). O acesso oportuno aos serviços obstétricos de internação para o parto é fundamental para garantir a segurança do cuidado materno e neonatal. Entretanto, há “vazios assistenciais” na oferta de serviços hospitalares pelo SUS que fazem com que grande parte das parturientes precise se deslocar de um município a outro para ser assistida.\nO retardo na atenção obstétrica no momento do parto está associado à desfechos maternos adversos, e o deslocamento de grandes distâncias tem sido associado a níveis elevados de mortalidade infantil e neonatal, além de maior risco de morbimortalidade materna. Assim, a análise da distância percorrida pelas parturientes de sua residência até o hospital é um indicador útil e sensível para avaliar a dificuldade em acessar cuidados maternos e neonatais no SUS.\nA análise da acessibilidade geográfica é um componente importante da avaliação de serviços de saúde e reflete aspectos da distribuição espacial da oferta de serviços que dificultam ou promovem sua utilização. A metodologia de análise de redes sociais (ARS) tem sido utilizada nesse contexto, incluindo a internação para o parto, e também como ferramenta para gestão em saúde.\nEste projeto tem o objetivo de analisar a acessibilidade geográfica ao parto hospitalar realizado no SUS nos últimos 10 anos, em todo Brasil, aplicando a ARS como uma nova ferramenta para a gestão de serviços de saúde. Serão utilizados dados do Departamento de Informática do SUS (DATASUS) para a construção das redes de deslocamento das gestantes em busca de internação para o parto, levando-se em conta as distâncias percorridas, mapeando fluxos preferenciais e identificando lacunas geográficas de atendimento e polos de atração de maior demanda, como medida de inequidade no acesso aos serviços. O projeto avança no processo de avaliação do sistema de saúde ao desenvolver novos indicadores de acesso à serviços obstétricos, baseados em uma metodologia inovadora, e com abrangência nacional e aplicabilidade a outras áreas de saúde pública.\nEspera-se, com este estudo, gerar evidências que permitam um melhor entendimento da organização e das fragilidades do SUS na assistência à saúde da mulher no ciclo gravídico-puerperal, contribuindo para o planejamento da atenção obstétrica e para o fortalecimento de políticas públicas voltadas para melhoria do acesso aos serviços de saúde."
  },
  {
    "objectID": "sections/database_cnes.html",
    "href": "sections/database_cnes.html",
    "title": "CNES",
    "section": "",
    "text": "import re\nimport csv\nimport time\nimport numpy as np\nimport pandas as pd\nfrom tqdm import tqdm\nfrom os import listdir\nfrom datatable import dt, f, by\nfrom bs4 import BeautifulSoup\nfrom selenium import webdriver\nfrom selenium.webdriver.common.by import By\nfrom selenium.webdriver.common.keys import Keys\nfrom selenium.webdriver.chrome.options import Options\nfrom utils import get_path, data_load, group_cols"
  },
  {
    "objectID": "sections/database_cnes.html#sih",
    "href": "sections/database_cnes.html#sih",
    "title": "CNES",
    "section": "SIH",
    "text": "SIH\n\nColunas da tabela\n\ncols_sih = [\n  'cnes',\n]\n\n\npath_sih = get_path('SIH', 'sih.jay')\ndf_sih = dt.fread(path_sih)\ndf_sih = df_sih[:, cols_sih]\ndf_sih\n\n\n\n  \n  \n    cnes\n    ▪▪▪▪\n  \n  \n    02001020\n    12000733\n    22000733\n    32000733\n    42000733\n    52000733\n    62000733\n    72001020\n    82000733\n    92000733\n    102001020\n    112000733\n    122000733\n    132000733\n    142000733\n    ⋮⋮\n    17,106,3962765640\n    17,106,3972765640\n    17,106,3982765640\n    17,106,3992765640\n    17,106,4002755149\n  \n  \n  \n    17,106,401 rows × 1 column\n  \n\n\n\n\n\nTabela agrupada\n\ndf_sih = group_cols(df_sih, cols_sih).sort(-f.count)\ndf_sih\n\n\n\n  \n  \n    cnescount\n    ▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    02232101955\n    1315179475209\n    2232339774712\n    3231168264833\n    42679463700\n    5202006859613\n    6662759558139\n    7279927857750\n    81048057201\n    9207738857055\n    10701185750402\n    11630315348546\n    12275516548341\n    13234488248078\n    14207918646585\n    ⋮⋮⋮\n    414573201751\n    414676030291\n    414776214421\n    414877043641\n    414977430681\n  \n  \n  \n    4150 rows × 2 columns"
  },
  {
    "objectID": "sections/database_cnes.html#cnes-coletados",
    "href": "sections/database_cnes.html#cnes-coletados",
    "title": "CNES",
    "section": "CNES coletados",
    "text": "CNES coletados\n\ndf_cnes_collect = pd.DataFrame()\ndf_cnes_collect['cnes'] = cnes_list\ndf_cnes_collect['collected'] = [len(df) ==  1 for df in dfs]\ndf_cnes_collect\n\n\n\n\n\n  \n    \n      \n      cnes\n      collected\n    \n  \n  \n    \n      0\n      0002232\n      True\n    \n    \n      1\n      3151794\n      True\n    \n    \n      2\n      2323397\n      True\n    \n    \n      3\n      2311682\n      True\n    \n    \n      4\n      0026794\n      True\n    \n    \n      ...\n      ...\n      ...\n    \n    \n      4145\n      7320175\n      True\n    \n    \n      4146\n      7603029\n      True\n    \n    \n      4147\n      7621442\n      True\n    \n    \n      4148\n      7704364\n      True\n    \n    \n      4149\n      7743068\n      True\n    \n  \n\n4150 rows × 2 columns\n\n\n\n\nn_cnes = df_cnes_collect.shape[0]\nn_collected = df_cnes_collect[df_cnes_collect['collected'] == True].shape[0]\npercent_clct = n_collected / n_cnes\nprint(f'Collected {n_collected} cnes from {n_cnes} ({percent_clct:.2f}%)')\n\nCollected 3928 cnes from 4150 (0.95%)"
  },
  {
    "objectID": "sections/database_cnes.html#concatenando-tabelas",
    "href": "sections/database_cnes.html#concatenando-tabelas",
    "title": "CNES",
    "section": "Concatenando tabelas",
    "text": "Concatenando tabelas\nConcatenação das tabelas em uma\n\ndf_cnes = pd.concat([df for df in dfs if len(df) ==  1])\ndf_cnes\n\n\n\n\n\n  \n    \n      \n      UF\n      Município\n      CNES\n      Nome Fantasia\n      Natureza Jurídica(Grupo)\n      Gestão\n      Atende SUS\n    \n  \n  \n    \n      0\n      SE\n      ARACAJU\n      0002232\n      HOSPITAL E MATERNIDADE SANTA IZABEL\n      ENTIDADES SEM FINS LUCRATIVOS\n      M\n      SIM\n    \n    \n      0\n      AM\n      MANAUS\n      3151794\n      MATERNIDADE DE REFERENCIA ANA BRAGA\n      ADMINISTRAÇÃO PÚBLICA\n      E\n      SIM\n    \n    \n      0\n      PI\n      TERESINA\n      2323397\n      MATERNIDADE DONA EVANGELINA ROSA\n      ADMINISTRAÇÃO PÚBLICA\n      M\n      SIM\n    \n    \n      0\n      MT\n      CUIABA\n      2311682\n      HOSPITAL SANTA HELENA\n      ENTIDADES SEM FINS LUCRATIVOS\n      M\n      SIM\n    \n    \n      0\n      MG\n      BELO HORIZONTE\n      0026794\n      HOSPITAL SOFIA FELDMAN\n      ENTIDADES SEM FINS LUCRATIVOS\n      M\n      SIM\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      0\n      SP\n      SAO MIGUEL ARCANJO\n      7320175\n      HOSPITAL SAO MIGUEL ARCANJO\n      ENTIDADES SEM FINS LUCRATIVOS\n      M\n      SIM\n    \n    \n      0\n      MA\n      BOA VISTA DO GURUPI\n      7603029\n      HOSPITAL MUNICIPAL LENILDE OLIVEIRA\n      ADMINISTRAÇÃO PÚBLICA\n      M\n      SIM\n    \n    \n      0\n      ES\n      VITORIA\n      7621442\n      HOSPITAL ESTADUAL DE URGENCIA E EMERGENCIA\n      ADMINISTRAÇÃO PÚBLICA\n      E\n      SIM\n    \n    \n      0\n      RO\n      CACOAL\n      7704364\n      HOSPITAL DE URGENCIA E EMERGENCIA REGIONAL DE ...\n      ADMINISTRAÇÃO PÚBLICA\n      E\n      SIM\n    \n    \n      0\n      GO\n      GOIANIA\n      7743068\n      HOSPITAL ESTADUAL DE URGENCIAS GOV OTAVIO LAG ...\n      ADMINISTRAÇÃO PÚBLICA\n      E\n      SIM\n    \n  \n\n3928 rows × 7 columns"
  },
  {
    "objectID": "sections/database_cnes.html#cnes-não-atendem-sus",
    "href": "sections/database_cnes.html#cnes-não-atendem-sus",
    "title": "CNES",
    "section": "CNES não atendem SUS",
    "text": "CNES não atendem SUS\n\nQuantidade dos que atendem\n\ndf_cnes['Atende SUS'].value_counts()\n\nSIM    3814\nNÃO     114\nName: Atende SUS, dtype: int64\n\n\n\n\nOs que não antendem\n\ndf_not_sus = df_cnes[df_cnes['Atende SUS'] == 'NÃO']\ndf_not_sus =  df_not_sus.sort_values(by='UF')\ndf_not_sus\n\n\n\n\n\n  \n    \n      \n      UF\n      Município\n      CNES\n      Nome Fantasia\n      Natureza Jurídica(Grupo)\n      Gestão\n      Atende SUS\n    \n  \n  \n    \n      0\n      AL\n      MACEIO\n      2808889\n      HOSPITAL SAO RAFAEL\n      ENTIDADES EMPRESARIAIS\n      M\n      NÃO\n    \n    \n      0\n      AL\n      MACEIO\n      6782477\n      HOSPITAL GERAL E MATERNIDADE ALERTA MEDICO\n      ENTIDADES EMPRESARIAIS\n      M\n      NÃO\n    \n    \n      0\n      BA\n      IBIPEBA\n      2412985\n      HOSPITAL BOM JESUS DE NAZARE\n      ENTIDADES EMPRESARIAIS\n      E\n      NÃO\n    \n    \n      0\n      BA\n      IBIRATAIA\n      2413051\n      MATERNIDADE AURELINA VIRGILIA FAIR\n      ENTIDADES SEM FINS LUCRATIVOS\n      M\n      NÃO\n    \n    \n      0\n      BA\n      EUNAPOLIS\n      2556642\n      HOSPITAL E MATERNIDADE DE EUNAPOLIS\n      ENTIDADES EMPRESARIAIS\n      M\n      NÃO\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      0\n      SP\n      MORUNGABA\n      2026392\n      HOSPITAL SANTO ANTONIO\n      ENTIDADES EMPRESARIAIS\n      M\n      NÃO\n    \n    \n      0\n      SP\n      CAIEIRAS\n      6817203\n      HOSPITAL DE CLINICAS CAIEIRAS\n      ENTIDADES EMPRESARIAIS\n      M\n      NÃO\n    \n    \n      0\n      SP\n      SAO PAULO\n      2076934\n      HOSPITAL SOROCABANA\n      ENTIDADES SEM FINS LUCRATIVOS\n      M\n      NÃO\n    \n    \n      0\n      SP\n      TUPA\n      2080672\n      HOSPITAL SAO FRANCISCO TUPA\n      ENTIDADES SEM FINS LUCRATIVOS\n      M\n      NÃO\n    \n    \n      0\n      SP\n      TREMEMBE\n      2081326\n      HOSPITAL BOM JESUS DE TREMEMBE\n      ENTIDADES SEM FINS LUCRATIVOS\n      M\n      NÃO\n    \n  \n\n114 rows × 7 columns\n\n\n\n\n\nUF\n\ndf_not_sus['UF'].value_counts()\n\nPA    18\nBA    15\nPR    14\nGO    10\nRJ     8\nPE     8\nCE     6\nSP     5\nMT     5\nMS     4\nMA     4\nMG     4\nPI     3\nES     2\nRN     2\nAL     2\nSE     1\nRS     1\nPB     1\nDF     1\nName: UF, dtype: int64\n\n\n\n\nNatureza Jurídica(Grupo)\n\ndf_not_sus['Natureza Jurídica(Grupo)'].value_counts()\n\nENTIDADES EMPRESARIAIS           95\nENTIDADES SEM FINS LUCRATIVOS    17\nADMINISTRAÇÃO PÚBLICA             2\nName: Natureza Jurídica(Grupo), dtype: int64"
  },
  {
    "objectID": "sections/database_dists.html",
    "href": "sections/database_dists.html",
    "title": "Distâncias",
    "section": "",
    "text": "import pandas as pd\nfrom utils import get_path, data_load\nfrom datatable import dt, f"
  },
  {
    "objectID": "sections/database_dists.html#carregando-tabela",
    "href": "sections/database_dists.html#carregando-tabela",
    "title": "Distâncias",
    "section": "Carregando tabela",
    "text": "Carregando tabela\n\nurl_dist = 'https://www.dropbox.com/sh/1gx8xwdddrwz2gt/AAA115SmiZ0LtTsgzrJIhrb6a/matriz_distancias.zip?dl=1'\n\n\ndf_dist = pd.read_csv(url_dist, compression='zip')\ndf_dist = dt.Frame(df_dist)\ndf_dist\n\n\n\n  \n  \n    origemdestinodistanciatempo\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    011000111000100\n    1110001110002309.056.16906\n    2110001110003399.56.28906\n    311000111000481.20111.91775\n    4110001110005391.7046.13636\n    5110001110006353.4175.53989\n    6110001110007313.5926.18117\n    7110001110008326.9835.34175\n    8110001110009145.6782.346\n    9110001110010649.54513.405\n    10110001110011214.1253.83481\n    11110001110012130.772.54781\n    12110001110013357.5117.13067\n    1311000111001460.21031.02275\n    14110001110015172.9263.18425\n    ⋮⋮⋮⋮⋮\n    31,024,895530010522200161.7292.356\n    31,024,896530010522205382.7095.47956\n    31,024,897530010522220161.6032.24894\n    31,024,898530010522230190.0013.21608\n    31,024,89953001053001000\n  \n  \n  \n    31,024,900 rows × 4 columns\n  \n\n\n\n~30 seconds to download"
  },
  {
    "objectID": "sections/database_gmaps.html",
    "href": "sections/database_gmaps.html",
    "title": "Google Maps",
    "section": "",
    "text": "import sys\nimport json\nimport pickle\nimport numpy as np\nimport pandas as pd\nimport googlemaps as gmaps\n\nfrom os import listdir, walk\nfrom tqdm import tqdm\nfrom pathlib import Path\nfrom datetime import datetime\nfrom datatable import dt, f, by\n\nfrom plotly import express as px, io as pio\npd.options.plotting.backend = 'plotly'\npio.renderers.default = 'plotly_mimetype+notebook_connected'\n\nfrom utils import get_path, data_load\nsys.path.insert(0, '../')\nfrom secret import API_KEY"
  },
  {
    "objectID": "sections/database_gmaps.html#municípios",
    "href": "sections/database_gmaps.html#municípios",
    "title": "Google Maps",
    "section": "Municípios",
    "text": "Municípios\n\nCarregando tabela\n\npath_munic = get_path('LOCALIDADES', 'municipios.csv.gzip')\ndf_munic = dt.fread(path_munic)\ndf_munic\n\n\n\n  \n  \n    cod_municipionome_municipiocapitalufcod_ufnome_ufregiaolatitudelongitude\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    0520005Abadia de Goiás0GO52GoiásCentro-Oeste−16.7573−49.4412\n    1310010Abadia dos Dourados0MG31Minas GeraisSudeste−18.4831−47.3916\n    2520010Abadiânia0GO52GoiásCentro-Oeste−16.197−48.7057\n    3310020Abaeté0MG31Minas GeraisSudeste−19.1551−45.4444\n    4150010Abaetetuba0PA15ParáNorte−1.72183−48.8788\n    5230010Abaiara0CE23CearáNordeste−7.34588−39.0416\n    6290010Abaíra0BA29BahiaNordeste−13.2488−41.6619\n    7290020Abaré0BA29BahiaNordeste−8.72073−39.1162\n    8410010Abatiá0PR41ParanáSul−23.3049−50.3133\n    9420005Abdon Batista0SC42Santa CatarinaSul−27.6126−51.0233\n    10150013Abel Figueiredo0PA15ParáNorte−4.95333−48.3933\n    11420010Abelardo Luz0SC42Santa CatarinaSul−26.5716−52.3229\n    12310030Abre Campo0MG31Minas GeraisSudeste−20.2996−42.4743\n    13260005Abreu e Lima0PE26PernambucoNordeste−7.90072−34.8984\n    14170025Abreulândia0TO17TocantinsNorte−9.62101−49.1518\n    ⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮\n    5565293360Xique-Xique0BA29BahiaNordeste−10.823−42.7245\n    5566251740Zabelê0PB25ParaíbaNordeste−8.07901−37.1057\n    5567355715Zacarias0SP35São PauloSudeste−21.0506−50.0552\n    5568211400Zé Doca0MA21MaranhãoNordeste−3.27014−45.6553\n    5569421985Zortéa0SC42Santa CatarinaSul−27.4521−51.552\n  \n  \n  \n    5570 rows × 9 columns"
  },
  {
    "objectID": "sections/database_gmaps.html#sih",
    "href": "sections/database_gmaps.html#sih",
    "title": "Google Maps",
    "section": "SIH",
    "text": "SIH\n\nColunas\n\ncols_sih = {\n  'cod_municipio': 'origem',\n  'hosp_cod_municipio': 'destino',\n}\n\n\n\nCarregando tabela\n\npath_sih = get_path('SIH', 'sih.jay')\ndf_sih = dt.fread(path_sih, columns=cols_sih)\ndf_sih.names = cols_sih\ndf_sih = df_sih[:, list(cols_sih.values())]\ndf_sih = df_sih[f.origem != f.destino, :]\ndf_sih['count'] = 1\ndf_sih = df_sih[:, dt.sum(f.count), by('origem', 'destino')]\ndf_sih = df_sih.sort(-f.count)\ndf_sih\n\n\n\n  \n  \n    origemdestinocount\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    051084051034022807\n    131546031062017147\n    226079026116016012\n    352125053001015461\n    428048028003015090\n    533035033028514875\n    623037023044014545\n    732050032053014543\n    815008015014014521\n    943230043149014273\n    1052002553001013577\n    1135150035528013106\n    1252014052087012745\n    1341004041069012717\n    1452218553001012112\n    ⋮⋮⋮⋮\n    68,5685300105213081\n    68,5695300105217701\n    68,5705300105220001\n    68,5715300105220201\n    68,5725300105220451\n  \n  \n  \n    68,573 rows × 3 columns"
  },
  {
    "objectID": "sections/database_gmaps.html#latitude-longitude",
    "href": "sections/database_gmaps.html#latitude-longitude",
    "title": "Google Maps",
    "section": "Latitude & Longitude",
    "text": "Latitude & Longitude\n\ndef get_latlon_table_by_ref(df_munic, ref):\n  cols_latlon = ['cod_municipio', 'latitude', 'longitude']\n  df_latlon = df_munic[:, cols_latlon]\n  df_latlon.names = {\n    'cod_municipio': ref,\n    'latitude': f'{ref}_latitude',\n    'longitude': f'{ref}_longitude',\n  }\n  df_latlon.key = ref\n  return df_latlon"
  },
  {
    "objectID": "sections/database_gmaps.html#parâmetros",
    "href": "sections/database_gmaps.html#parâmetros",
    "title": "Google Maps",
    "section": "Parâmetros",
    "text": "Parâmetros\n\ndef params_in_cols(df):\n  dfs = list()\n  for mode in ['driving', 'transit']: # driving | transit | bicycling | walking\n    for hour in [6, 12, 18]: # [6, 12, 18] | [7, 13, 19]\n      for traffic_model in ['best_guess', 'optimistic', 'pessimistic']: # best_guess | optimistic | pessimistic\n        if mode != 'driving' and traffic_model != 'best_guess':\n          continue\n        df_ = df.copy()\n        df_['mode'] = mode\n        df_['traffic_model'] = traffic_model\n        df_['hour'] = hour\n        dfs.append(df_)\n  df_param = pd.concat(dfs)\n  df_param = df_param.sort_values(by=[\n    'origem', 'destino', 'mode', 'traffic_model', 'hour'])\n  df_param = df_param.reset_index(drop=True)\n  return df_param"
  },
  {
    "objectID": "sections/database_gmaps.html#local-pra-armazenar-arquivo",
    "href": "sections/database_gmaps.html#local-pra-armazenar-arquivo",
    "title": "Google Maps",
    "section": "Local pra armazenar arquivo",
    "text": "Local pra armazenar arquivo\n\ndef get_backup_path(data):\n  infos = [\n    f'{data[\"hour\"]}h',\n    data['mode'],\n    data['traffic_model'],\n    str(data['origem']),\n    str(data['destino'])]\n  fname = '-'.join(infos)\n  dir = '/'.join(infos[:-1])\n  path_dir = get_path('LOCALIDADES', f'google_maps/{dir}')\n  Path(path_dir).mkdir(parents=True, exist_ok=True)\n  return path_dir + f'/{fname}.json'"
  },
  {
    "objectID": "sections/database_gmaps.html#requisição-para-api",
    "href": "sections/database_gmaps.html#requisição-para-api",
    "title": "Google Maps",
    "section": "Requisição para API",
    "text": "Requisição para API\n\ndef get_travel_info(row):\n  departure_time = datetime(year=2022, month=11, day=7, hour=row['hour'])\n  info = row.copy()\n  info['departure_time'] = str(departure_time)\n  res = gmaps.distance_matrix(\n    origins = [(row['origem_latitude'], row['origem_longitude'])],\n    destinations = [(row['destino_latitude'], row['destino_longitude'])],\n    mode = row['mode'],\n    traffic_model = row['traffic_model'],\n    departure_time = departure_time,\n    language = 'pt-BR',\n    units = 'metric',)\n  info['origin_addresses'] = res['origin_addresses'][0]\n  info['destination_addresses'] = res['destination_addresses'][0]\n  elem = res['rows'][0]['elements'][0]\n  info['status'] = elem['status']\n  for col in list(elem):\n    if col == 'status':\n      continue\n    for i_type in ['text', 'value']:\n      col_name = f'{col} ({i_type})'\n      if elem['status'] == 'OK':\n        info[col_name] = elem[col][i_type]\n      else:\n        info[col_name] = ''\n  return info"
  },
  {
    "objectID": "sections/database_gmaps.html#coleta-das-informações",
    "href": "sections/database_gmaps.html#coleta-das-informações",
    "title": "Google Maps",
    "section": "Coleta das informações",
    "text": "Coleta das informações\n\ndef request_travel_infos(df):\n  for row in tqdm(df.to_dict(orient='records')):\n    fpath = get_backup_path(row)\n    if Path(fpath).is_file() or (row['origem'] == row['destino']):\n      continue\n    try:\n      info = get_travel_info(row)\n    except:\n      info = {'status': 'ApiError'}\n    with open(fpath, 'w') as fp:\n      json.dump(info, fp)"
  },
  {
    "objectID": "sections/database_gmaps.html#seleção-parâmetros",
    "href": "sections/database_gmaps.html#seleção-parâmetros",
    "title": "Google Maps",
    "section": "Seleção parâmetros",
    "text": "Seleção parâmetros\n\ndef select_params(\n    df,\n    mode, # driving | transit | bicycling | walking\n    traffic_model, # best_guess | optimistic | pessimistic\n    hour, # [6, 12, 18] | [7, 13, 19]\n  ):\n  df_param = df[\n    (\n      df['mode'] == mode\n    ) & (\n      df['traffic_model'] == traffic_model\n    ) & (\n      df['hour'] == hour\n    )\n  ].sort_values(by='count', ascending=False)\n  return df_param"
  },
  {
    "objectID": "sections/database_gmaps.html#filtros",
    "href": "sections/database_gmaps.html#filtros",
    "title": "Google Maps",
    "section": "Filtros",
    "text": "Filtros\n\nIntra RJ\norigem e destino no estado do RJ.\n\norigem_rj = df_route['origem'].astype(str).str.startswith('33')\ndestino_rj = df_route['destino'].astype(str).str.startswith('33')\ndf_route_rj = df_route[origem_rj & destino_rj]\ndf_route_rj\n\n\n\n\n\n  \n    \n      \n      origem\n      destino\n      count\n      origem_latitude\n      origem_longitude\n      destino_latitude\n      destino_longitude\n      mode\n      traffic_model\n      hour\n    \n  \n  \n    \n      497964\n      330010\n      330023\n      1\n      -23.0011\n      -44.3196\n      -22.7528\n      -41.8846\n      driving\n      best_guess\n      6\n    \n    \n      497965\n      330010\n      330023\n      1\n      -23.0011\n      -44.3196\n      -22.7528\n      -41.8846\n      driving\n      best_guess\n      12\n    \n    \n      497966\n      330010\n      330023\n      1\n      -23.0011\n      -44.3196\n      -22.7528\n      -41.8846\n      driving\n      best_guess\n      18\n    \n    \n      497967\n      330010\n      330023\n      1\n      -23.0011\n      -44.3196\n      -22.7528\n      -41.8846\n      driving\n      optimistic\n      6\n    \n    \n      497968\n      330010\n      330023\n      1\n      -23.0011\n      -44.3196\n      -22.7528\n      -41.8846\n      driving\n      optimistic\n      12\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      519643\n      330630\n      330620\n      1\n      -22.5202\n      -44.0996\n      -22.4059\n      -43.6686\n      driving\n      pessimistic\n      12\n    \n    \n      519644\n      330630\n      330620\n      1\n      -22.5202\n      -44.0996\n      -22.4059\n      -43.6686\n      driving\n      pessimistic\n      18\n    \n    \n      519645\n      330630\n      330620\n      1\n      -22.5202\n      -44.0996\n      -22.4059\n      -43.6686\n      transit\n      best_guess\n      6\n    \n    \n      519646\n      330630\n      330620\n      1\n      -22.5202\n      -44.0996\n      -22.4059\n      -43.6686\n      transit\n      best_guess\n      12\n    \n    \n      519647\n      330630\n      330620\n      1\n      -22.5202\n      -44.0996\n      -22.4059\n      -43.6686\n      transit\n      best_guess\n      18\n    \n  \n\n15792 rows × 10 columns"
  },
  {
    "objectID": "sections/database_gmaps.html#consulta-api",
    "href": "sections/database_gmaps.html#consulta-api",
    "title": "Google Maps",
    "section": "Consulta API",
    "text": "Consulta API\n\ngmaps = gmaps.Client(key=API_KEY)\n\n\n# df_param = select_params(df_route_rj, 'driving', 'pessimistic', 18)\n# df_param = select_params(df_route_rj, 'transit', 'best_guess', 6)\n# df_param\n\n\n# df_param = select_params(df_route_sorted, 'driving', 'pessimistic', 18)\n# request_travel_infos(df_param)\n\n\n# df_param = select_params(df_route_sorted, 'transit', 'best_guess', 6)\n# request_travel_infos(df_param)\n\nRJ driving best_guess 6h\n100%|██████████| 1316/1316 [04:07<00:00, 5.32it/s]\nRJ driving best_guess 12h\n100%|██████████| 1316/1316 [04:28<00:00, 4.91it/s]\nRJ driving best_guess 18h\n100%|██████████| 1316/1316 [04:29<00:00, 4.89it/s]\nRJ driving pessimistic 18h\n100%|██████████| 1316/1316 [04:26<00:00, 5.12it/s]\nRJ transit best_guess 12h\n100%|██████████| 1316/1316 [03:20<00:00, 6.56it/s]"
  },
  {
    "objectID": "sections/database_gmaps.html#lendo-arquivos-salvos",
    "href": "sections/database_gmaps.html#lendo-arquivos-salvos",
    "title": "Google Maps",
    "section": "Lendo arquivos salvos",
    "text": "Lendo arquivos salvos\n\ndef read_data_to_df(path_dir, cols_order=None):\n  files = list()\n  for (dirpath, _, filenames) in walk(path_dir):\n    files.extend([dirpath + '/' + fl for fl in filenames if 'json' in fl])\n  infos = list()\n  for file in files:\n    with open(file) as fl:\n      d = json.load(fl)\n      infos.append(d)\n  df = pd.DataFrame(infos)\n  cols_order = df.columns if cols_order is None else cols_order\n  return df[cols_order]"
  },
  {
    "objectID": "sections/database_gmaps.html#ordenando-colunas",
    "href": "sections/database_gmaps.html#ordenando-colunas",
    "title": "Google Maps",
    "section": "Ordenando colunas",
    "text": "Ordenando colunas\n\ncols_order = [\n  'status', 'origem', 'destino', 'origin_addresses', 'destination_addresses',\n  'origem_latitude', 'origem_longitude', 'destino_latitude', 'destino_longitude',\n  'hour', 'departure_time', 'mode', 'traffic_model',\n  'distance (value)', 'distance (text)',\n  'duration (value)', 'duration (text)',\n  'duration_in_traffic (value)', 'duration_in_traffic (text)',\n  'count',\n]"
  },
  {
    "objectID": "sections/database_gmaps.html#tabela-resultante",
    "href": "sections/database_gmaps.html#tabela-resultante",
    "title": "Google Maps",
    "section": "Tabela resultante",
    "text": "Tabela resultante\n\npath_gmaps = get_path('LOCALIDADES', f'google_maps/')\npath_routes = get_path('GESTANTES', f'gmaps/routes.csv.gzip')\ndf_files = read_data_to_df(path_gmaps, cols_order=cols_order)\n# df_files = pd.read_csv(path_routes)\ndf_files\n\n\n\n\n\n  \n    \n      \n      status\n      origem\n      destino\n      origin_addresses\n      destination_addresses\n      origem_latitude\n      origem_longitude\n      destino_latitude\n      destino_longitude\n      hour\n      departure_time\n      mode\n      traffic_model\n      distance (value)\n      distance (text)\n      duration (value)\n      duration (text)\n      duration_in_traffic (value)\n      duration_in_traffic (text)\n      count\n    \n  \n  \n    \n      0\n      ZERO_RESULTS\n      292070.0\n      291360.0\n      -14.1035,-39.0137\n      -14.793,-39.046\n      -14.1035\n      -39.0137\n      -14.7930\n      -39.0460\n      6.0\n      2022-11-07 06:00:00\n      transit\n      best_guess\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      678.0\n    \n    \n      1\n      ZERO_RESULTS\n      290515.0\n      293330.0\n      -14.3347,-40.9175\n      -14.8615,-40.8442\n      -14.3347\n      -40.9175\n      -14.8615\n      -40.8442\n      6.0\n      2022-11-07 06:00:00\n      transit\n      best_guess\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      883.0\n    \n    \n      2\n      OK\n      330330.0\n      330490.0\n      R. Maria Bregua, 37 - São Lourenço, Niterói - ...\n      R. Temistocles de Almeida, 134 - Camarão, São ...\n      -22.8832\n      -43.1034\n      -22.8268\n      -43.0634\n      6.0\n      2022-11-07 06:00:00\n      transit\n      best_guess\n      9900.0\n      9,9 km\n      2271.0\n      38 minutos\n      NaN\n      NaN\n      204.0\n    \n    \n      3\n      OK\n      330330.0\n      330185.0\n      R. Maria Bregua, 37 - São Lourenço, Niterói - ...\n      R. João da Silva Maia, 14 - Parque Santo Anton...\n      -22.8832\n      -43.1034\n      -22.5347\n      -42.9895\n      6.0\n      2022-11-07 06:00:00\n      transit\n      best_guess\n      63545.0\n      63,5 km\n      12388.0\n      3 horas 26 minutos\n      NaN\n      NaN\n      2.0\n    \n    \n      4\n      OK\n      330330.0\n      330023.0\n      R. Maria Bregua, 37 - São Lourenço, Niterói - ...\n      Av. José Bento Ribeiro Dantas, 842, Búzios - R...\n      -22.8832\n      -43.1034\n      -22.7528\n      -41.8846\n      6.0\n      2022-11-07 06:00:00\n      transit\n      best_guess\n      171243.0\n      171 km\n      28870.0\n      8 horas 1 minuto\n      NaN\n      NaN\n      1.0\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      65933\n      OK\n      291810.0\n      280290.0\n      R. Delmiro Gouveia, 109 - Centro, Jeremoabo - ...\n      R. Cap. José Ferreira Neto, 244 - Centro, Itab...\n      -10.0685\n      -38.3471\n      -10.6826\n      -37.4273\n      18.0\n      2022-11-07 18:00:00\n      driving\n      pessimistic\n      144835.0\n      145 km\n      7519.0\n      2 horas 5 minutos\n      7908.0\n      2 horas 12 minutos\n      6.0\n    \n    \n      65934\n      OK\n      431075.0\n      431310.0\n      Av. Gen. Osório, 20, Ivorá - RS, 98160-000, Br...\n      R. Raimundo Aléssio, 325 - Nova Palma, RS, 972...\n      -29.5232\n      -53.5842\n      -29.4710\n      -53.4689\n      18.0\n      2022-11-07 18:00:00\n      driving\n      pessimistic\n      19878.0\n      19,9 km\n      2253.0\n      38 minutos\n      2253.0\n      38 minutos\n      3.0\n    \n    \n      65935\n      OK\n      431075.0\n      431490.0\n      Av. Gen. Osório, 20, Ivorá - RS, 98160-000, Br...\n      R. Casemiro de Abreu, 193 - Boa Vista, Porto A...\n      -29.5232\n      -53.5842\n      -30.0318\n      -51.2065\n      18.0\n      2022-11-07 18:00:00\n      driving\n      pessimistic\n      285093.0\n      285 km\n      14776.0\n      4 horas 6 minutos\n      16624.0\n      4 horas 37 minutos\n      4.0\n    \n    \n      65936\n      OK\n      431075.0\n      431690.0\n      Av. Gen. Osório, 20, Ivorá - RS, 98160-000, Br...\n      R. Conde de Porto Alegre, 365 - Bonfim, Santa ...\n      -29.5232\n      -53.5842\n      -29.6868\n      -53.8149\n      18.0\n      2022-11-07 18:00:00\n      driving\n      pessimistic\n      48429.0\n      48,4 km\n      3566.0\n      59 minutos\n      4101.0\n      1 hora 8 minutos\n      53.0\n    \n    \n      65937\n      OK\n      431849.0\n      432180.0\n      Rua Linha da Barra Zona Rural, São José do Inh...\n      R. Padre Cacique, 692 - Centro, Três de Maio -...\n      -27.7251\n      -54.1275\n      -27.7800\n      -54.2357\n      18.0\n      2022-11-07 18:00:00\n      driving\n      pessimistic\n      19250.0\n      19,2 km\n      1365.0\n      23 minutos\n      1506.0\n      25 minutos\n      116.0\n    \n  \n\n65938 rows × 20 columns\n\n\n\n\ndf_files['status'].value_counts()\n\nOK              62991\nZERO_RESULTS     2943\nApiError            4\nName: status, dtype: int64\n\n\n\nExportando\n\nCSV\n\ndf_files.to_csv(path_routes, index=False)\n\n\n\nXLSX\n\n# path_routes = get_path('GESTANTES', f'gmaps/routes.xlsx')\n# df_files.to_excel(path_routes, index=False)"
  },
  {
    "objectID": "sections/database_gmaps.html#driving-pessimistic-in-traffic-at-6pm-x-transit-at-12pm",
    "href": "sections/database_gmaps.html#driving-pessimistic-in-traffic-at-6pm-x-transit-at-12pm",
    "title": "Google Maps",
    "section": "driving pessimistic in traffic at 6pm x transit at 12pm",
    "text": "driving pessimistic in traffic at 6pm x transit at 12pm\n\nConsultar duração\n\ndef get_duration(df, origem, destino, mode, traffic_model, hour, in_traffic=True):\n  col_idx = int(in_traffic)\n  col_duration = ['duration (value)', 'duration_in_traffic (value)'][col_idx]\n  duration = df[\n    (\n      df['origem'] == origem\n    ) & (\n      df['destino'] == destino\n    ) & (\n      df['mode'] == mode\n    ) & (\n      df['traffic_model'] == traffic_model\n    ) & (\n      df['hour'] == hour\n    )\n  ]\n  duration = list(duration[col_duration])[0]\n  return duration\n\n\n\nComparação\n\ndef hours_comparison(df):\n  cols_route = ['origem', 'destino', 'distance (value)']\n  df_select = df[(\n      (df['mode'] == 'driving') & (df['traffic_model'] == 'pessimistic') & (df['hour'] == 18)\n    ) | (\n      (df['mode'] == 'transit') & (df['traffic_model'] == 'best_guess') & (df['hour'] == 6)\n  )]\n  for col in df_select.columns:\n    if col not in {'status', 'mode', 'traffic_model', 'late_pct'}:\n      df_select.loc[:, col] = df_select[col].apply(lambda x: x if pd.isna(x) else int(x))\n  df_route = df_select[cols_route].groupby(cols_route, as_index=False).sum()\n  ratios = list()\n  for row in tqdm(df_route.to_dict(orient='records')):\n    try:\n      driving = get_duration(df_select, row['origem'], row['destino'], 'driving', 'pessimistic', 18, in_traffic=True)\n      print(driving)\n      transit = get_duration(df_select, row['origem'], row['destino'], 'transit', 'best_guess', 6, in_traffic=False)\n      ratio = (transit - driving) / driving\n    except:\n      ratio = np.nan\n    ratios.append(ratio)\n  df_route['ratio'] = ratios\n  df_route = df_route.sort_values(cols_route).reset_index(drop=True)\n  return df_route#.dropna()\n\n\ndf_vs = hours_comparison(df_inv.dropna(subset=['duration (value)']))\ndf_vs\n\n/var/folders/9d/972tfrtd01z2hhl836z97zdr0000gn/T/ipykernel_55860/3508088823.py:10: SettingWithCopyWarning:\n\n\nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n\n/var/folders/9d/972tfrtd01z2hhl836z97zdr0000gn/T/ipykernel_55860/3508088823.py:10: FutureWarning:\n\nIn a future version, `df.iloc[:, i] = newvals` will attempt to set the values inplace instead of always setting a new array. To retain the old behavior, use either `df[df.columns[i]] = newvals` or, if columns are non-unique, `df.isetitem(i, newvals)`\n\n100%|██████████| 58352/58352 [00:00<00:00, 1364711.67it/s]\n\n\n\n\n\n\n  \n    \n      \n      origem\n      destino\n      distance (value)\n      ratio\n    \n  \n  \n    \n      0\n      110001\n      110002\n      330612\n      NaN\n    \n    \n      1\n      110001\n      110004\n      109937\n      NaN\n    \n    \n      2\n      110001\n      110009\n      143458\n      NaN\n    \n    \n      3\n      110001\n      110012\n      153453\n      NaN\n    \n    \n      4\n      110001\n      110013\n      389010\n      NaN\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      58347\n      530010\n      521760\n      57271\n      NaN\n    \n    \n      58348\n      530010\n      521830\n      311269\n      NaN\n    \n    \n      58349\n      530010\n      521975\n      52771\n      NaN\n    \n    \n      58350\n      530010\n      522068\n      256309\n      NaN\n    \n    \n      58351\n      530010\n      522200\n      163256\n      NaN\n    \n  \n\n58352 rows × 4 columns\n\n\n\n\n\nHistograma\n\npx.histogram(df_vs, x='ratio')\n\n\n                                                \n\n\n\n\nDensity contour\n\nfig = px.density_contour(df_vs, x='ratio', y='distance (value)', marginal_x=\"histogram\", marginal_y=\"histogram\") #log_x=True, log_y=True) # , opacity=.25\nfig.show()"
  },
  {
    "objectID": "sections/database_gmaps.html#diferença-com-tráfego",
    "href": "sections/database_gmaps.html#diferença-com-tráfego",
    "title": "Google Maps",
    "section": "% diferença com tráfego",
    "text": "% diferença com tráfego\n\nTabela com atraso percentual\n\ntraffic = 'duration_in_traffic (value)'\nnormal = 'duration (value)'\ndf_inv['late_pct'] = (df_inv[traffic] - df_inv[normal]) / df_inv[normal]\ndf_inv\n\n\n\n\n\n  \n    \n      \n      status\n      count\n      origem\n      destino\n      hour\n      mode\n      traffic_model\n      distance (value)\n      duration (value)\n      duration_in_traffic (value)\n      late_pct\n    \n  \n  \n    \n      0\n      OK\n      2.0\n      110001.0\n      110002.0\n      18.0\n      driving\n      pessimistic\n      330612.0\n      18065.0\n      20190.0\n      0.117631\n    \n    \n      1\n      OK\n      12.0\n      110001.0\n      110004.0\n      18.0\n      driving\n      pessimistic\n      109937.0\n      6238.0\n      6757.0\n      0.083200\n    \n    \n      2\n      OK\n      2.0\n      110001.0\n      110009.0\n      18.0\n      driving\n      pessimistic\n      143458.0\n      8228.0\n      10193.0\n      0.238819\n    \n    \n      3\n      OK\n      26.0\n      110001.0\n      110012.0\n      18.0\n      driving\n      pessimistic\n      153453.0\n      8366.0\n      9749.0\n      0.165312\n    \n    \n      4\n      OK\n      3.0\n      110001.0\n      110013.0\n      18.0\n      driving\n      pessimistic\n      389010.0\n      21686.0\n      23707.0\n      0.093194\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      65933\n      OK\n      2.0\n      530010.0\n      522200.0\n      18.0\n      driving\n      pessimistic\n      163256.0\n      8350.0\n      13232.0\n      0.584671\n    \n    \n      65934\n      ApiError\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n    \n    \n      65935\n      ApiError\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n    \n    \n      65936\n      ApiError\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n    \n    \n      65937\n      ApiError\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n    \n  \n\n65938 rows × 11 columns\n\n\n\n\n\nHistograma\ntraffic = normal + normal * late_pct\n\npx.histogram(df_inv, x='late_pct', color='hour', barmode='overlay', opacity=.5)"
  },
  {
    "objectID": "sections/database_gmaps.html#comparação-entre-horas",
    "href": "sections/database_gmaps.html#comparação-entre-horas",
    "title": "Google Maps",
    "section": "Comparação entre horas",
    "text": "Comparação entre horas\n\nConsultar duração\n\ndef get_duration(df, origem, destino, hour, col):\n  return list(df[\n    (\n      df['origem'] == origem\n    ) & (\n      df['destino'] == destino\n    ) & (\n      df['hour'] == hour\n    )\n  ][col])[0]\n\n\n\nTabela de comparação entre horários\n\ndef hours_comparison(df, i=0):\n  cols_route = ['origem', 'destino']\n  cols_duration = ['duration_in_traffic (value)', 'duration (value)']\n  # hours = list(df_inv['hour'].unique())\n  df_route = df[cols_route].groupby(cols_route, as_index=False).sum()\n  df_route_soon = df_route.copy()\n  df_route_late = df_route.copy()\n  df_route_soon['time'] = 'soon (6am)'\n  df_route_late['time'] = 'late (6pm)'\n  col_val_soon = list()\n  col_val_late = list()\n  for row in df_route.to_dict(orient='records'):\n    dur_6am = get_duration(df, row['origem'], row['destino'], 6, cols_duration[i])\n    dur_12h = get_duration(df, row['origem'], row['destino'], 12, cols_duration[i])\n    dur_6pm = get_duration(df, row['origem'], row['destino'], 18, cols_duration[i])\n    soon = (dur_12h - dur_6am) / dur_12h\n    late = (dur_6pm - dur_12h) / dur_12h\n    col_val_soon.append(soon)\n    col_val_late.append(late)\n  df_route_soon['diff_perct'] = col_val_soon\n  df_route_late['diff_perct'] = col_val_late\n  df_comp = pd.concat([df_route_soon, df_route_late])\n  df_comp = df_comp.sort_values(cols_route).reset_index(drop=True)\n  return df_comp\n\n\n# df_comp_traffic = hours_comparison(df_inv, 0)\n# df_comp_normal = hours_comparison(df_inv, 1)\n\n\n\nHistograma (tráfego)\n6(a|p)m = 12pm * diff_perct\n\n# px.histogram(df_comp_traffic, x='diff_perct', color='time', barmode='overlay', opacity=.5)\n\n\n\nHistograma (normal)\n6(a|p)m = 12pm + 12pm * diff_perct\n\n# px.histogram(df_comp_normal, x='diff_perct', color='time', barmode='overlay', opacity=.5)"
  },
  {
    "objectID": "sections/database_gmaps.html#comparação-com-osm",
    "href": "sections/database_gmaps.html#comparação-com-osm",
    "title": "Google Maps",
    "section": "Comparação com OSM",
    "text": "Comparação com OSM\n\nLendo tabela OSM\n\npath_dist = get_path('DISTANCIAS', 'distancias.jay')\ndf_osm = dt.fread(path_dist)\ndf_osm = df_osm.to_pandas()\ndf_osm\n\n\n\n\n\n  \n    \n      \n      origem\n      destino\n      distancia\n      tempo\n    \n  \n  \n    \n      0\n      110001\n      110001\n      0.000000\n      0.000000\n    \n    \n      1\n      110001\n      110002\n      309.050000\n      6.169056\n    \n    \n      2\n      110001\n      110003\n      399.499700\n      6.289056\n    \n    \n      3\n      110001\n      110004\n      81.201103\n      1.917750\n    \n    \n      4\n      110001\n      110005\n      391.704300\n      6.136361\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      31024895\n      530010\n      522200\n      161.728900\n      2.356000\n    \n    \n      31024896\n      530010\n      522205\n      382.708800\n      5.479556\n    \n    \n      31024897\n      530010\n      522220\n      161.603400\n      2.248944\n    \n    \n      31024898\n      530010\n      522230\n      190.000900\n      3.216083\n    \n    \n      31024899\n      530010\n      530010\n      0.000000\n      0.000000\n    \n  \n\n31024900 rows × 4 columns\n\n\n\n\n\nMesclando tabelas\nNormalizando o tempo entre elas (ambas em segundos).\n\ndf_dist = pd.merge(df_inv, df_osm, how='left', on=['origem', 'destino'])\ndf_dist['tempo'] = df_dist['tempo'] * 60 * 60\ndf_dist\n\nKeyboardInterrupt: \n\n\n\n\nColuna da diferença percentual\nOSM em relação ao GMAPS.\n\nreference = ['duration_in_traffic (value)', 'duration (value)']\ncompare = 'tempo'\ndf_dist['diff_pct_traffic'] = (df_dist[reference[0]] - df_dist[compare]) / df_dist[compare]\ndf_dist['diff_pct_normal'] = (df_dist[reference[1]] - df_dist[compare]) / df_dist[compare]\ndf_dist\n\n\n\n\n\n  \n    \n      \n      status\n      count\n      origem\n      destino\n      hour\n      mode\n      traffic_model\n      distance (value)\n      duration (value)\n      duration_in_traffic (value)\n      late_pct\n      distancia\n      tempo\n      diff_pct_traffic\n      diff_pct_normal\n    \n  \n  \n    \n      0\n      OK\n      2.0\n      110001.0\n      110002.0\n      18.0\n      driving\n      pessimistic\n      330612.0\n      18065.0\n      20190.0\n      0.117631\n      309.050000\n      22208.6\n      -0.090893\n      -0.186576\n    \n    \n      1\n      OK\n      12.0\n      110001.0\n      110004.0\n      18.0\n      driving\n      pessimistic\n      109937.0\n      6238.0\n      6757.0\n      0.083200\n      81.201103\n      6903.9\n      -0.021278\n      -0.096453\n    \n    \n      2\n      OK\n      2.0\n      110001.0\n      110009.0\n      18.0\n      driving\n      pessimistic\n      143458.0\n      8228.0\n      10193.0\n      0.238819\n      145.678200\n      8445.6\n      0.206901\n      -0.025765\n    \n    \n      3\n      OK\n      26.0\n      110001.0\n      110012.0\n      18.0\n      driving\n      pessimistic\n      153453.0\n      8366.0\n      9749.0\n      0.165312\n      130.770500\n      9172.1\n      0.062897\n      -0.087886\n    \n    \n      4\n      OK\n      3.0\n      110001.0\n      110013.0\n      18.0\n      driving\n      pessimistic\n      389010.0\n      21686.0\n      23707.0\n      0.093194\n      357.511000\n      25670.4\n      -0.076485\n      -0.155214\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      65933\n      OK\n      2.0\n      530010.0\n      522200.0\n      18.0\n      driving\n      pessimistic\n      163256.0\n      8350.0\n      13232.0\n      0.584671\n      161.728900\n      8481.6\n      0.560083\n      -0.015516\n    \n    \n      65934\n      ApiError\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n    \n    \n      65935\n      ApiError\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n    \n    \n      65936\n      ApiError\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n    \n    \n      65937\n      ApiError\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n    \n  \n\n65938 rows × 15 columns\n\n\n\n\n\nHistograma (tráfego)\ngmaps = osm + osm * diff_pct_traffic\n\npx.histogram(df_dist, x='diff_pct_traffic')\n\n\n                                                \n\n\n\n\nHistograma (normal)\ngmaps = osm + osm * diff_pct_normal\n\npx.histogram(df_dist, x='diff_pct_normal')"
  },
  {
    "objectID": "sections/database_indicadores.html",
    "href": "sections/database_indicadores.html",
    "title": "Indicadores",
    "section": "",
    "text": "import numpy as np\nimport pandas as pd\nfrom tqdm import tqdm\nfrom os import listdir\nfrom datatable import dt, f, by\nfrom selenium import webdriver\nfrom selenium.webdriver.common.by import By\nfrom selenium.webdriver.common.keys import Keys\nfrom utils import get_path, data_load"
  },
  {
    "objectID": "sections/database_indicadores.html#shape-de-cada-tabela",
    "href": "sections/database_indicadores.html#shape-de-cada-tabela",
    "title": "Indicadores",
    "section": "Shape de cada tabela",
    "text": "Shape de cada tabela\n(Linhas, Colunas)\n\npath_dir = get_path('INDICADORES', '')\nfiles = [path_dir+pth for pth in listdir(path_dir) if pth[-3:] == 'csv']\ndfs = [pd.read_csv(fl, encoding='latin1', sep=';') for fl in files]\nfor df in dfs: print(df.shape)\n\n(524, 184)\n(595, 184)\n(673, 184)\n(511, 184)\n(645, 184)\n(516, 184)\n(528, 184)\n(695, 184)\n(734, 184)\n(587, 184)"
  },
  {
    "objectID": "sections/database_indicadores.html#concatenando-tabelas",
    "href": "sections/database_indicadores.html#concatenando-tabelas",
    "title": "Indicadores",
    "section": "Concatenando tabelas",
    "text": "Concatenando tabelas\nConcatenação das tabelas em uma\n\ndf_indc = pd.concat(dfs)\ndf_indc\n\n\n\n\n\n  \n    \n      \n      CÓDIGO\n      Tipo Localidade\n      UF\n      CIR\n      Município\n      Número de municípios na Região de Saúde\n      Município de capital\n      Municípios que fazem parte da zona de fronteira - IBGE\n      Municípios que fazem parte da faixa de fronteira - IBGE\n      Municípios que fazem parte da fronteira estadual\n      ...\n      Porcentual de Despesas com Investimentos pelo Total de Despesas em Saúde (2014)\n      Porcentual de Tranferências SUS pelo Total de Despesas em Saúde (2014)\n      Porcentual de Recursos Próprios em Saúde - EC29 (2014)\n      Recursos de Transferências SUS por habitante (2014)\n      Despesas com Recursos Próprios em Saúde por habitante (2014)\n      Cobertura populacional estimada pelas equipes de Atenção Básica (2014)\n      % de população beneficiária de planos de saúde (Setembro/2015)\n      Porcentual de famílias beneficiárias do Programa Bolsa Família (2014)\n      Porcentual de população beneficiária do Programa Bolsa Família (2014)\n      Unnamed: 183\n    \n  \n  \n    \n      0\n      15.001\n      REGSAU\n      -\n      Araguaia\n      -\n      15\n      0\n      0\n      0\n      7\n      ...\n      8,53\n      54,61\n      18,83\n      213,11\n      161,66\n      63,90\n      5,15\n      34,43\n      31,59\n      NaN\n    \n    \n      1\n      15.002\n      REGSAU\n      -\n      Baixo Amazonas\n      -\n      14\n      0\n      3\n      5\n      5\n      ...\n      10,61\n      50,82\n      20,77\n      204,22\n      159,30\n      42,20\n      6,18\n      49,15\n      52,45\n      NaN\n    \n    \n      2\n      15.003\n      REGSAU\n      -\n      Carajás\n      -\n      17\n      0\n      0\n      0\n      9\n      ...\n      9,44\n      26,16\n      23,79\n      177,49\n      455,16\n      52,23\n      22,06\n      34,18\n      35,01\n      NaN\n    \n    \n      3\n      15.004\n      REGSAU\n      -\n      Lago de Tucuruí\n      -\n      6\n      0\n      0\n      0\n      0\n      ...\n      8,08\n      53,90\n      20,08\n      208,23\n      166,48\n      49,99\n      3,07\n      45,30\n      39,86\n      NaN\n    \n    \n      4\n      15.013\n      REGSAU\n      -\n      Marajó I\n      -\n      9\n      0\n      0\n      0\n      0\n      ...\n      20,06\n      51,15\n      17,21\n      158,85\n      111,80\n      24,19\n      1,02\n      60,93\n      61,59\n      NaN\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      582\n      171.780\n      MUNIC\n      Tocantins\n      Sudeste\n      Ponte Alta do Bom Jesus\n      15\n      Não\n      Não\n      Não\n      Sim\n      ...\n      8,43\n      34,79\n      28,54\n      199,83\n      369,45\n      100\n      2,02\n      51,97\n      46,93\n      NaN\n    \n    \n      583\n      171.800\n      MUNIC\n      Tocantins\n      Sudeste\n      Porto Alegre do Tocantins\n      15\n      Não\n      Não\n      Não\n      Não\n      ...\n      10,52\n      35,89\n      19,05\n      220,42\n      386,41\n      100\n      1,15\n      52,65\n      48,82\n      NaN\n    \n    \n      584\n      171.865\n      MUNIC\n      Tocantins\n      Sudeste\n      Rio da Conceição\n      15\n      Não\n      Não\n      Não\n      Sim\n      ...\n      13,86\n      20,14\n      15,52\n      162,11\n      538,36\n      100\n      0,81\n      47,84\n      48,19\n      NaN\n    \n    \n      585\n      172.090\n      MUNIC\n      Tocantins\n      Sudeste\n      Taguatinga\n      15\n      Não\n      Não\n      Não\n      Sim\n      ...\n      0,25\n      44,17\n      33,13\n      187,31\n      292,60\n      78,25\n      26,20\n      37,30\n      41,23\n      NaN\n    \n    \n      586\n      172.093\n      MUNIC\n      Tocantins\n      Sudeste\n      Taipas do Tocantins\n      15\n      Não\n      Não\n      Não\n      Não\n      ...\n      1,73\n      13,75\n      17,79\n      80,78\n      514,21\n      100\n      0,38\n      48,24\n      56,10\n      NaN\n    \n  \n\n6008 rows × 184 columns"
  },
  {
    "objectID": "sections/database_municipios.html",
    "href": "sections/database_municipios.html",
    "title": "Municípios",
    "section": "",
    "text": "import pandas as pd\nfrom utils import get_path"
  },
  {
    "objectID": "sections/database_municipios.html#municípios",
    "href": "sections/database_municipios.html#municípios",
    "title": "Municípios",
    "section": "Municípios",
    "text": "Municípios\nFonte Municípios\n\nCarregando tabela\n\nurl_muns = 'https://raw.githubusercontent.com/kelvins/Municipios-Brasileiros/main/csv/municipios.csv'\ndf_muns = pd.read_csv(url_muns)\ndf_muns\n\n\n\n\n\n  \n    \n      \n      codigo_ibge\n      nome\n      latitude\n      longitude\n      capital\n      codigo_uf\n      siafi_id\n      ddd\n      fuso_horario\n    \n  \n  \n    \n      0\n      5200050\n      Abadia de Goiás\n      -16.75730\n      -49.4412\n      0\n      52\n      1050\n      62\n      America/Sao_Paulo\n    \n    \n      1\n      3100104\n      Abadia dos Dourados\n      -18.48310\n      -47.3916\n      0\n      31\n      4001\n      34\n      America/Sao_Paulo\n    \n    \n      2\n      5200100\n      Abadiânia\n      -16.19700\n      -48.7057\n      0\n      52\n      9201\n      62\n      America/Sao_Paulo\n    \n    \n      3\n      3100203\n      Abaeté\n      -19.15510\n      -45.4444\n      0\n      31\n      4003\n      37\n      America/Sao_Paulo\n    \n    \n      4\n      1500107\n      Abaetetuba\n      -1.72183\n      -48.8788\n      0\n      15\n      401\n      91\n      America/Sao_Paulo\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      5565\n      2933604\n      Xique-Xique\n      -10.82300\n      -42.7245\n      0\n      29\n      3971\n      74\n      America/Sao_Paulo\n    \n    \n      5566\n      2517407\n      Zabelê\n      -8.07901\n      -37.1057\n      0\n      25\n      542\n      83\n      America/Sao_Paulo\n    \n    \n      5567\n      3557154\n      Zacarias\n      -21.05060\n      -50.0552\n      0\n      35\n      2973\n      18\n      America/Sao_Paulo\n    \n    \n      5568\n      2114007\n      Zé Doca\n      -3.27014\n      -45.6553\n      0\n      21\n      1287\n      98\n      America/Sao_Paulo\n    \n    \n      5569\n      4219853\n      Zortéa\n      -27.45210\n      -51.5520\n      0\n      42\n      950\n      49\n      America/Sao_Paulo\n    \n  \n\n5570 rows × 9 columns\n\n\n\n\n\nSelecionando colunas\n\ncols_muns = [\n  'codigo_ibge',\n  'nome',\n  'capital',\n  'codigo_uf',\n  'latitude',\n  'longitude',\n]\n\n\ndf_muns = df_muns[cols_muns]\ndf_muns\n\n\n\n\n\n  \n    \n      \n      codigo_ibge\n      nome\n      capital\n      codigo_uf\n      latitude\n      longitude\n    \n  \n  \n    \n      0\n      5200050\n      Abadia de Goiás\n      0\n      52\n      -16.75730\n      -49.4412\n    \n    \n      1\n      3100104\n      Abadia dos Dourados\n      0\n      31\n      -18.48310\n      -47.3916\n    \n    \n      2\n      5200100\n      Abadiânia\n      0\n      52\n      -16.19700\n      -48.7057\n    \n    \n      3\n      3100203\n      Abaeté\n      0\n      31\n      -19.15510\n      -45.4444\n    \n    \n      4\n      1500107\n      Abaetetuba\n      0\n      15\n      -1.72183\n      -48.8788\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      5565\n      2933604\n      Xique-Xique\n      0\n      29\n      -10.82300\n      -42.7245\n    \n    \n      5566\n      2517407\n      Zabelê\n      0\n      25\n      -8.07901\n      -37.1057\n    \n    \n      5567\n      3557154\n      Zacarias\n      0\n      35\n      -21.05060\n      -50.0552\n    \n    \n      5568\n      2114007\n      Zé Doca\n      0\n      21\n      -3.27014\n      -45.6553\n    \n    \n      5569\n      4219853\n      Zortéa\n      0\n      42\n      -27.45210\n      -51.5520\n    \n  \n\n5570 rows × 6 columns"
  },
  {
    "objectID": "sections/database_municipios.html#unidades-federativas",
    "href": "sections/database_municipios.html#unidades-federativas",
    "title": "Municípios",
    "section": "Unidades Federativas",
    "text": "Unidades Federativas\nFonte Unidades Federativas\n\nCarregando tabela\n\nurl_ufs = 'https://sistemasweb.agricultura.gov.br/manuais/Manual_PGA_WS/322CodigoIBGESigladaUnidadeFeder.html'\ndf_ufs = pd.read_html(url_ufs)[0]\ndf_ufs.columns = ['codigo_uf', 'Sigla']\ndf_ufs\n\n\n\n\n\n  \n    \n      \n      codigo_uf\n      Sigla\n    \n  \n  \n    \n      0\n      11\n      RO\n    \n    \n      1\n      12\n      AC\n    \n    \n      2\n      13\n      AM\n    \n    \n      3\n      14\n      RR\n    \n    \n      4\n      15\n      PA\n    \n    \n      5\n      16\n      AP\n    \n    \n      6\n      17\n      TO\n    \n    \n      7\n      21\n      MA\n    \n    \n      8\n      22\n      PI\n    \n    \n      9\n      23\n      CE\n    \n    \n      10\n      24\n      RN\n    \n    \n      11\n      25\n      PB\n    \n    \n      12\n      26\n      PE\n    \n    \n      13\n      27\n      AL\n    \n    \n      14\n      28\n      SE\n    \n    \n      15\n      29\n      BA\n    \n    \n      16\n      31\n      MG\n    \n    \n      17\n      32\n      ES\n    \n    \n      18\n      33\n      RJ\n    \n    \n      19\n      35\n      SP\n    \n    \n      20\n      41\n      PR\n    \n    \n      21\n      42\n      SC\n    \n    \n      22\n      43\n      RS\n    \n    \n      23\n      50\n      MS\n    \n    \n      24\n      51\n      MT\n    \n    \n      25\n      52\n      GO\n    \n    \n      26\n      53\n      DF\n    \n    \n      27\n      99\n      BR"
  },
  {
    "objectID": "sections/database_municipios.html#regiões-do-brasil",
    "href": "sections/database_municipios.html#regiões-do-brasil",
    "title": "Municípios",
    "section": "Regiões do Brasil",
    "text": "Regiões do Brasil\nFonte Regiões do Brasil\n\nCarregando tabela\n\nurl_regs = 'https://www.estadosecapitaisdobrasil.com/'\ndf_regs = pd.read_html(url_regs)[0]\ndf_regs\n\n\n\n\n\n  \n    \n      \n      Bandeira\n      Estado\n      Sigla\n      Capital\n      Região\n    \n  \n  \n    \n      0\n      NaN\n      Acre\n      AC\n      Rio Branco\n      Norte\n    \n    \n      1\n      NaN\n      Alagoas\n      AL\n      Maceió\n      Nordeste\n    \n    \n      2\n      NaN\n      Amapá\n      AP\n      Macapá\n      Norte\n    \n    \n      3\n      NaN\n      Amazonas\n      AM\n      Manaus\n      Norte\n    \n    \n      4\n      NaN\n      Bahia\n      BA\n      Salvador\n      Nordeste\n    \n    \n      5\n      NaN\n      Ceará\n      CE\n      Fortaleza\n      Nordeste\n    \n    \n      6\n      NaN\n      Distrito Federal\n      DF\n      Brasília\n      Centro-Oeste\n    \n    \n      7\n      NaN\n      Espírito Santo\n      ES\n      Vitória\n      Sudeste\n    \n    \n      8\n      NaN\n      Goiás\n      GO\n      Goiânia\n      Centro-Oeste\n    \n    \n      9\n      NaN\n      Maranhão\n      MA\n      São Luís\n      Nordeste\n    \n    \n      10\n      NaN\n      Mato Grosso\n      MT\n      Cuiabá\n      Centro-Oeste\n    \n    \n      11\n      NaN\n      Mato Grosso do Sul\n      MS\n      Campo Grande\n      Centro-Oeste\n    \n    \n      12\n      NaN\n      Minas Gerais\n      MG\n      Belo Horizonte\n      Sudeste\n    \n    \n      13\n      NaN\n      Pará\n      PA\n      Belém\n      Norte\n    \n    \n      14\n      NaN\n      Paraíba\n      PB\n      João Pessoa\n      Nordeste\n    \n    \n      15\n      NaN\n      Paraná\n      PR\n      Curitiba\n      Sul\n    \n    \n      16\n      NaN\n      Pernambuco\n      PE\n      Recife\n      Nordeste\n    \n    \n      17\n      NaN\n      Piauí\n      PI\n      Teresina\n      Nordeste\n    \n    \n      18\n      NaN\n      Rio de Janeiro\n      RJ\n      Rio de Janeiro\n      Sudeste\n    \n    \n      19\n      NaN\n      Rio Grande do Norte\n      RN\n      Natal\n      Nordeste\n    \n    \n      20\n      NaN\n      Rio Grande do Sul\n      RS\n      Porto Alegre\n      Sul\n    \n    \n      21\n      NaN\n      Rondônia\n      RO\n      Porto Velho\n      Norte\n    \n    \n      22\n      NaN\n      Roraima\n      RR\n      Boa Vista\n      Norte\n    \n    \n      23\n      NaN\n      Santa Catarina\n      SC\n      Florianópolis\n      Sul\n    \n    \n      24\n      NaN\n      São Paulo\n      SP\n      São Paulo\n      Sudeste\n    \n    \n      25\n      NaN\n      Sergipe\n      SE\n      Aracaju\n      Nordeste\n    \n    \n      26\n      NaN\n      Tocantins\n      TO\n      Palmas\n      Norte\n    \n  \n\n\n\n\n\n\nSelecionando colunas\n\ncols_regs = [\n  'Sigla',\n  'Estado',\n  'Região',\n]\n\n\ndf_regs = df_regs[cols_regs]\ndf_regs\n\n\n\n\n\n  \n    \n      \n      Sigla\n      Estado\n      Região\n    \n  \n  \n    \n      0\n      AC\n      Acre\n      Norte\n    \n    \n      1\n      AL\n      Alagoas\n      Nordeste\n    \n    \n      2\n      AP\n      Amapá\n      Norte\n    \n    \n      3\n      AM\n      Amazonas\n      Norte\n    \n    \n      4\n      BA\n      Bahia\n      Nordeste\n    \n    \n      5\n      CE\n      Ceará\n      Nordeste\n    \n    \n      6\n      DF\n      Distrito Federal\n      Centro-Oeste\n    \n    \n      7\n      ES\n      Espírito Santo\n      Sudeste\n    \n    \n      8\n      GO\n      Goiás\n      Centro-Oeste\n    \n    \n      9\n      MA\n      Maranhão\n      Nordeste\n    \n    \n      10\n      MT\n      Mato Grosso\n      Centro-Oeste\n    \n    \n      11\n      MS\n      Mato Grosso do Sul\n      Centro-Oeste\n    \n    \n      12\n      MG\n      Minas Gerais\n      Sudeste\n    \n    \n      13\n      PA\n      Pará\n      Norte\n    \n    \n      14\n      PB\n      Paraíba\n      Nordeste\n    \n    \n      15\n      PR\n      Paraná\n      Sul\n    \n    \n      16\n      PE\n      Pernambuco\n      Nordeste\n    \n    \n      17\n      PI\n      Piauí\n      Nordeste\n    \n    \n      18\n      RJ\n      Rio de Janeiro\n      Sudeste\n    \n    \n      19\n      RN\n      Rio Grande do Norte\n      Nordeste\n    \n    \n      20\n      RS\n      Rio Grande do Sul\n      Sul\n    \n    \n      21\n      RO\n      Rondônia\n      Norte\n    \n    \n      22\n      RR\n      Roraima\n      Norte\n    \n    \n      23\n      SC\n      Santa Catarina\n      Sul\n    \n    \n      24\n      SP\n      São Paulo\n      Sudeste\n    \n    \n      25\n      SE\n      Sergipe\n      Nordeste\n    \n    \n      26\n      TO\n      Tocantins\n      Norte"
  },
  {
    "objectID": "sections/database_municipios.html#unindo-tabelas",
    "href": "sections/database_municipios.html#unindo-tabelas",
    "title": "Municípios",
    "section": "Unindo tabelas",
    "text": "Unindo tabelas\nMerge\n\ndf_munic = df_muns.copy()\ndf_munic['codigo_ibge'] = df_munic['codigo_ibge'].apply(lambda x: int(str(x)[:6]))\ndf_munic = df_munic.merge(df_ufs, how='left', on='codigo_uf')\ndf_munic = df_munic.merge(df_regs, how='left', on='Sigla')\ndf_munic\n\n\n\n\n\n  \n    \n      \n      codigo_ibge\n      nome\n      capital\n      codigo_uf\n      latitude\n      longitude\n      Sigla\n      Estado\n      Região\n    \n  \n  \n    \n      0\n      520005\n      Abadia de Goiás\n      0\n      52\n      -16.75730\n      -49.4412\n      GO\n      Goiás\n      Centro-Oeste\n    \n    \n      1\n      310010\n      Abadia dos Dourados\n      0\n      31\n      -18.48310\n      -47.3916\n      MG\n      Minas Gerais\n      Sudeste\n    \n    \n      2\n      520010\n      Abadiânia\n      0\n      52\n      -16.19700\n      -48.7057\n      GO\n      Goiás\n      Centro-Oeste\n    \n    \n      3\n      310020\n      Abaeté\n      0\n      31\n      -19.15510\n      -45.4444\n      MG\n      Minas Gerais\n      Sudeste\n    \n    \n      4\n      150010\n      Abaetetuba\n      0\n      15\n      -1.72183\n      -48.8788\n      PA\n      Pará\n      Norte\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      5565\n      293360\n      Xique-Xique\n      0\n      29\n      -10.82300\n      -42.7245\n      BA\n      Bahia\n      Nordeste\n    \n    \n      5566\n      251740\n      Zabelê\n      0\n      25\n      -8.07901\n      -37.1057\n      PB\n      Paraíba\n      Nordeste\n    \n    \n      5567\n      355715\n      Zacarias\n      0\n      35\n      -21.05060\n      -50.0552\n      SP\n      São Paulo\n      Sudeste\n    \n    \n      5568\n      211400\n      Zé Doca\n      0\n      21\n      -3.27014\n      -45.6553\n      MA\n      Maranhão\n      Nordeste\n    \n    \n      5569\n      421985\n      Zortéa\n      0\n      42\n      -27.45210\n      -51.5520\n      SC\n      Santa Catarina\n      Sul\n    \n  \n\n5570 rows × 9 columns"
  },
  {
    "objectID": "sections/database_municipios.html#ajustando-colunas",
    "href": "sections/database_municipios.html#ajustando-colunas",
    "title": "Municípios",
    "section": "Ajustando Colunas",
    "text": "Ajustando Colunas\n\ncols_munic = {\n  'codigo_ibge': 'cod_municipio',\n  'nome': 'nome_municipio',\n  'capital': 'capital',\n  'Sigla': 'uf',\n  'codigo_uf': 'cod_uf',\n  'Estado': 'nome_uf',\n  'Região': 'regiao',\n  'latitude': 'latitude',\n  'longitude': 'longitude',\n}\n\n\ndf_munic = df_munic[list(cols_munic)]\ndf_munic = df_munic.rename(columns=cols_munic)\ndf_munic\n\n\n\n\n\n  \n    \n      \n      cod_municipio\n      nome_municipio\n      capital\n      uf\n      cod_uf\n      nome_uf\n      regiao\n      latitude\n      longitude\n    \n  \n  \n    \n      0\n      520005\n      Abadia de Goiás\n      0\n      GO\n      52\n      Goiás\n      Centro-Oeste\n      -16.75730\n      -49.4412\n    \n    \n      1\n      310010\n      Abadia dos Dourados\n      0\n      MG\n      31\n      Minas Gerais\n      Sudeste\n      -18.48310\n      -47.3916\n    \n    \n      2\n      520010\n      Abadiânia\n      0\n      GO\n      52\n      Goiás\n      Centro-Oeste\n      -16.19700\n      -48.7057\n    \n    \n      3\n      310020\n      Abaeté\n      0\n      MG\n      31\n      Minas Gerais\n      Sudeste\n      -19.15510\n      -45.4444\n    \n    \n      4\n      150010\n      Abaetetuba\n      0\n      PA\n      15\n      Pará\n      Norte\n      -1.72183\n      -48.8788\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      5565\n      293360\n      Xique-Xique\n      0\n      BA\n      29\n      Bahia\n      Nordeste\n      -10.82300\n      -42.7245\n    \n    \n      5566\n      251740\n      Zabelê\n      0\n      PB\n      25\n      Paraíba\n      Nordeste\n      -8.07901\n      -37.1057\n    \n    \n      5567\n      355715\n      Zacarias\n      0\n      SP\n      35\n      São Paulo\n      Sudeste\n      -21.05060\n      -50.0552\n    \n    \n      5568\n      211400\n      Zé Doca\n      0\n      MA\n      21\n      Maranhão\n      Nordeste\n      -3.27014\n      -45.6553\n    \n    \n      5569\n      421985\n      Zortéa\n      0\n      SC\n      42\n      Santa Catarina\n      Sul\n      -27.45210\n      -51.5520\n    \n  \n\n5570 rows × 9 columns"
  },
  {
    "objectID": "sections/database_sih.html",
    "href": "sections/database_sih.html",
    "title": "SIH",
    "section": "",
    "text": "from utils import data_load\nfrom datatable import dt, f"
  },
  {
    "objectID": "sections/database_sih.html#filtro-de-colunas",
    "href": "sections/database_sih.html#filtro-de-colunas",
    "title": "SIH",
    "section": "Filtro de Colunas",
    "text": "Filtro de Colunas\n\ncols_sih = {\n  'ano_internacao': 'ano',\n  'PROC_REA': 'parto_normal',\n  'CNES': 'cnes',\n  'def_idade_anos': 'idade',\n  'int_codigo_adotado': 'hosp_cod_municipio',\n  'res_codigo_adotado': 'cod_municipio',\n}"
  },
  {
    "objectID": "sections/database_sih.html#filtro-de-linhas",
    "href": "sections/database_sih.html#filtro-de-linhas",
    "title": "SIH",
    "section": "Filtro de Linhas",
    "text": "Filtro de Linhas\n\ndef filter_sih(df, cols):\n  cols = list(cols.values())[:-1]\n  cols = [c for c in cols if c in df.names]\n  df_filtered = df[\n    (\n      (f['ano'] > 2009) & (f['ano'] < 2020)\n    ) & (\n      (f['idade'] > 9) & (f['idade'] < 50)\n    ) & (\n      (f['parto_normal'] == 310010039) | (f['parto_normal'] == 411010034)\n    ) & (\n      ((f['hosp_cod_municipio'] != None) & (f['cod_municipio'] != None))\n    ) & (\n      (f['cnes'] != None)\n    ), cols]\n  return df_filtered"
  },
  {
    "objectID": "sections/database_sih.html#carregando-tabela",
    "href": "sections/database_sih.html#carregando-tabela",
    "title": "SIH",
    "section": "Carregando tabela",
    "text": "Carregando tabela\n\n# path_zip_sih = '/Volumes/SanDisk/Databases/SIH/SIHSUS.zip'\npath_zip_sih = input('Qual o caminho para o arquivo zip da base de dados SIHSUS?')\n\n\ndf_sih = data_load(path_zip_sih, cols_sih, filter_sih)\ndf_sih\n\n100%|██████████| 4400/4400 [20:32<00:00,  3.57it/s]\n\n\n\n\n  \n  \n    anoparto_normalcnesidadehosp_cod_municipiocod_municipio\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    02010310010039200102023120005120005\n    12010310010039200073328120040120040\n    22010310010039200073338120040120040\n    32010310010039200073316120040120040\n    42010310010039200073326120040120040\n    52010310010039200073326120040120040\n    62010310010039200073327120040120040\n    72010310010039200102031120005120005\n    82010310010039200073330120040120040\n    92010310010039200073318120040120040\n    102010310010039200102028120005120005\n    112010310010039200073332120040120038\n    122010310010039200073330120040120040\n    132010310010039200073326120040120001\n    142010310010039200073326120040120040\n    ⋮⋮⋮⋮⋮⋮⋮\n    17,106,3962019411010034276564024170930171840\n    17,106,3972019411010034276564027170930171670\n    17,106,3982019411010034276564022170930171670\n    17,106,3992019411010034276564025170930170930\n    17,106,4002019411010034275514921171610171250\n  \n  \n  \n    17,106,401 rows × 6 columns\n  \n\n\n\n100%|██████████| 4400/4400 [20:32<00:00, 3.57it/s]"
  },
  {
    "objectID": "sections/deslc_uf.html",
    "href": "sections/deslc_uf.html",
    "title": "Deslocamento de Gestantes",
    "section": "",
    "text": "output_counts = get_path('GESTANTES', 'contagens.csv.gzip')\n# df_counts = dt.fread(output_counts)\ndf_counts = pd.read_csv(output_counts, dtype={'identificador': str})\ndf_counts\n\n\n\n\n\n  \n    \n      \n      bienio\n      parto_normal\n      codigo\n      escala\n      nome\n      identificador\n      criticidade\n      count\n      total\n      percent\n    \n  \n  \n    \n      0\n      0\n      0\n      CO\n      regiao\n      Centro-Oeste\n      CO\n      0\n      85068\n      445888\n      19.078334\n    \n    \n      1\n      1\n      0\n      CO\n      regiao\n      Centro-Oeste\n      CO\n      0\n      100995\n      445888\n      22.650307\n    \n    \n      2\n      0\n      1\n      CO\n      regiao\n      Centro-Oeste\n      CO\n      0\n      141604\n      445888\n      31.757751\n    \n    \n      3\n      1\n      1\n      CO\n      regiao\n      Centro-Oeste\n      CO\n      0\n      118221\n      445888\n      26.513609\n    \n    \n      4\n      0\n      0\n      CO\n      regiao\n      Centro-Oeste\n      CO\n      1\n      8372\n      51491\n      16.259152\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      93060\n      1\n      0\n      SL/SC/42016/421870/2491710\n      cnes\n      NaN\n      2491710\n      2\n      59\n      207\n      28.502415\n    \n    \n      93061\n      0\n      1\n      SL/SC/42016/421870/2491710\n      cnes\n      NaN\n      2491710\n      2\n      14\n      207\n      6.763285\n    \n    \n      93062\n      1\n      1\n      SL/SC/42016/421870/2491710\n      cnes\n      NaN\n      2491710\n      2\n      125\n      207\n      60.386473\n    \n    \n      93063\n      1\n      1\n      SL/SC/42016/421870/2491710\n      cnes\n      NaN\n      2491710\n      3\n      2\n      2\n      100.000000\n    \n    \n      93064\n      1\n      1\n      SL/SC/42016/421870/2491710\n      cnes\n      NaN\n      2491710\n      4\n      2\n      2\n      100.000000\n    \n  \n\n93065 rows × 10 columns\n\n\n\n\ndf_counts[df_counts['codigo'].str.contains('/RJ')]\n\n\n\n\n\n  \n    \n      \n      bienio\n      parto_normal\n      codigo\n      escala\n      nome\n      identificador\n      criticidade\n      count\n      total\n      percent\n    \n  \n  \n    \n      530\n      0\n      0\n      SD/RJ\n      uf\n      Rio de Janeiro\n      RJ\n      0\n      31475\n      338465\n      9.299337\n    \n    \n      531\n      1\n      0\n      SD/RJ\n      uf\n      Rio de Janeiro\n      RJ\n      0\n      64571\n      338465\n      19.077600\n    \n    \n      532\n      0\n      1\n      SD/RJ\n      uf\n      Rio de Janeiro\n      RJ\n      0\n      126306\n      338465\n      37.317300\n    \n    \n      533\n      1\n      1\n      SD/RJ\n      uf\n      Rio de Janeiro\n      RJ\n      0\n      116113\n      338465\n      34.305763\n    \n    \n      534\n      0\n      0\n      SD/RJ\n      uf\n      Rio de Janeiro\n      RJ\n      1\n      7153\n      73487\n      9.733694\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      84206\n      0\n      0\n      SD/RJ/33009/330590/3584968\n      cnes\n      HOSPITAL FRANCISCO LIMONGI\n      3584968\n      0\n      4\n      49\n      8.163265\n    \n    \n      84207\n      0\n      1\n      SD/RJ/33009/330590/3584968\n      cnes\n      HOSPITAL FRANCISCO LIMONGI\n      3584968\n      0\n      39\n      49\n      79.591837\n    \n    \n      84208\n      1\n      1\n      SD/RJ/33009/330590/3584968\n      cnes\n      HOSPITAL FRANCISCO LIMONGI\n      3584968\n      0\n      6\n      49\n      12.244898\n    \n    \n      84209\n      1\n      1\n      SD/RJ/33009/330590/3584968\n      cnes\n      HOSPITAL FRANCISCO LIMONGI\n      3584968\n      1\n      1\n      1\n      100.000000\n    \n    \n      84210\n      1\n      1\n      SD/RJ/33009/330590/3584968\n      cnes\n      HOSPITAL FRANCISCO LIMONGI\n      3584968\n      2\n      1\n      1\n      100.000000\n    \n  \n\n2376 rows × 10 columns"
  },
  {
    "objectID": "sections/result_dist.html",
    "href": "sections/result_dist.html",
    "title": "Distância percorrida",
    "section": "",
    "text": "import sys\nimport numpy as np\nimport pandas as pd\nimport plotly.graph_objects as go\n\nfrom tqdm import tqdm\nfrom datatable import dt, f, by\n\nfrom itables import init_notebook_mode\ninit_notebook_mode(all_interactive=True)\n\nfrom plotly import express as px, io as pio\npd.options.plotting.backend = 'plotly'\npio.renderers.default = 'plotly_mimetype+notebook_connected'\n\nfrom utils import get_path, data_load\nsys.path.insert(0, '../')\nfrom secret import API_KEY"
  },
  {
    "objectID": "sections/result_dist.html#procedimentos",
    "href": "sections/result_dist.html#procedimentos",
    "title": "Distância percorrida",
    "section": "Procedimentos",
    "text": "Procedimentos\n\nCarregando tabela\n\npath_proc = get_path('GESTANTES', f'procs.csv.gzip')\ndf_proc = df_proc_bienio = pd.read_csv(path_proc)\n# df_proc = df_proc.fillna(0)\ndf_proc\n\n\n\n\n\n    \n      \n      bienio\n      parto_normal\n      codigo_origem\n      codigo_destino\n      origem\n      destino\n      distance (osm)\n      duration (osm)\n      distance (gmaps)\n      duration (gmaps)\n      duration_traffic (gmaps)\n      criticidade\n      capitais\n      socioecon\n      origem_latitude\n      origem_longitude\n      destino_latitude\n      destino_longitude\n      count\n    \n  Loading... (need help?)"
  },
  {
    "objectID": "sections/result_dist.html#contagens",
    "href": "sections/result_dist.html#contagens",
    "title": "Distância percorrida",
    "section": "Contagens",
    "text": "Contagens\n\nCarregando tabela\n\npath_counts = get_path('GESTANTES', 'contagens.csv.gzip')\ndf_counts = pd.read_csv(path_counts, low_memory=False)\ndf_counts\n\n\n\n\n\n    \n      \n      parto_normal\n      bienio\n      escala\n      codigo\n      identificador\n      nome\n      criticidade\n      count\n      total\n      percent\n    \n  Loading... (need help?)"
  },
  {
    "objectID": "sections/result_dist.html#média-ponderada",
    "href": "sections/result_dist.html#média-ponderada",
    "title": "Distância percorrida",
    "section": "Média ponderada",
    "text": "Média ponderada"
  },
  {
    "objectID": "sections/result_occurences.html",
    "href": "sections/result_occurences.html",
    "title": "Ocorrências",
    "section": "",
    "text": "import sys\nimport numpy as np\nimport pandas as pd\nimport plotly.graph_objects as go\n\nfrom datatable import dt, f, by\n\nfrom itables import init_notebook_mode\ninit_notebook_mode(all_interactive=True)\n\nfrom plotly import express as px, io as pio\npd.options.plotting.backend = 'plotly'\npio.renderers.default = 'plotly_mimetype+notebook_connected'\n\nfrom utils import get_path, data_load\nsys.path.insert(0, '../')\nfrom secret import API_KEY"
  },
  {
    "objectID": "sections/result_occurences.html#procedimentos",
    "href": "sections/result_occurences.html#procedimentos",
    "title": "Ocorrências",
    "section": "Procedimentos",
    "text": "Procedimentos\n\nCarregando tabela\n\npath_proc = get_path('GESTANTES', f'procs.csv.gzip')\ndf_proc_bienio = pd.read_csv(path_proc)\ndf_proc_bienio\n\n\n\n\n\n    \n      \n      bienio\n      parto_normal\n      codigo_origem\n      codigo_destino\n      origem\n      destino\n      mode\n      traffic_model\n      hour\n      distance\n      distancia (km)\n      tempo (min)\n      criticidade\n      capitais\n      socioecon\n      origem_latitude\n      origem_longitude\n      destino_latitude\n      destino_longitude\n      count\n    \n  Loading... (need help?)"
  },
  {
    "objectID": "sections/result_occurences.html#localidades",
    "href": "sections/result_occurences.html#localidades",
    "title": "Ocorrências",
    "section": "Localidades",
    "text": "Localidades\n\nCarregando tabela\n\npath_locs = get_path('LOCALIDADES', 'localidades.csv.gzip')\ndf_locs = pd.read_csv(path_locs)\ndf_locs\n\n\n\n\n\n    \n      \n      codigo\n      cod_municipio\n      nome_municipio\n      capital\n      cod_regiao_saude\n      nome_regiao_saude\n      cod_uf\n      uf\n      nome_uf\n      sigla_regiao\n      nome_regiao\n      socioecon\n      latitude\n      longitude\n    \n  Loading... (need help?)"
  },
  {
    "objectID": "sections/result_occurences.html#agrupando-brasil",
    "href": "sections/result_occurences.html#agrupando-brasil",
    "title": "Ocorrências",
    "section": "Agrupando Brasil",
    "text": "Agrupando Brasil\n\ndef group_brasil(df):\n  df_brasil = df.copy()\n  df_brasil['Localidade'] = 'BRASIL'\n  df_brasil = df_brasil.groupby(\n    by=list(df_brasil.columns)[:-1], as_index=False).sum()\n  df_brasil = pd.concat([df, df_brasil])\n  return df_brasil"
  },
  {
    "objectID": "sections/result_occurences.html#selecionar-e-agrupar",
    "href": "sections/result_occurences.html#selecionar-e-agrupar",
    "title": "Ocorrências",
    "section": "Selecionar e agrupar",
    "text": "Selecionar e agrupar\n\ndef select_and_group(df_proc, df_locs, cols, loc='nome_regiao', ref='codigo_origem'):\n  cols_proc = cols.copy()\n  cols_proc.insert(-1, ref)\n  cols_locs = ['codigo', loc]\n  df = df_proc[cols_proc].merge(df_locs[cols_locs], left_on=ref, right_on='codigo', how='left')\n  cols_proc.insert(-1, loc)\n  df = df[cols_proc]\n  df = df.drop(ref, axis=1)\n  df = df.groupby(by=list(df.columns)[:-1], as_index=False).sum()\n  df['bienio'] = df['bienio'].map(\n    {0: '2010-2011', 1: '2018-2019'})\n  df['parto_normal'] = df['parto_normal'].map(\n    {0: 'Parto Cesárea', 1: 'Parto Normal'})\n  df = df.rename(columns={\n    'bienio': 'Biênio',\n    'parto_normal': 'Parto',\n    'criticidade': 'Criticidade',\n    loc: 'Localidade',\n    'count': 'Procedimentos',\n  })\n  df = group_brasil(df)\n  df = df.pivot_table('Procedimentos', list(df.columns)[1:-1], 'Biênio', sort=True)\n  df = df.reset_index(level=df.index.names)\n  df = pd.DataFrame(df.to_dict())\n  return df"
  },
  {
    "objectID": "sections/result_occurences.html#somando-ambos-tipos-de-parto",
    "href": "sections/result_occurences.html#somando-ambos-tipos-de-parto",
    "title": "Ocorrências",
    "section": "Somando ambos tipos de parto",
    "text": "Somando ambos tipos de parto\n\ndef add_total(df):\n  df_total = df[list(df.columns)[1:]]\n  df_total = df_total.groupby(by='Localidade', as_index=False).sum()\n  df_total['Parto'] = 'Ambos'\n  df = pd.concat([df, df_total])\n  df = df.sort_values(by=['Localidade', 'Parto'])\n  df = df.reset_index(drop=True)\n  return df"
  },
  {
    "objectID": "sections/result_occurences.html#criticidade",
    "href": "sections/result_occurences.html#criticidade",
    "title": "Ocorrências",
    "section": "Criticidade",
    "text": "Criticidade\n\ndef critic(df, critic_level=1):\n  df_num = df[df['Criticidade'] >= critic_level].copy()\n  df_den = df[df['Criticidade'] >= critic_level - 1].copy()\n  def group(df):\n      df = df.drop('Criticidade', axis=1)\n      df = df.groupby(\n        by=list(df.columns)[:-2],\n        as_index=False\n      ).sum()\n      return df\n  df_num = group(df_num)\n  df_den = group(df_den)\n  df_critic = pd.merge(\n    df_num, df_den,\n    how='left', on=list(df_num.columns)[:-2],\n    suffixes=['_num', '_den'])\n  df_critic = add_total(df_critic)\n  df_critic['2010-2011'] = round(df_critic['2010-2011_num'] / df_critic['2010-2011_den'] * 100, 2)\n  df_critic['2018-2019'] = round(df_critic['2018-2019_num'] / df_critic['2018-2019_den'] * 100, 2)\n  df_critic = df_critic.sort_values(by=['Localidade', 'Parto'])\n  return df_critic"
  },
  {
    "objectID": "sections/result_occurences.html#gerar-figura-plot-barras",
    "href": "sections/result_occurences.html#gerar-figura-plot-barras",
    "title": "Ocorrências",
    "section": "Gerar figura plot barras",
    "text": "Gerar figura plot barras\n\ndef fig_count_partos(df):\n  fig = go.Figure()\n  colors = ['#31A885','#DD6F1C']\n  items = ['2010-2011','2018-2019']\n  for item, color in zip(items, colors):\n      fig.add_trace(\n        go.Bar(\n          x=df['Parto'], y=df[item],\n          marker_color=color,\n          # text=df[item], textposition='auto',\n          name=item,))\n  buttons = []\n  for loc in df['Localidade'].unique():\n      buttons.append(dict(\n        method='update',\n        label=loc,\n        args=[{\n          'y': df[df['Localidade'] == loc][items].T.values\n        }]))\n  # button_brasil = dict(\n  #   method='update',\n  #   label='Brasil',\n  #   args=[{'y': df[items].T.values}])\n  buttons = sorted(buttons, key=lambda d: d['label'])\n  # buttons.insert(0, button_brasil)\n  updatemenu=[]\n  your_menu=dict()\n  updatemenu.append(your_menu)\n  updatemenu[0]['buttons']=buttons\n  updatemenu[0]['direction']='down'\n  updatemenu[0]['active']=-1\n  updatemenu[0]['showactive']=True\n  fig.update_layout(\n    title='Número total de partos realizados no SUS',\n    legend_title='Biênio',\n    updatemenus=updatemenu)\n  return fig"
  },
  {
    "objectID": "sections/result_occurences.html#partos-no-sus",
    "href": "sections/result_occurences.html#partos-no-sus",
    "title": "Ocorrências",
    "section": "Partos no SUS",
    "text": "Partos no SUS\n\ncols_proc = ['bienio', 'parto_normal', 'count']\n\n\nLocalidade: Região\n\nDatatable\n\ndf_regiao = add_total(\n  select_and_group(\n    df_proc_bienio, df_locs, cols_proc, loc='nome_regiao'))\ndf_regiao\n\n\n\n\n\n    \n      \n      Parto\n      Localidade\n      2010-2011\n      2018-2019\n    \n  Loading... (need help?)\n\n\n\n\n\n\nBarplot\n\nfig_regiao = fig_count_partos(df_regiao)\nfig_regiao.show()\n\n\n                                                \n\n\n\n\n\nLocalidade: Unidade Federativa\n\nDatatable\n\ndf_uf = add_total(\n  select_and_group(\n    df_proc_bienio, df_locs, cols_proc, loc='nome_uf'))\ndf_uf\n\n\n\n\n\n    \n      \n      Parto\n      Localidade\n      2010-2011\n      2018-2019\n    \n  Loading... (need help?)\n\n\n\n\n\n\nBarplot\n\nfig_uf = fig_count_partos(df_uf)\nfig_uf.show()"
  },
  {
    "objectID": "sections/result_occurences.html#deslocamento-município",
    "href": "sections/result_occurences.html#deslocamento-município",
    "title": "Ocorrências",
    "section": "Deslocamento % (município)",
    "text": "Deslocamento % (município)\n\nnumerador= município diferente entre residência e hospital\ndenominador= todos os procedimentos\n\n\ncols_critic = ['bienio', 'parto_normal', 'criticidade', 'count']\n\n\nLocalidade: Região\n\nDatatable\n\ndf_mun_regiao = critic(\n  select_and_group(df_proc_bienio, df_locs, cols_critic),\n  critic_level=1)\ndf_mun_regiao\n\n\n\n\n\n    \n      \n      Parto\n      Localidade\n      2010-2011_num\n      2018-2019_num\n      2010-2011_den\n      2018-2019_den\n      2010-2011\n      2018-2019\n    \n  Loading... (need help?)\n\n\n\n\n\n\nBarplot\n\nfig_mun_regiao = fig_count_partos(df_mun_regiao)\nfig_mun_regiao.show()\n\n\n                                                \n\n\n\n\n\nLocalidade: Unidade Federativa\n\nDatatable\n\ndf_mun_uf = critic(\n  select_and_group(df_proc_bienio, df_locs, cols_critic, loc='nome_uf'),\n  critic_level=1)\ndf_mun_uf\n\n\n\n\n\n    \n      \n      Parto\n      Localidade\n      2010-2011_num\n      2018-2019_num\n      2010-2011_den\n      2018-2019_den\n      2010-2011\n      2018-2019\n    \n  Loading... (need help?)\n\n\n\n\n\n\nBarplot\n\nfig_mun_uf = fig_count_partos(df_mun_uf)\nfig_mun_uf.show()"
  },
  {
    "objectID": "sections/result_occurences.html#deslocamento-região-de-saúde",
    "href": "sections/result_occurences.html#deslocamento-região-de-saúde",
    "title": "Ocorrências",
    "section": "Deslocamento % (região de saúde)",
    "text": "Deslocamento % (região de saúde)\n\nnumerador= região de saúde diferente entre residência e hospital\ndenominador= município diferente entre residência e hospital\n\n\nLocalidade: Região\n\nDatatable\n\ndf_regsau_regiao = critic(\n  select_and_group(df_proc_bienio, df_locs, cols_critic),\n  critic_level=2)\ndf_regsau_regiao\n\n\n\n\n\n    \n      \n      Parto\n      Localidade\n      2010-2011_num\n      2018-2019_num\n      2010-2011_den\n      2018-2019_den\n      2010-2011\n      2018-2019\n    \n  Loading... (need help?)\n\n\n\n\n\n\nBarplot\n\nfig_regsau_regiao = fig_count_partos(df_regsau_regiao)\nfig_regsau_regiao.show()\n\n\n                                                \n\n\n\n\n\nLocalidade: Unidade Federativa\n\nDatatable\n\ndf_critic_uf = critic(\n  select_and_group(df_proc_bienio, df_locs, cols_critic, loc='nome_uf'),\n  critic_level=2)\ndf_critic_uf\n\n\n\n\n\n    \n      \n      Parto\n      Localidade\n      2010-2011_num\n      2018-2019_num\n      2010-2011_den\n      2018-2019_den\n      2010-2011\n      2018-2019\n    \n  Loading... (need help?)\n\n\n\n\n\n\nBarplot\n\nfig_critic_uf = fig_count_partos(df_critic_uf)\nfig_critic_uf.show()"
  },
  {
    "objectID": "sections/result_osm_gmaps.html",
    "href": "sections/result_osm_gmaps.html",
    "title": "OSM vs Google Maps",
    "section": "",
    "text": "import sys\nimport numpy as np\nimport pandas as pd\n\nfrom datatable import dt, f, by\n\nfrom itables import init_notebook_mode\ninit_notebook_mode(all_interactive=True)\n\nfrom plotly import express as px, io as pio\npd.options.plotting.backend = 'plotly'\npio.renderers.default = 'plotly_mimetype+notebook_connected'\n\nfrom utils import get_path, data_load\nsys.path.insert(0, '../')\nfrom secret import API_KEY"
  },
  {
    "objectID": "sections/result_osm_gmaps.html#rotas-sih",
    "href": "sections/result_osm_gmaps.html#rotas-sih",
    "title": "OSM vs Google Maps",
    "section": "Rotas SIH",
    "text": "Rotas SIH\n\nColunas\n\ncols_sih = {\n  'cod_municipio': 'origem',\n  'hosp_cod_municipio': 'destino',\n}\n\n\n\nCarregando tabela\n\npath_sih = get_path('SIH', 'sih.jay')\ndf_sih = dt.fread(path_sih, columns=cols_sih)\ndf_sih.names = cols_sih\ndf_sih = df_sih[:, list(cols_sih.values())]\ndf_sih = df_sih[f.origem != f.destino, :]\ndf_sih['count'] = 1\ndf_sih = df_sih[:, dt.sum(f.count), by('origem', 'destino')]\ndf_sih = df_sih.sort(-f.count)\ndf_sih\n\n\n\n  \n  \n    origemdestinocount\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    051084051034022807\n    131546031062017147\n    226079026116016012\n    352125053001015461\n    428048028003015090\n    533035033028514875\n    623037023044014545\n    732050032053014543\n    815008015014014521\n    943230043149014273\n    1052002553001013577\n    1135150035528013106\n    1252014052087012745\n    1341004041069012717\n    1452218553001012112\n    ⋮⋮⋮⋮\n    68,5685300105213081\n    68,5695300105217701\n    68,5705300105220001\n    68,5715300105220201\n    68,5725300105220451\n  \n  \n  \n    68,573 rows × 3 columns"
  },
  {
    "objectID": "sections/result_osm_gmaps.html#rotas-osm",
    "href": "sections/result_osm_gmaps.html#rotas-osm",
    "title": "OSM vs Google Maps",
    "section": "Rotas OSM",
    "text": "Rotas OSM\n\nCarregando tabela\n\npath_osm = get_path('DISTANCIAS', f'deslocamentos.csv.gzip')\ndf_osm = pd.read_csv(path_osm)\ndf_osm\n\n\n\n\n\n    \n      \n      origem\n      destino\n      distancia (km)\n      tempo (min)\n      count\n    \n  Loading... (need help?)"
  },
  {
    "objectID": "sections/result_osm_gmaps.html#rotas-gmaps",
    "href": "sections/result_osm_gmaps.html#rotas-gmaps",
    "title": "OSM vs Google Maps",
    "section": "Rotas Gmaps",
    "text": "Rotas Gmaps\n\nColunas\n\ncols_gmaps = [\n  'origem', 'destino', 'count',\n  'distance (value)', 'duration (value)',\n  'duration_in_traffic (value)',\n]\n\n\n\nCarregando tabela\n\npath_routes = get_path('GESTANTES', f'gmaps/routes.csv.gzip')\ndf_files = pd.read_csv(path_routes)\ndf_files\n\n\n\n\n\n    \n      \n      status\n      origem\n      destino\n      origin_addresses\n      destination_addresses\n      origem_latitude\n      origem_longitude\n      destino_latitude\n      destino_longitude\n      hour\n      departure_time\n      mode\n      traffic_model\n      distance (value)\n      distance (text)\n      duration (value)\n      duration (text)\n      duration_in_traffic (value)\n      duration_in_traffic (text)\n      count\n    \n  Loading... (need help?)\n\n\n\n\n\n\nSelecionando\ndriving pessimistic at 6pm\n\nstatus = df_files['status'] == 'OK'\nmode = df_files['mode'] == 'driving'\ntraffic_model = df_files['traffic_model'] == 'pessimistic'\nhour = df_files['hour'] == 18\ndf_gmaps = df_files[status & mode & traffic_model & hour]\ndf_gmaps = df_gmaps.sort_values(by='count', ascending=False).reset_index(drop=True)\ndf_gmaps = df_gmaps[cols_gmaps]\ndf_gmaps\n\n\n\n\n\n    \n      \n      origem\n      destino\n      count\n      distance (value)\n      duration (value)\n      duration_in_traffic (value)\n    \n  Loading... (need help?)"
  },
  {
    "objectID": "sections/result_osm_gmaps.html#completude",
    "href": "sections/result_osm_gmaps.html#completude",
    "title": "OSM vs Google Maps",
    "section": "Completude",
    "text": "Completude\n\ndf_routes_nan = df_sih_osm.merge(df_sih_gmaps, on=['origem', 'destino', 'count'], how='left')\ndf_routes_valid = df_routes_nan[~df_routes_nan['distance (value)'].isna()]\ndf_routes_nan = df_routes_nan[df_routes_nan['distance (value)'].isna()]\ndf_routes_nan\n\n\n\n\n\n    \n      \n      origem\n      destino\n      count\n      distancia (km)\n      tempo (min)\n      distance (value)\n      duration (value)\n      duration_in_traffic (value)\n    \n  Loading... (need help?)\n\n\n\n\n\ndf_routes_nan[df_routes_nan['count'] > 1]\n\n\n\n\n\n    \n      \n      origem\n      destino\n      count\n      distancia (km)\n      tempo (min)\n      distance (value)\n      duration (value)\n      duration_in_traffic (value)\n    \n  Loading... (need help?)\n\n\n\n\n\nnan = df_routes_nan['count'].sum()\nvalid = df_routes_valid['count'].sum()\n\n\nFaltantes\n\npx.bar(x=['nan', 'valid'], y=[nan, valid])\n\n\n                                                \n\n\n\npx.histogram(df_routes_nan, x='count')#, range_x=[-.3, .45])"
  },
  {
    "objectID": "sections/result_osm_gmaps.html#diferença-entre-osm-e-gmaps",
    "href": "sections/result_osm_gmaps.html#diferença-entre-osm-e-gmaps",
    "title": "OSM vs Google Maps",
    "section": "Diferença entre OSM e Gmaps",
    "text": "Diferença entre OSM e Gmaps\n\nDistância\n\nHistograma\n\npx.histogram(df_rotas, x='dist_diff', range_x=[-.3, .45])\n\n\n                                                \n\n\n\n\nScatter\n\n# px.scatter(df_rotas, x='dist_diff', y=, range_x=[-.3, .45])\n\n\n\n\nTempo (padrão)\n\nHistograma\n\npx.histogram(df_rotas, x='tempo_diff', range_x=[-.75, 1])\n\n\n                                                \n\n\n\n\nScatter\n\npx.scatter(\n  df_rotas,\n  x='tempo_diff', y='distancia (km)',\n  opacity=.75, size='distance (value)',\n  log_x=True, log_y=True,\n)\n\n\n                                                \n\n\n\n\n\nTempo (tráfego)\n\nHistograma\n\npx.histogram(df_rotas, x='tempo_traffic_diff', range_x=[-.6, 1.5])\n\n\n                                                \n\n\n\n\nScatter\n\npx.scatter(\n  df_rotas,\n  x='tempo_traffic_diff', y='distancia (km)',\n  opacity=.75, size='distance (value)',\n  log_x=True, log_y=True,\n)"
  },
  {
    "objectID": "sections/table_counts.html",
    "href": "sections/table_counts.html",
    "title": "Contagens",
    "section": "",
    "text": "import pandas as pd\nfrom utils import get_path, group_cols\nfrom datatable import dt, f, by"
  },
  {
    "objectID": "sections/table_counts.html#cnes",
    "href": "sections/table_counts.html#cnes",
    "title": "Contagens",
    "section": "CNES",
    "text": "CNES\n\ncols_cnes = {\n  'CNES': 'identificador',\n  'Nome Fantasia': 'nome',\n}\n\n\npath_cnes = get_path('LOCALIDADES', 'cnes.csv.gzip')\ndf_cnes = pd.read_csv(path_cnes, dtype={'CNES': str})\ndf_cnes = df_cnes.rename(columns=cols_cnes)[cols_cnes.values()]\ndf_cnes = dt.Frame(df_cnes)\ndf_cnes\n\n\n\n  \n  \n    identificadornome\n    ▪▪▪▪▪▪▪▪\n  \n  \n    00002232HOSPITAL E MATERNIDADE SANTA IZABEL\n    13151794MATERNIDADE DE REFERENCIA ANA BRAGA\n    22323397MATERNIDADE DONA EVANGELINA ROSA\n    32311682HOSPITAL SANTA HELENA\n    40026794HOSPITAL SOFIA FELDMAN\n    52020068SES AP HOSPITAL DA MULHER\n    66627595INSTITUTO DA MULHER DONA LINDU\n    72799278HOSPITAL INACIA PINTO DOS SANTOS\n    80010480HOSPITAL REGIONAL DE CEILANDIA\n    92077388HOSPITAL AMPARO MATERNAL\n    107011857SES RJ COMPLEXO REG DE MESQUITA MATERNID E CLINICA…\n    116303153HOSPITAL NOSSA SENHORA DA GUIA\n    122755165HOSPITAL DOM ORIONE DE ARAGUAINA\n    132344882HOSPITAL DO TRICENTENARIO\n    142079186HOSP MUN MAT ESC DR MARIO DE MORAES A SILVA\n    ⋮⋮⋮\n    39237320175HOSPITAL SAO MIGUEL ARCANJO\n    39247603029HOSPITAL MUNICIPAL LENILDE OLIVEIRA\n    39257621442HOSPITAL ESTADUAL DE URGENCIA E EMERGENCIA\n    39267704364HOSPITAL DE URGENCIA E EMERGENCIA REGIONAL DE CACO…\n    39277743068HOSPITAL ESTADUAL DE URGENCIAS GOV OTAVIO LAG SIQU…\n  \n  \n  \n    3928 rows × 2 columns"
  },
  {
    "objectID": "sections/table_counts.html#infos",
    "href": "sections/table_counts.html#infos",
    "title": "Contagens",
    "section": "Infos",
    "text": "Infos\n\ndef rank_locs(df_counts, path_locs, scale):\n  ref = 'destino' if scale == 'cnes' else 'origem'\n  cols_locs = {'codigo': 'codigo', f'nome_{scale}': 'nome', ...: None}\n  df_locs = dt.fread(path_locs, columns=cols_locs)\n  if scale == 'cnes':\n    df_locs['nome'] = ''\n  df_locs.key = 'codigo'\n  df_count = df_counts[f.referencial == ref, f[:].remove(f.referencial)]\n  df_count['escala'] = scale\n  df_count = df_count[:, :, dt.join(df_locs)]\n  i = {'cnes': 5, 'municipio': 4, 'regiao_saude': 3, 'uf': 2, 'regiao': 1}[scale]\n  codigos = df_count['codigo'].to_list()[0]\n  df_codigos = dt.Frame(['/'.join(c.split('/')[:i]) for c in codigos])\n  df_count['codigo'] = df_codigos\n  df_count['identificador'] = dt.Frame([c.split('/')[-1] for c in df_count['codigo'].to_list()[0]])\n  cols = df_count.names\n  cols_order = cols[:3] + cols[5:] + cols[3:5]\n  df_count = df_count[:, cols_order]\n  df_count = df_count[:, [dt.sum(f.count)], by(df_count.names[:-1])]\n  # df_count[:, dt.update(critic_percent = f.count_critic / f.count_total * 100)]\n  df_count = df_count.sort(f.codigo, f.criticidade, f.parto_normal, f.bienio)\n  return df_count\n\n\npath_locs = get_path('LOCALIDADES', 'localidades.csv.gzip')\nscales = ['regiao', 'uf', 'regiao_saude', 'municipio', 'cnes']\ndf_counts = dt.rbind(*[\n  rank_locs(df_count, path_locs, scale) for scale in scales])\ndf_counts\n\n\n\n  \n  \n    bienioparto_normalcodigoescalanomeidentificadorcriticidadecount\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    000COregiaoCentro-OesteCO085068\n    110COregiaoCentro-OesteCO0100995\n    201COregiaoCentro-OesteCO0141604\n    311COregiaoCentro-OesteCO0118221\n    400COregiaoCentro-OesteCO18372\n    510COregiaoCentro-OesteCO113732\n    601COregiaoCentro-OesteCO113243\n    711COregiaoCentro-OesteCO116144\n    800COregiaoCentro-OesteCO23465\n    910COregiaoCentro-OesteCO23834\n    1001COregiaoCentro-OesteCO23758\n    1111COregiaoCentro-OesteCO24273\n    1200COregiaoCentro-OesteCO33004\n    1310COregiaoCentro-OesteCO35817\n    1401COregiaoCentro-OesteCO38296\n    ⋮⋮⋮⋮⋮⋮⋮⋮⋮\n    93,06010SL/SC/42016/421870/2491710cnesNA2491710259\n    93,06101SL/SC/42016/421870/2491710cnesNA2491710214\n    93,06211SL/SC/42016/421870/2491710cnesNA24917102125\n    93,06311SL/SC/42016/421870/2491710cnesNA249171032\n    93,06411SL/SC/42016/421870/2491710cnesNA249171042\n  \n  \n  \n    93,065 rows × 8 columns\n  \n\n\n\n\nNome dos CNES\n\ndf_cnes.key = 'identificador'\ndf_id_cnes = df_counts[f.escala == 'cnes', ['identificador']]\ndf_id_cnes = df_id_cnes[:, :, dt.join(df_cnes)]\ndf_id_cnes\n\n\n\n  \n  \n    identificadornome\n    ▪▪▪▪▪▪▪▪\n  \n  \n    00010464HRAN\n    10010464HRAN\n    20010464HRAN\n    30010464HRAN\n    40010464HRAN\n    50010464HRAN\n    60010464HRAN\n    70010464HRAN\n    80010464HRAN\n    90010464HRAN\n    100010472HRG\n    110010472HRG\n    120010472HRG\n    130010472HRG\n    140010472HRG\n    ⋮⋮⋮\n    31,2942491710NA\n    31,2952491710NA\n    31,2962491710NA\n    31,2972491710NA\n    31,2982491710NA\n  \n  \n  \n    31,299 rows × 2 columns\n  \n\n\n\n\ndf_counts[f.escala == 'cnes', ['identificador', 'nome']] = df_id_cnes\ndf_counts\n\n\n\n  \n  \n    bienioparto_normalcodigoescalanomeidentificadorcriticidadecount\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    000COregiaoCentro-OesteCO085068\n    110COregiaoCentro-OesteCO0100995\n    201COregiaoCentro-OesteCO0141604\n    311COregiaoCentro-OesteCO0118221\n    400COregiaoCentro-OesteCO18372\n    510COregiaoCentro-OesteCO113732\n    601COregiaoCentro-OesteCO113243\n    711COregiaoCentro-OesteCO116144\n    800COregiaoCentro-OesteCO23465\n    910COregiaoCentro-OesteCO23834\n    1001COregiaoCentro-OesteCO23758\n    1111COregiaoCentro-OesteCO24273\n    1200COregiaoCentro-OesteCO33004\n    1310COregiaoCentro-OesteCO35817\n    1401COregiaoCentro-OesteCO38296\n    ⋮⋮⋮⋮⋮⋮⋮⋮⋮\n    93,06010SL/SC/42016/421870/2491710cnesNA2491710259\n    93,06101SL/SC/42016/421870/2491710cnesNA2491710214\n    93,06211SL/SC/42016/421870/2491710cnesNA24917102125\n    93,06311SL/SC/42016/421870/2491710cnesNA249171032\n    93,06411SL/SC/42016/421870/2491710cnesNA249171042\n  \n  \n  \n    93,065 rows × 8 columns\n  \n\n\n\n\n\nPercent\n\ndf_total = df_counts[:, ['bienio', 'parto_normal', 'identificador', 'count']]\ndf_total = df_total[:, dt.sum(f.count), by(df_total.names[:-1])]\ndf_total.names = {'count': 'total'}\ndf_total.key = df_total.names[:-1]\ndf_counts = df_counts[:, :, dt.join(df_total)]\ndf_counts[:, dt.update(percent = f.count / f.total * 100)]\ndf_counts\n\n\n\n  \n  \n    bienioparto_normalcodigoescalanomeidentificadorcriticidadecounttotalpercent\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    000COregiaoCentro-OesteCO08506810003585.0382\n    110COregiaoCentro-OesteCO010099512497180.8147\n    201COregiaoCentro-OesteCO014160416710584.7395\n    311COregiaoCentro-OesteCO011822115131078.1317\n    400COregiaoCentro-OesteCO183721000358.36907\n    510COregiaoCentro-OesteCO11373212497110.9881\n    601COregiaoCentro-OesteCO1132431671057.92496\n    711COregiaoCentro-OesteCO11614415131010.6695\n    800COregiaoCentro-OesteCO234651000353.46379\n    910COregiaoCentro-OesteCO238341249713.06791\n    1001COregiaoCentro-OesteCO237581671052.24889\n    1111COregiaoCentro-OesteCO242731513102.824\n    1200COregiaoCentro-OesteCO330041000353.00295\n    1310COregiaoCentro-OesteCO358171249714.65468\n    1401COregiaoCentro-OesteCO382961671054.96454\n    ⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮\n    93,06010SL/SC/42016/421870/2491710cnesNA249171025955010.7273\n    93,06101SL/SC/42016/421870/2491710cnesNA24917102145612.49554\n    93,06211SL/SC/42016/421870/2491710cnesNA2491710212512569.95223\n    93,06311SL/SC/42016/421870/2491710cnesNA24917103212560.159236\n    93,06411SL/SC/42016/421870/2491710cnesNA24917104212560.159236\n  \n  \n  \n    93,065 rows × 10 columns\n  \n\n\n\n\n\nOrdem colunas\n\ncols_order = [\n  'parto_normal',\n  'bienio',\n  'escala',\n  'codigo',\n  'identificador',\n  'nome',\n  'criticidade',\n  'count',\n  'total',\n  'percent',\n]\n\n\ndf_counts = df_counts[:, cols_order]\ndf_counts\n\n\n\n  \n  \n    parto_normalbienioescalacodigoidentificadornomecriticidadecounttotalpercent\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    000regiaoCOCOCentro-Oeste08506810003585.0382\n    101regiaoCOCOCentro-Oeste010099512497180.8147\n    210regiaoCOCOCentro-Oeste014160416710584.7395\n    311regiaoCOCOCentro-Oeste011822115131078.1317\n    400regiaoCOCOCentro-Oeste183721000358.36907\n    501regiaoCOCOCentro-Oeste11373212497110.9881\n    610regiaoCOCOCentro-Oeste1132431671057.92496\n    711regiaoCOCOCentro-Oeste11614415131010.6695\n    800regiaoCOCOCentro-Oeste234651000353.46379\n    901regiaoCOCOCentro-Oeste238341249713.06791\n    1010regiaoCOCOCentro-Oeste237581671052.24889\n    1111regiaoCOCOCentro-Oeste242731513102.824\n    1200regiaoCOCOCentro-Oeste330041000353.00295\n    1301regiaoCOCOCentro-Oeste358171249714.65468\n    1410regiaoCOCOCentro-Oeste382961671054.96454\n    ⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮\n    93,06001cnesSL/SC/42016/421870/24917102491710NA25955010.7273\n    93,06110cnesSL/SC/42016/421870/24917102491710NA2145612.49554\n    93,06211cnesSL/SC/42016/421870/24917102491710NA212512569.95223\n    93,06311cnesSL/SC/42016/421870/24917102491710NA3212560.159236\n    93,06411cnesSL/SC/42016/421870/24917102491710NA4212560.159236\n  \n  \n  \n    93,065 rows × 10 columns"
  },
  {
    "objectID": "sections/table_counts.html#brasil-regsau",
    "href": "sections/table_counts.html#brasil-regsau",
    "title": "Contagens",
    "section": "Brasil (regsau)",
    "text": "Brasil (regsau)\n\ndf_bra_regsau = df_cnt[df_cnt['escala'].isin({'regiao', 'uf', 'regiao_saude'})]\ndf_bra_regsau\n\n\n\n\n\n  \n    \n      \n      parto_normal\n      bienio\n      escala\n      codigo\n      identificador\n      nome\n      criticidade\n      count\n      total\n      percent\n    \n  \n  \n    \n      0\n      0\n      0\n      regiao\n      CO\n      CO\n      Centro-Oeste\n      0\n      85068\n      100035\n      85.038237\n    \n    \n      1\n      0\n      1\n      regiao\n      CO\n      CO\n      Centro-Oeste\n      0\n      100995\n      124971\n      80.814749\n    \n    \n      2\n      1\n      0\n      regiao\n      CO\n      CO\n      Centro-Oeste\n      0\n      141604\n      167105\n      84.739535\n    \n    \n      3\n      1\n      1\n      regiao\n      CO\n      CO\n      Centro-Oeste\n      0\n      118221\n      151310\n      78.131650\n    \n    \n      4\n      0\n      0\n      regiao\n      CO\n      CO\n      Centro-Oeste\n      1\n      8372\n      100035\n      8.369071\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      8204\n      0\n      0\n      regiao_saude\n      SL/SC/42016\n      42016\n      Laguna\n      3\n      1\n      1221\n      0.081900\n    \n    \n      8205\n      0\n      1\n      regiao_saude\n      SL/SC/42016\n      42016\n      Laguna\n      3\n      1\n      1805\n      0.055402\n    \n    \n      8206\n      0\n      1\n      regiao_saude\n      SL/SC/42016\n      42016\n      Laguna\n      4\n      2\n      1805\n      0.110803\n    \n    \n      8207\n      1\n      0\n      regiao_saude\n      SL/SC/42016\n      42016\n      Laguna\n      4\n      1\n      1636\n      0.061125\n    \n    \n      8208\n      1\n      1\n      regiao_saude\n      SL/SC/42016\n      42016\n      Laguna\n      4\n      4\n      2170\n      0.184332\n    \n  \n\n8209 rows × 10 columns\n\n\n\n\noutput_bra_regsau = output_counts.replace('.csv.gzip', '_bra_regsau.xlsx')\ndf_bra_regsau.to_excel(output_bra_regsau, index=False)"
  },
  {
    "objectID": "sections/table_counts.html#rj",
    "href": "sections/table_counts.html#rj",
    "title": "Contagens",
    "section": "RJ",
    "text": "RJ\n\ndf_rj = df_cnt[df_cnt['codigo'].str.contains('/RJ')]\ndf_rj\n\n\n\n\n\n  \n    \n      \n      parto_normal\n      bienio\n      escala\n      codigo\n      identificador\n      nome\n      criticidade\n      count\n      total\n      percent\n    \n  \n  \n    \n      530\n      0\n      0\n      uf\n      SD/RJ\n      RJ\n      Rio de Janeiro\n      0\n      31475\n      39323\n      80.042214\n    \n    \n      531\n      0\n      1\n      uf\n      SD/RJ\n      RJ\n      Rio de Janeiro\n      0\n      64571\n      82583\n      78.189216\n    \n    \n      532\n      1\n      0\n      uf\n      SD/RJ\n      RJ\n      Rio de Janeiro\n      0\n      126306\n      148327\n      85.153748\n    \n    \n      533\n      1\n      1\n      uf\n      SD/RJ\n      RJ\n      Rio de Janeiro\n      0\n      116113\n      148010\n      78.449429\n    \n    \n      534\n      0\n      0\n      uf\n      SD/RJ\n      RJ\n      Rio de Janeiro\n      1\n      7153\n      39323\n      18.190372\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      84206\n      0\n      0\n      cnes\n      SD/RJ/33009/330590/3584968\n      3584968\n      HOSPITAL FRANCISCO LIMONGI\n      0\n      4\n      4\n      100.000000\n    \n    \n      84207\n      1\n      0\n      cnes\n      SD/RJ/33009/330590/3584968\n      3584968\n      HOSPITAL FRANCISCO LIMONGI\n      0\n      39\n      39\n      100.000000\n    \n    \n      84208\n      1\n      1\n      cnes\n      SD/RJ/33009/330590/3584968\n      3584968\n      HOSPITAL FRANCISCO LIMONGI\n      0\n      6\n      8\n      75.000000\n    \n    \n      84209\n      1\n      1\n      cnes\n      SD/RJ/33009/330590/3584968\n      3584968\n      HOSPITAL FRANCISCO LIMONGI\n      1\n      1\n      8\n      12.500000\n    \n    \n      84210\n      1\n      1\n      cnes\n      SD/RJ/33009/330590/3584968\n      3584968\n      HOSPITAL FRANCISCO LIMONGI\n      2\n      1\n      8\n      12.500000\n    \n  \n\n2376 rows × 10 columns\n\n\n\n\noutput_rj = output_counts.replace('.csv.gzip', '_rj.xlsx')\ndf_rj.to_excel(output_rj, index=False)"
  },
  {
    "objectID": "sections/table_dslc.html",
    "href": "sections/table_dslc.html",
    "title": "Deslocamentos",
    "section": "",
    "text": "from utils import get_path, group_cols\nfrom datatable import dt, f"
  },
  {
    "objectID": "sections/table_dslc.html#tabela-distâncias",
    "href": "sections/table_dslc.html#tabela-distâncias",
    "title": "Deslocamentos",
    "section": "Tabela Distâncias",
    "text": "Tabela Distâncias\n\nColunas\n\n\nCarregando tabela\n\npath_dist = get_path('DISTANCIAS', 'distancias.jay')\ndf_dslc = dt.fread(path_dist)\ndf_dslc\n\n\n\n  \n  \n    origemdestinodistanciatempo\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    011000111000100\n    1110001110002309.056.16906\n    2110001110003399.56.28906\n    311000111000481.20111.91775\n    4110001110005391.7046.13636\n    5110001110006353.4175.53989\n    6110001110007313.5926.18117\n    7110001110008326.9835.34175\n    8110001110009145.6782.346\n    9110001110010649.54513.405\n    10110001110011214.1253.83481\n    11110001110012130.772.54781\n    12110001110013357.5117.13067\n    1311000111001460.21031.02275\n    14110001110015172.9263.18425\n    ⋮⋮⋮⋮⋮\n    31,024,895530010522200161.7292.356\n    31,024,896530010522205382.7095.47956\n    31,024,897530010522220161.6032.24894\n    31,024,898530010522230190.0013.21608\n    31,024,89953001053001000\n  \n  \n  \n    31,024,900 rows × 4 columns\n  \n\n\n\n\n\nConvertendo pra minutos\n\ndf_dslc[:, dt.update(tempo = f.tempo * 60)]\ndf_dslc\n\n\n\n  \n  \n    origemdestinodistanciatempo\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    011000111000100\n    1110001110002309.05370.143\n    2110001110003399.5377.343\n    311000111000481.2011115.065\n    4110001110005391.704368.182\n    5110001110006353.417332.393\n    6110001110007313.592370.87\n    7110001110008326.983320.505\n    8110001110009145.678140.76\n    9110001110010649.545804.3\n    10110001110011214.125230.088\n    11110001110012130.77152.868\n    12110001110013357.511427.84\n    1311000111001460.210361.365\n    14110001110015172.926191.055\n    ⋮⋮⋮⋮⋮\n    31,024,895530010522200161.729141.36\n    31,024,896530010522205382.709328.773\n    31,024,897530010522220161.603134.937\n    31,024,898530010522230190.001192.965\n    31,024,89953001053001000\n  \n  \n  \n    31,024,900 rows × 4 columns\n  \n\n\n\n\n\nRenomeando colunas\n\ndf_dslc.names = {\n  'distancia': 'distancia (km)',\n  'tempo': 'tempo (min)'}\ndf_dslc\n\n\n\n  \n  \n    origemdestinodistancia (km)tempo (min)\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    011000111000100\n    1110001110002309.05370.143\n    2110001110003399.5377.343\n    311000111000481.2011115.065\n    4110001110005391.704368.182\n    5110001110006353.417332.393\n    6110001110007313.592370.87\n    7110001110008326.983320.505\n    8110001110009145.678140.76\n    9110001110010649.545804.3\n    10110001110011214.125230.088\n    11110001110012130.77152.868\n    12110001110013357.511427.84\n    1311000111001460.210361.365\n    14110001110015172.926191.055\n    ⋮⋮⋮⋮⋮\n    31,024,895530010522200161.729141.36\n    31,024,896530010522205382.709328.773\n    31,024,897530010522220161.603134.937\n    31,024,898530010522230190.001192.965\n    31,024,89953001053001000\n  \n  \n  \n    31,024,900 rows × 4 columns"
  },
  {
    "objectID": "sections/table_dslc.html#tabela-procedimentos",
    "href": "sections/table_dslc.html#tabela-procedimentos",
    "title": "Deslocamentos",
    "section": "Tabela Procedimentos",
    "text": "Tabela Procedimentos\n\nColunas da tabela\n\ncols_sih = {\n  'cod_municipio': 'origem',\n  'hosp_cod_municipio': 'destino',\n}\n\n\n\nCarregando tabela\n\npath_sih = get_path('SIH', 'sih.jay')\ndf_sih = dt.fread(path_sih)\ndf_sih = df_sih[:, list(cols_sih)]\ndf_sih.names = cols_sih\ndf_sih\n\n\n\n  \n  \n    origemdestino\n    ▪▪▪▪▪▪▪▪\n  \n  \n    0120005120005\n    1120040120040\n    2120040120040\n    3120040120040\n    4120040120040\n    5120040120040\n    6120040120040\n    7120005120005\n    8120040120040\n    9120040120040\n    10120005120005\n    11120038120040\n    12120040120040\n    13120001120040\n    14120040120040\n    ⋮⋮⋮\n    17,106,396171840170930\n    17,106,397171670170930\n    17,106,398171670170930\n    17,106,399170930170930\n    17,106,400171250171610\n  \n  \n  \n    17,106,401 rows × 2 columns\n  \n\n\n\n\n\nTabela agrupada\n\ndf_sih = group_cols(df_sih, list(cols_sih.values()))\ndf_sih = df_sih.sort(-f.count)\ndf_sih\n\n\n\n  \n  \n    origemdestinocount\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    0355030355030789070\n    1330455330455358134\n    2130260130260296660\n    3530010530010288921\n    4230440230440196047\n    5292740292740165828\n    6310620310620123927\n    7150140150140120647\n    8431490431490104714\n    9410690410690100193\n    1027043027043093156\n    1152087052087088967\n    1235188035188088678\n    1322110022110085833\n    1450027050027084315\n    ⋮⋮⋮⋮\n    71,8335300105213081\n    71,8345300105217701\n    71,8355300105220001\n    71,8365300105220201\n    71,8375300105220451\n  \n  \n  \n    71,838 rows × 3 columns"
  },
  {
    "objectID": "sections/table_flux.html",
    "href": "sections/table_flux.html",
    "title": "Fluxos",
    "section": "",
    "text": "import pandas as pd\nfrom utils import get_path, group_cols\nfrom datatable import dt, f, by"
  },
  {
    "objectID": "sections/table_flux.html#procedimentos",
    "href": "sections/table_flux.html#procedimentos",
    "title": "Fluxos",
    "section": "Procedimentos",
    "text": "Procedimentos\n\npath_proc = get_path('GESTANTES', 'procs_bienio.csv.gzip')\ndf_proc = dt.fread(path_proc)\ndf_proc\n\n\n\n  \n  \n    bienioparto_normalorigemdestinodistancia (km)tempo (min)dist_pondtempo_pondcriticidadecapitais…origem_latitudeorigem_longitudedestino_latitudedestino_longitudecount\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    000CO/DF/53001/530010CO/DF/53001/530010/0010464000001_1…−15.7795−47.9297−15.7795−47.9297260\n    100CO/DF/53001/530010CO/DF/53001/530010/0010472000001_1…−15.7795−47.9297−15.7795−47.9297282\n    200CO/DF/53001/530010CO/DF/53001/530010/0010480000001_1…−15.7795−47.9297−15.7795−47.92973323\n    300CO/DF/53001/530010CO/DF/53001/530010/0010499000001_1…−15.7795−47.9297−15.7795−47.92973368\n    400CO/DF/53001/530010CO/DF/53001/530010/0010502000001_1…−15.7795−47.9297−15.7795−47.9297964\n    500CO/DF/53001/530010CO/DF/53001/530010/0010510000001_1…−15.7795−47.9297−15.7795−47.9297832\n    600CO/DF/53001/530010CO/DF/53001/530010/0010529000001_1…−15.7795−47.9297−15.7795−47.92971831\n    700CO/DF/53001/530010CO/DF/53001/530010/0010537000001_1…−15.7795−47.9297−15.7795−47.92973707\n    800CO/DF/53001/530010CO/DF/53001/530010/0010545000001_1…−15.7795−47.9297−15.7795−47.9297728\n    900CO/DF/53001/530010CO/DF/53001/530010/0010561000001_1…−15.7795−47.9297−15.7795−47.92971\n    1000CO/DF/53001/530010CO/DF/53001/530010/2645157000001_1…−15.7795−47.9297−15.7795−47.92972251\n    1100CO/DF/53001/530010CO/DF/53001/530010/2672197000001_1…−15.7795−47.9297−15.7795−47.92971561\n    1200CO/DF/53001/530010CO/DF/53001/530010/5717515000001_1…−15.7795−47.9297−15.7795−47.92971798\n    1300CO/DF/53001/530010CO/GO/52011/520110/2361787152.625132.723305.25265.44731_0…−15.7795−47.9297−16.3281−48.9534\n    1400CO/DF/53001/530010ND/BA/29002/290320/3972925630.949466.705630.949466.70541_0…−15.7795−47.9297−12.1439−44.99681\n    ⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋱⋮⋮⋮⋮⋮\n    167,21111SL/SC/42016/421870SL/SC/42007/420540/3157245138.477104.94138.477104.9420_1…−28.4713−49.0144−27.5945−48.54771\n    167,21211SL/SC/42016/421870SL/SC/42015/420460/259427754.62149.316754.62149.316720_0…−28.4713−49.0144−28.6723−49.37291\n    167,21311SL/SC/42016/421870SL/SC/42016/420280/266588335.543937.493371.087874.986710_0…−28.4713−49.0144−28.2681−49.17012\n    167,21411SL/SC/42016/421870SL/SC/42016/420730/238588053.96145.353353.96145.353310_0…−28.4713−49.0144−28.2284−48.66591\n    167,21511SL/SC/42016/421870SL/SC/42016/421870/2491710000000_0…−28.4713−49.0144−28.4713−49.0144441\n  \n  \n  \n    167,216 rows × 16 columns"
  },
  {
    "objectID": "sections/table_flux.html#cnes",
    "href": "sections/table_flux.html#cnes",
    "title": "Fluxos",
    "section": "CNES",
    "text": "CNES\n\ncols_cnes = {\n  'CNES': 'id_destino',\n  'Nome Fantasia': 'nome_destino',\n}\n\n\npath_cnes = get_path('LOCALIDADES', 'cnes.csv.gzip')\ndf_cnes = pd.read_csv(path_cnes, dtype={'CNES': str})\ndf_cnes = df_cnes.rename(columns=cols_cnes)[cols_cnes.values()]\ndf_cnes = dt.Frame(df_cnes)\ndf_cnes\n\n\n\n  \n  \n    id_destinonome_destino\n    ▪▪▪▪▪▪▪▪\n  \n  \n    00002232HOSPITAL E MATERNIDADE SANTA IZABEL\n    13151794MATERNIDADE DE REFERENCIA ANA BRAGA\n    22323397MATERNIDADE DONA EVANGELINA ROSA\n    32311682HOSPITAL SANTA HELENA\n    40026794HOSPITAL SOFIA FELDMAN\n    52020068SES AP HOSPITAL DA MULHER\n    66627595INSTITUTO DA MULHER DONA LINDU\n    72799278HOSPITAL INACIA PINTO DOS SANTOS\n    80010480HOSPITAL REGIONAL DE CEILANDIA\n    92077388HOSPITAL AMPARO MATERNAL\n    107011857SES RJ COMPLEXO REG DE MESQUITA MATERNID E CLINICA…\n    116303153HOSPITAL NOSSA SENHORA DA GUIA\n    122755165HOSPITAL DOM ORIONE DE ARAGUAINA\n    132344882HOSPITAL DO TRICENTENARIO\n    142079186HOSP MUN MAT ESC DR MARIO DE MORAES A SILVA\n    ⋮⋮⋮\n    39237320175HOSPITAL SAO MIGUEL ARCANJO\n    39247603029HOSPITAL MUNICIPAL LENILDE OLIVEIRA\n    39257621442HOSPITAL ESTADUAL DE URGENCIA E EMERGENCIA\n    39267704364HOSPITAL DE URGENCIA E EMERGENCIA REGIONAL DE CACO…\n    39277743068HOSPITAL ESTADUAL DE URGENCIAS GOV OTAVIO LAG SIQU…\n  \n  \n  \n    3928 rows × 2 columns"
  },
  {
    "objectID": "sections/table_flux.html#regsau---cnes",
    "href": "sections/table_flux.html#regsau---cnes",
    "title": "Fluxos",
    "section": "REGSAU -> CNES",
    "text": "REGSAU -> CNES\n\nscale_origin = 'regiao_saude'\nscale_destin = 'cnes'\ndf_regsau_cnes = get_flux_table(scale_origin, scale_destin)\ndf_regsau_cnes\n\n\n\n  \n  \n    bienioparto_normalorigemdestinoescala_origemescala_destinoid_origemid_destinonome_origemnome_destino…countdist_pondtempo_pondtotalpercent\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    000CO/DF/53001CO/DF/53001/530010/0010464regiao_saudecnes530010010464Distrito FederalHRAN…26000260100\n    110CO/DF/53001CO/DF/53001/530010/0010464regiao_saudecnes530010010464Distrito FederalHRAN…1954001954100\n    201CO/DF/53001CO/DF/53001/530010/0010464regiao_saudecnes530010010464Distrito FederalHRAN…2171002171100\n    311CO/DF/53001CO/DF/53001/530010/0010464regiao_saudecnes530010010464Distrito FederalHRAN…2521002521100\n    400CO/DF/53001CO/DF/53001/530010/0010472regiao_saudecnes530010010472Distrito FederalHRG…28200282100\n    510CO/DF/53001CO/DF/53001/530010/0010472regiao_saudecnes530010010472Distrito FederalHRG…65000650100\n    601CO/DF/53001CO/DF/53001/530010/0010472regiao_saudecnes530010010472Distrito FederalHRG…2739002739100\n    711CO/DF/53001CO/DF/53001/530010/0010472regiao_saudecnes530010010472Distrito FederalHRG…1981001981100\n    800CO/DF/53001CO/DF/53001/530010/0010480regiao_saudecnes530010010480Distrito FederalHOSPITAL REGIONAL DE CEILANDIA…3323003323100\n    910CO/DF/53001CO/DF/53001/530010/0010480regiao_saudecnes530010010480Distrito FederalHOSPITAL REGIONAL DE CEILANDIA…2840002840100\n    1001CO/DF/53001CO/DF/53001/530010/0010480regiao_saudecnes530010010480Distrito FederalHOSPITAL REGIONAL DE CEILANDIA…8418008418100\n    1111CO/DF/53001CO/DF/53001/530010/0010480regiao_saudecnes530010010480Distrito FederalHOSPITAL REGIONAL DE CEILANDIA…6629006629100\n    1200CO/DF/53001CO/DF/53001/530010/0010499regiao_saudecnes530010010499Distrito FederalHRT HOSPITAL REGIONAL DE TAGUATINGA…3368003368100\n    1310CO/DF/53001CO/DF/53001/530010/0010499regiao_saudecnes530010010499Distrito FederalHRT HOSPITAL REGIONAL DE TAGUATINGA…2294002294100\n    1401CO/DF/53001CO/DF/53001/530010/0010499regiao_saudecnes530010010499Distrito FederalHRT HOSPITAL REGIONAL DE TAGUATINGA…4404004404100\n    ⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋱⋮⋮⋮⋮⋮\n    52,41411SL/SC/42016SL/SC/42016/421870/2491710regiao_saudecnes420162491710LagunaNA…44100112739.1304\n    52,41500SL/SC/42016SL/SC/42016/421870/2491710regiao_saudecnes420162491710LagunaNA…511238.141184.610349.5146\n    52,41610SL/SC/42016SL/SC/42016/421870/2491710regiao_saudecnes420162491710LagunaNA…3019023.528390.2649161.3035\n    52,41701SL/SC/42016SL/SC/42016/421870/2491710regiao_saudecnes420162491710LagunaNA…2766539.276254.2154750.457\n    52,41811SL/SC/42016SL/SC/42016/421870/2491710regiao_saudecnes420162491710LagunaNA…68619590.917936.8112760.8696\n  \n  \n  \n    52,419 rows × 16 columns\n  \n\n\n\n\nApenas RJ\n\ndef filter_rj(df):\n  return ['SD/RJ' in c for c in df['origem'].to_list()[0]]\n\n\ndf_regsau_cnes[filter_rj(df_regsau_cnes), :]\n\n\n\n  \n  \n    bienioparto_normalorigemdestinoescala_origemescala_destinoid_origemid_destinonome_origemnome_destino…countdist_pondtempo_pondtotalpercent\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    011SD/RJ/33001ND/PB/25012/250690/6644996regiao_saudecnes330016644996Baia da Ilha GrandeHOSPITAL REGIONAL DE ITABAIANA…12485.741898.21100\n    111SD/RJ/33001ND/PI/22005/220770/8015899regiao_saudecnes330018015899Baia da Ilha GrandeHOSPITAL ESTADUAL DIRCEU ARCOVERDE…13067.572331.661100\n    200SD/RJ/33001SD/ES/32002/320245/2448203regiao_saudecnes330012448203Baia da Ilha GrandeHOSPITAL DE IBATIBA…21229.23919.5372100\n    311SD/RJ/33001SD/ES/32002/320245/2448203regiao_saudecnes330012448203Baia da Ilha GrandeHOSPITAL DE IBATIBA…1704.828573.2271100\n    400SD/RJ/33001SD/RJ/33001/330010/2280868regiao_saudecnes330012280868Baia da Ilha GrandeHOSPITAL E MATERNIDADE DE ANGRA DOS REIS HMAR…5330053899.0706\n    510SD/RJ/33001SD/RJ/33001/330010/2280868regiao_saudecnes330012280868Baia da Ilha GrandeHOSPITAL E MATERNIDADE DE ANGRA DOS REIS HMAR…169800174397.4182\n    601SD/RJ/33001SD/RJ/33001/330010/2280868regiao_saudecnes330012280868Baia da Ilha GrandeHOSPITAL E MATERNIDADE DE ANGRA DOS REIS HMAR…145700149097.7852\n    711SD/RJ/33001SD/RJ/33001/330010/2280868regiao_saudecnes330012280868Baia da Ilha GrandeHOSPITAL E MATERNIDADE DE ANGRA DOS REIS HMAR…178100182297.7497\n    800SD/RJ/33001SD/RJ/33001/330010/2280868regiao_saudecnes330012280868Baia da Ilha GrandeHOSPITAL E MATERNIDADE DE ANGRA DOS REIS HMAR…5323.197312.4225380.929368\n    910SD/RJ/33001SD/RJ/33001/330010/2280868regiao_saudecnes330012280868Baia da Ilha GrandeHOSPITAL E MATERNIDADE DE ANGRA DOS REIS HMAR…452415.212358.0717432.58176\n    1001SD/RJ/33001SD/RJ/33001/330010/2280868regiao_saudecnes330012280868Baia da Ilha GrandeHOSPITAL E MATERNIDADE DE ANGRA DOS REIS HMAR…332109.552015.8314902.21477\n    1111SD/RJ/33001SD/RJ/33001/330010/2280868regiao_saudecnes330012280868Baia da Ilha GrandeHOSPITAL E MATERNIDADE DE ANGRA DOS REIS HMAR…412720.872700.3218222.25027\n    1200SD/RJ/33001SD/RJ/33001/330010/2281384regiao_saudecnes330012281384Baia da Ilha GrandeHOSPITAL DE PRAIA BRAVA…1160012791.3386\n    1310SD/RJ/33001SD/RJ/33001/330010/2281384regiao_saudecnes330012281384Baia da Ilha GrandeHOSPITAL DE PRAIA BRAVA…77007997.4684\n    1401SD/RJ/33001SD/RJ/33001/330010/2281384regiao_saudecnes330012281384Baia da Ilha GrandeHOSPITAL DE PRAIA BRAVA…3260035292.6136\n    ⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋱⋮⋮⋮⋮⋮\n    162601SD/RJ/33009SD/RJ/33009/330590/3584968regiao_saudecnes330093584968SerranaHOSPITAL FRANCISCO LIMONGI…390039100\n    162711SD/RJ/33009SD/RJ/33009/330590/3584968regiao_saudecnes330093584968SerranaHOSPITAL FRANCISCO LIMONGI…600785.7143\n    162811SD/RJ/33009SD/RJ/33009/330590/3584968regiao_saudecnes330093584968SerranaHOSPITAL FRANCISCO LIMONGI…130.30532.1633714.2857\n    162910SD/RJ/33009SD/SP/35011/351830/2773333regiao_saudecnes330092773333SerranaSANTA CASA DE GUARAREMA…1404.5312.9151100\n    163011SD/RJ/33009SD/SP/35072/350950/2022621regiao_saudecnes330092022621SerranaMATERNIDADE DE CAMPINAS…1507.879389.5731100\n  \n  \n  \n    1631 rows × 16 columns"
  },
  {
    "objectID": "sections/table_flux.html#regsau---município-rj",
    "href": "sections/table_flux.html#regsau---município-rj",
    "title": "Fluxos",
    "section": "REGSAU -> Município (RJ)",
    "text": "REGSAU -> Município (RJ)\n\nscale_origin = 'regiao_saude'\nscale_destin = 'municipio'\ndf_regsau_mun = get_flux_table(scale_origin, scale_destin)\ndf_regsau_mun[filter_rj(df_regsau_mun), :]\n\n\n\n  \n  \n    bienioparto_normalorigemdestinoescala_origemescala_destinoid_origemid_destinonome_origemnome_destino…countdist_pondtempo_pondtotalpercent\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    011SD/RJ/33001ND/PB/25012/250690regiao_saudemunicipio33001250690Baia da Ilha GrandeItabaiana…12485.741898.21100\n    111SD/RJ/33001ND/PI/22005/220770regiao_saudemunicipio33001220770Baia da Ilha GrandeParnaíba…13067.572331.661100\n    200SD/RJ/33001SD/ES/32002/320245regiao_saudemunicipio33001320245Baia da Ilha GrandeIbatiba…21229.23919.5372100\n    311SD/RJ/33001SD/ES/32002/320245regiao_saudemunicipio33001320245Baia da Ilha GrandeIbatiba…1704.828573.2271100\n    400SD/RJ/33001SD/RJ/33001/330010regiao_saudemunicipio33001330010Baia da Ilha GrandeAngra dos Reis…6490066597.594\n    510SD/RJ/33001SD/RJ/33001/330010regiao_saudemunicipio33001330010Baia da Ilha GrandeAngra dos Reis…177500182297.4204\n    601SD/RJ/33001SD/RJ/33001/330010regiao_saudemunicipio33001330010Baia da Ilha GrandeAngra dos Reis…178300184296.797\n    711SD/RJ/33001SD/RJ/33001/330010regiao_saudemunicipio33001330010Baia da Ilha GrandeAngra dos Reis…186300190597.7953\n    800SD/RJ/33001SD/RJ/33001/330010regiao_saudemunicipio33001330010Baia da Ilha GrandeAngra dos Reis…161379.671676.666652.40602\n    910SD/RJ/33001SD/RJ/33001/330010regiao_saudemunicipio33001330010Baia da Ilha GrandeAngra dos Reis…472607.32606.1218222.57958\n    1001SD/RJ/33001SD/RJ/33001/330010regiao_saudemunicipio33001330010Baia da Ilha GrandeAngra dos Reis…594606.665240.3918423.20304\n    1111SD/RJ/33001SD/RJ/33001/330010regiao_saudemunicipio33001330010Baia da Ilha GrandeAngra dos Reis…422816.922824.3419052.20472\n    1200SD/RJ/33001SD/RJ/33001/330260regiao_saudemunicipio33001330260Baia da Ilha GrandeMangaratiba…18300183100\n    1310SD/RJ/33001SD/RJ/33001/330260regiao_saudemunicipio33001330260Baia da Ilha GrandeMangaratiba…32400324100\n    1401SD/RJ/33001SD/RJ/33001/330260regiao_saudemunicipio33001330260Baia da Ilha GrandeMangaratiba…58900589100\n    ⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋱⋮⋮⋮⋮⋮\n    119001SD/RJ/33009SD/RJ/33009/330590regiao_saudemunicipio33009330590SerranaTrajano de Moraes…390039100\n    119111SD/RJ/33009SD/RJ/33009/330590regiao_saudemunicipio33009330590SerranaTrajano de Moraes…600785.7143\n    119211SD/RJ/33009SD/RJ/33009/330590regiao_saudemunicipio33009330590SerranaTrajano de Moraes…130.30532.1633714.2857\n    119310SD/RJ/33009SD/SP/35011/351830regiao_saudemunicipio33009351830SerranaGuararema…1404.5312.9151100\n    119411SD/RJ/33009SD/SP/35072/350950regiao_saudemunicipio33009350950SerranaCampinas…1507.879389.5731100\n  \n  \n  \n    1195 rows × 16 columns"
  },
  {
    "objectID": "sections/table_flux.html#regsau---regsau-rj",
    "href": "sections/table_flux.html#regsau---regsau-rj",
    "title": "Fluxos",
    "section": "REGSAU -> REGSAU (RJ)",
    "text": "REGSAU -> REGSAU (RJ)\n\nscale_origin = 'regiao_saude'\nscale_destin = 'regiao_saude'\ndf_regsau_regsau = get_flux_table(scale_origin, scale_destin)\ndf_regsau_regsau[filter_rj(df_regsau_regsau), :]\n\n\n\n  \n  \n    bienioparto_normalorigemdestinoescala_origemescala_destinoid_origemid_destinonome_origemnome_destino…countdist_pondtempo_pondtotalpercent\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    011SD/RJ/33001ND/PB/25012regiao_sauderegiao_saude3300125012Baia da Ilha Grande12ª Região…12485.741898.21100\n    111SD/RJ/33001ND/PI/22005regiao_sauderegiao_saude3300122005Baia da Ilha GrandePlanície Litorânea…13067.572331.661100\n    200SD/RJ/33001SD/ES/32002regiao_sauderegiao_saude3300132002Baia da Ilha GrandeMetropolitana…21229.23919.5372100\n    311SD/RJ/33001SD/ES/32002regiao_sauderegiao_saude3300132002Baia da Ilha GrandeMetropolitana…1704.828573.2271100\n    400SD/RJ/33001SD/RJ/33001regiao_sauderegiao_saude3300133001Baia da Ilha GrandeBaia da Ilha Grande…9230093998.2961\n    510SD/RJ/33001SD/RJ/33001regiao_sauderegiao_saude3300133001Baia da Ilha GrandeBaia da Ilha Grande…244500250097.8\n    601SD/RJ/33001SD/RJ/33001regiao_sauderegiao_saude3300133001Baia da Ilha GrandeBaia da Ilha Grande…271400277397.8723\n    711SD/RJ/33001SD/RJ/33001regiao_sauderegiao_saude3300133001Baia da Ilha GrandeBaia da Ilha Grande…256400261897.9374\n    800SD/RJ/33001SD/RJ/33001regiao_sauderegiao_saude3300133001Baia da Ilha GrandeBaia da Ilha Grande…161379.671676.669391.70394\n    910SD/RJ/33001SD/RJ/33001regiao_sauderegiao_saude3300133001Baia da Ilha GrandeBaia da Ilha Grande…553375.643598.2925002.2\n    1001SD/RJ/33001SD/RJ/33001regiao_sauderegiao_saude3300133001Baia da Ilha GrandeBaia da Ilha Grande…594606.665240.3927732.12766\n    1111SD/RJ/33001SD/RJ/33001regiao_sauderegiao_saude3300133001Baia da Ilha GrandeBaia da Ilha Grande…543930.184235.6826182.06264\n    1210SD/RJ/33001SD/RJ/33002regiao_sauderegiao_saude3300133002Baia da Ilha GrandeBaixada Litorânea…41213.221003.064100\n    1311SD/RJ/33001SD/RJ/33002regiao_sauderegiao_saude3300133002Baia da Ilha GrandeBaixada Litorânea…2370.711333.3172100\n    1401SD/RJ/33001SD/RJ/33003regiao_sauderegiao_saude3300133003Baia da Ilha GrandeCentro-Sul…5342.334276.0925100\n    ⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋱⋮⋮⋮⋮⋮\n    48110SD/RJ/33009SD/RJ/33009regiao_sauderegiao_saude3300933009SerranaSerrana…3119304.381017057295.42852\n    48201SD/RJ/33009SD/RJ/33009regiao_sauderegiao_saude3300933009SerranaSerrana…1546426.086418.9974622.06379\n    48311SD/RJ/33009SD/RJ/33009regiao_sauderegiao_saude3300933009SerranaSerrana…28010701.311439.166404.21687\n    48410SD/RJ/33009SD/SP/35011regiao_sauderegiao_saude3300935011SerranaAlto do Tietê…1404.5312.9151100\n    48511SD/RJ/33009SD/SP/35072regiao_sauderegiao_saude3300935072SerranaRegião Metropolitana de Campinas…1507.879389.5731100\n  \n  \n  \n    486 rows × 16 columns"
  },
  {
    "objectID": "sections/table_flux.html#município---município-rj",
    "href": "sections/table_flux.html#município---município-rj",
    "title": "Fluxos",
    "section": "Município -> Município (RJ)",
    "text": "Município -> Município (RJ)\n\nscale_origin = 'municipio'\nscale_destin = 'municipio'\ndf_mun_mun = get_flux_table(scale_origin, scale_destin)\ndf_mun_mun_rj = df_mun_mun[filter_rj(df_mun_mun), :]\ndf_mun_mun_rj\n\n\n\n  \n  \n    bienioparto_normalorigemdestinoescala_origemescala_destinoid_origemid_destinonome_origemnome_destino…countdist_pondtempo_pondtotalpercent\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    011SD/RJ/33001/330010ND/PI/22005/220770municipiomunicipio330010220770Angra dos ReisParnaíba…13067.572331.661100\n    100SD/RJ/33001/330010SD/ES/32002/320245municipiomunicipio330010320245Angra dos ReisIbatiba…21229.23919.5372100\n    200SD/RJ/33001/330010SD/RJ/33001/330010municipiomunicipio330010330010Angra dos ReisAngra dos Reis…64900649100\n    310SD/RJ/33001/330010SD/RJ/33001/330010municipiomunicipio330010330010Angra dos ReisAngra dos Reis…1775001775100\n    401SD/RJ/33001/330010SD/RJ/33001/330010municipiomunicipio330010330010Angra dos ReisAngra dos Reis…1783001783100\n    511SD/RJ/33001/330010SD/RJ/33001/330010municipiomunicipio330010330010Angra dos ReisAngra dos Reis…1863001863100\n    611SD/RJ/33001/330010SD/RJ/33001/330260municipiomunicipio330010330260Angra dos ReisMangaratiba…156.788547.11100\n    710SD/RJ/33001/330010SD/RJ/33001/330380municipiomunicipio330010330380Angra dos ReisParaty…8768.343992.1738100\n    811SD/RJ/33001/330010SD/RJ/33001/330380municipiomunicipio330010330380Angra dos ReisParaty…111056.471364.2411100\n    910SD/RJ/33001/330010SD/RJ/33002/330023municipiomunicipio330010330023Angra dos ReisArmação dos Búzios…1317.318254.0321100\n    1010SD/RJ/33001/330010SD/RJ/33002/330130municipiomunicipio330010330130Angra dos ReisCasimiro de Abreu…1279.628216.7981100\n    1110SD/RJ/33001/330010SD/RJ/33002/330550municipiomunicipio330010330550Angra dos ReisSaquarema…1237.112204.4921100\n    1211SD/RJ/33001/330010SD/RJ/33004/330040municipiomunicipio330010330040Angra dos ReisBarra Mansa…195.8852115.6581100\n    1301SD/RJ/33001/330010SD/RJ/33004/330400municipiomunicipio330010330400Angra dos ReisPiraí…2266.772211.4772100\n    1410SD/RJ/33001/330010SD/RJ/33004/330411municipiomunicipio330010330411Angra dos ReisPorto Real…3355.744397.873100\n    ⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋱⋮⋮⋮⋮⋮\n    248100SD/RJ/33009/330590SD/RJ/33009/330460municipiomunicipio330590330460Trajano de MoraesSanta Maria Madalena…5151.525160.8175100\n    248201SD/RJ/33009/330590SD/RJ/33009/330460municipiomunicipio330590330460Trajano de MoraesSanta Maria Madalena…15454.575482.4515100\n    248300SD/RJ/33009/330590SD/RJ/33009/330590municipiomunicipio330590330590Trajano de MoraesTrajano de Moraes…4004100\n    248401SD/RJ/33009/330590SD/RJ/33009/330590municipiomunicipio330590330590Trajano de MoraesTrajano de Moraes…390039100\n    248511SD/RJ/33009/330590SD/RJ/33009/330590municipiomunicipio330590330590Trajano de MoraesTrajano de Moraes…6006100\n  \n  \n  \n    2486 rows × 16 columns"
  },
  {
    "objectID": "sections/table_flux.html#uf---região",
    "href": "sections/table_flux.html#uf---região",
    "title": "Fluxos",
    "section": "UF -> Região",
    "text": "UF -> Região\n\nscale_origin = 'uf'\nscale_destin = 'regiao'\ndf_uf_regsau = get_flux_table(scale_origin, scale_destin)\n# df_uf_regsau[filter_rj(df_uf_regsau), :]\ndf_uf_regsau\n\n\n\n  \n  \n    bienioparto_normalorigemdestinoescala_origemescala_destinoid_origemid_destinonome_origemnome_destino…countdist_pondtempo_pondtotalpercent\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    000CO/DFCOufregiaoDFCODistrito FederalCentro-Oeste…20906002091099.9809\n    110CO/DFCOufregiaoDFCODistrito FederalCentro-Oeste…19949001999099.7949\n    201CO/DFCOufregiaoDFCODistrito FederalCentro-Oeste…40969004098199.9707\n    311CO/DFCOufregiaoDFCODistrito FederalCentro-Oeste…33309003335199.8741\n    400CO/DFCOufregiaoDFCODistrito FederalCentro-Oeste…4305.25265.447209100.0191296\n    510CO/DFCOufregiaoDFCODistrito FederalCentro-Oeste…418201.446862.07199900.205103\n    601CO/DFCOufregiaoDFCODistrito FederalCentro-Oeste…123103.872606.93409810.0292819\n    711CO/DFCOufregiaoDFCODistrito FederalCentro-Oeste…426997.036154.23333510.125933\n    800CO/DFNDufregiaoDFNDDistrito FederalNordeste…22535.681909.42100\n    910CO/DFNDufregiaoDFNDDistrito FederalNordeste…5798911.674126.857100\n    1001CO/DFNDufregiaoDFNDDistrito FederalNordeste…812993.49598.68100\n    1111CO/DFNDufregiaoDFNDDistrito FederalNordeste…8313942110465783100\n    1201CO/DFNTufregiaoDFNTDistrito FederalNorte…45378.799122.134100\n    1311CO/DFNTufregiaoDFNTDistrito FederalNorte…23625.383392.122100\n    1400CO/DFSDufregiaoDFSDDistrito FederalSudeste…83365.922773.148100\n    ⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋱⋮⋮⋮⋮⋮\n    77911SL/SCSLufregiaoSCSLSanta CatarinaSul…126179730.676301.6600252.10079\n    78000SL/SCSLufregiaoSCSLSanta CatarinaSul…1069261.438267.82407650.260027\n    78110SL/SCSLufregiaoSCSLSanta CatarinaSul…13627813.824446.8388470.350091\n    78201SL/SCSLufregiaoSCSLSanta CatarinaSul…16213621.911980.6598260.270785\n    78311SL/SCSLufregiaoSCSLSanta CatarinaSul…15838894.434123.3600250.263224\n  \n  \n  \n    784 rows × 16 columns"
  },
  {
    "objectID": "sections/table_locs.html",
    "href": "sections/table_locs.html",
    "title": "Localidades",
    "section": "",
    "text": "from utils import get_path\nfrom datatable import dt, f as dtf, by, as_type"
  },
  {
    "objectID": "sections/table_locs.html#municípios",
    "href": "sections/table_locs.html#municípios",
    "title": "Localidades",
    "section": "Municípios",
    "text": "Municípios\n\nColunas da tabela\n\npath_munic = get_path('LOCALIDADES', 'municipios.csv.gzip')\ndf_munic = dt.fread(path_munic, columns={'regiao': 'nome_regiao'})\ndf_munic\n\n\n\n  \n  \n    cod_municipionome_municipiocapitalufcod_ufnome_ufnome_regiaolatitudelongitude\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    0520005Abadia de Goiás0GO52GoiásCentro-Oeste−16.7573−49.4412\n    1310010Abadia dos Dourados0MG31Minas GeraisSudeste−18.4831−47.3916\n    2520010Abadiânia0GO52GoiásCentro-Oeste−16.197−48.7057\n    3310020Abaeté0MG31Minas GeraisSudeste−19.1551−45.4444\n    4150010Abaetetuba0PA15ParáNorte−1.72183−48.8788\n    5230010Abaiara0CE23CearáNordeste−7.34588−39.0416\n    6290010Abaíra0BA29BahiaNordeste−13.2488−41.6619\n    7290020Abaré0BA29BahiaNordeste−8.72073−39.1162\n    8410010Abatiá0PR41ParanáSul−23.3049−50.3133\n    9420005Abdon Batista0SC42Santa CatarinaSul−27.6126−51.0233\n    10150013Abel Figueiredo0PA15ParáNorte−4.95333−48.3933\n    11420010Abelardo Luz0SC42Santa CatarinaSul−26.5716−52.3229\n    12310030Abre Campo0MG31Minas GeraisSudeste−20.2996−42.4743\n    13260005Abreu e Lima0PE26PernambucoNordeste−7.90072−34.8984\n    14170025Abreulândia0TO17TocantinsNorte−9.62101−49.1518\n    ⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮\n    5565293360Xique-Xique0BA29BahiaNordeste−10.823−42.7245\n    5566251740Zabelê0PB25ParaíbaNordeste−8.07901−37.1057\n    5567355715Zacarias0SP35São PauloSudeste−21.0506−50.0552\n    5568211400Zé Doca0MA21MaranhãoNordeste−3.27014−45.6553\n    5569421985Zortéa0SC42Santa CatarinaSul−27.4521−51.552\n  \n  \n  \n    5570 rows × 9 columns"
  },
  {
    "objectID": "sections/table_locs.html#indicadores",
    "href": "sections/table_locs.html#indicadores",
    "title": "Localidades",
    "section": "Indicadores",
    "text": "Indicadores\n\nColunas da tabela\n\ncols_indc = {\n  'CÓDIGO': 'codigo',\n  'Tipo Localidade': 'tipo',\n  'CIR': 'nome_regiao_saude',\n  'Grupos de Regiões de Saúde segundo Condições Socioeconômicas e de Saúde - 2016': 'socioecon',\n  ...: None\n}\n\n\npath_indc = path_indc = get_path('INDICADORES', 'indicadores.csv.gzip')\ndf_indc = dt.fread(path_indc, columns=cols_indc)\ndf_indc = df_indc.to_pandas()\ndf_indc\n\n\n\n\n\n  \n    \n      \n      codigo\n      tipo\n      nome_regiao_saude\n      socioecon\n    \n  \n  \n    \n      0\n      15.001\n      REGSAU\n      Araguaia\n      1\n    \n    \n      1\n      15.002\n      REGSAU\n      Baixo Amazonas\n      1\n    \n    \n      2\n      15.003\n      REGSAU\n      Carajás\n      2\n    \n    \n      3\n      15.004\n      REGSAU\n      Lago de Tucuruí\n      1\n    \n    \n      4\n      15.013\n      REGSAU\n      Marajó I\n      1\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      6003\n      171.780\n      MUNIC\n      Sudeste\n      1\n    \n    \n      6004\n      171.800\n      MUNIC\n      Sudeste\n      1\n    \n    \n      6005\n      171.865\n      MUNIC\n      Sudeste\n      1\n    \n    \n      6006\n      172.090\n      MUNIC\n      Sudeste\n      1\n    \n    \n      6007\n      172.093\n      MUNIC\n      Sudeste\n      1\n    \n  \n\n6008 rows × 4 columns\n\n\n\n\n\nIndicadores por município\n\ndf_mun = df_indc.loc[df_indc['tipo'] == 'MUNIC'].copy()\ndf_mun.drop(columns=['tipo'], inplace=True)\ndf_mun['codigo'] = df_mun['codigo'].apply(lambda x: (str(x).replace('.', '') + '00')[:6])\ndf_mun['prefix'] = df_mun['codigo'].apply(lambda x: str(x)[:2])\ndf_mun = df_mun.rename(columns={'codigo': 'cod_municipio'})\ndf_mun\n\n\n\n\n\n  \n    \n      \n      cod_municipio\n      nome_regiao_saude\n      socioecon\n      prefix\n    \n  \n  \n    \n      13\n      310600\n      João Monlevade\n      3\n      31\n    \n    \n      14\n      313620\n      João Monlevade\n      3\n      31\n    \n    \n      15\n      314470\n      João Monlevade\n      3\n      31\n    \n    \n      16\n      315570\n      João Monlevade\n      3\n      31\n    \n    \n      17\n      316100\n      João Monlevade\n      3\n      31\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      6003\n      171780\n      Sudeste\n      1\n      17\n    \n    \n      6004\n      171800\n      Sudeste\n      1\n      17\n    \n    \n      6005\n      171865\n      Sudeste\n      1\n      17\n    \n    \n      6006\n      172090\n      Sudeste\n      1\n      17\n    \n    \n      6007\n      172093\n      Sudeste\n      1\n      17\n    \n  \n\n5570 rows × 4 columns\n\n\n\n\n\nIndicadores por Região de Saúde\n\ndf_regsau = df_indc[df_indc['tipo'] == 'REGSAU'].copy()\ndf_regsau.drop(columns=['tipo', 'socioecon'], inplace=True)\ndf_regsau['codigo'] = df_regsau['codigo'].apply(lambda x: (str(x).replace('.', '') + '0')[:5])\ndf_regsau['prefix'] = df_regsau['codigo'].apply(lambda x: str(x)[:2])\ndf_regsau = df_regsau.rename(columns={'codigo': 'cod_regiao_saude'})\ndf_regsau\n\n\n\n\n\n  \n    \n      \n      cod_regiao_saude\n      nome_regiao_saude\n      prefix\n    \n  \n  \n    \n      0\n      15001\n      Araguaia\n      15\n    \n    \n      1\n      15002\n      Baixo Amazonas\n      15\n    \n    \n      2\n      15003\n      Carajás\n      15\n    \n    \n      3\n      15004\n      Lago de Tucuruí\n      15\n    \n    \n      4\n      15013\n      Marajó I\n      15\n    \n    \n      ...\n      ...\n      ...\n      ...\n    \n    \n      5431\n      17001\n      Médio Norte Araguaia\n      17\n    \n    \n      5432\n      28005\n      Nossa Senhora da Glória\n      28\n    \n    \n      5433\n      28006\n      Nossa Senhora do Socorro\n      28\n    \n    \n      5434\n      28007\n      Propriá\n      28\n    \n    \n      5435\n      17003\n      Sudeste\n      17\n    \n  \n\n438 rows × 3 columns\n\n\n\n\n\nMerge\n\ndf_indc = df_mun.merge(df_regsau, how='left', left_on=['prefix', 'nome_regiao_saude'], right_on=['prefix', 'nome_regiao_saude'])\ndf_indc = dt.Frame(df_indc)\ndf_indc[:, 'cod_municipio'] = df_indc[:, dt.as_type(dtf.cod_municipio, int)]\ndf_indc\n\n\n\n  \n  \n    cod_municipionome_regiao_saudesocioeconprefixcod_regiao_saude\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    0310600João Monlevade33131035\n    1313620João Monlevade33131035\n    2314470João Monlevade33131035\n    3315570João Monlevade33131035\n    4316100João Monlevade33131035\n    5310855João Pinheiro23131036\n    6313630João Pinheiro23131036\n    7313753João Pinheiro23131036\n    8310280Juiz de Fora Lima Duarte Bom Jardim Min53131037\n    9310360Juiz de Fora Lima Duarte Bom Jardim Min53131037\n    10310610Juiz de Fora Lima Duarte Bom Jardim Min53131037\n    11310680Juiz de Fora Lima Duarte Bom Jardim Min53131037\n    12310720Juiz de Fora Lima Duarte Bom Jardim Min53131037\n    13310750Juiz de Fora Lima Duarte Bom Jardim Min53131037\n    14311590Juiz de Fora Lima Duarte Bom Jardim Min53131037\n    ⋮⋮⋮⋮⋮⋮\n    5565171780Sudeste11717003\n    5566171800Sudeste11717003\n    5567171865Sudeste11717003\n    5568172090Sudeste11717003\n    5569172093Sudeste11717003\n  \n  \n  \n    5570 rows × 5 columns"
  },
  {
    "objectID": "sections/table_locs.html#juntando-com-outras",
    "href": "sections/table_locs.html#juntando-com-outras",
    "title": "Localidades",
    "section": "Juntando com outras",
    "text": "Juntando com outras\n\nJuntando com Indicadores\n\ndf_indc.key = 'cod_municipio'\ndf_locs = df_munic[:, :, dt.join(df_indc)]\ndf_locs\n\n\n\n  \n  \n    cod_municipionome_municipiocapitalufcod_ufnome_ufnome_regiaolatitudelongitudenome_regiao_saudesocioeconprefixcod_regiao_saude\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    0520005Abadia de Goiás0GO52GoiásCentro-Oeste−16.7573−49.4412Central55252001\n    1310010Abadia dos Dourados0MG31Minas GeraisSudeste−18.4831−47.3916Patrocínio Monte Carmelo23131052\n    2520010Abadiânia0GO52GoiásCentro-Oeste−16.197−48.7057Pirineus35252011\n    3310020Abaeté0MG31Minas GeraisSudeste−19.1551−45.4444Sete Lagoas33131067\n    4150010Abaetetuba0PA15ParáNorte−1.72183−48.8788Tocantins11515011\n    5230010Abaiara0CE23CearáNordeste−7.34588−39.041619ª Região Brejo Santo12323019\n    6290010Abaíra0BA29BahiaNordeste−13.2488−41.6619Seabra12929023\n    7290020Abaré0BA29BahiaNordeste−8.72073−39.1162Paulo Afonso12929017\n    8410010Abatiá0PR41ParanáSul−23.3049−50.313318ª RS Cornélio Procópio34141018\n    9420005Abdon Batista0SC42Santa CatarinaSul−27.6126−51.0233Meio Oeste34242008\n    10150013Abel Figueiredo0PA15ParáNorte−4.95333−48.3933Carajás21515003\n    11420010Abelardo Luz0SC42Santa CatarinaSul−26.5716−52.3229Xanxerê34242003\n    12310030Abre Campo0MG31Minas GeraisSudeste−20.2996−42.4743Manhuaçu13131041\n    13260005Abreu e Lima0PE26PernambucoNordeste−7.90072−34.8984Recife52626010\n    14170025Abreulândia0TO17TocantinsNorte−9.62101−49.1518Cantão21717007\n    ⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮\n    5565293360Xique-Xique0BA29BahiaNordeste−10.823−42.7245Irecê12929010\n    5566251740Zabelê0PB25ParaíbaNordeste−8.07901−37.10575ª Região12525005\n    5567355715Zacarias0SP35São PauloSudeste−21.0506−50.0552José Bonifácio33535156\n    5568211400Zé Doca0MA21MaranhãoNordeste−3.27014−45.6553Zé Doca12121019\n    5569421985Zortéa0SC42Santa CatarinaSul−27.4521−51.552Meio Oeste34242008\n  \n  \n  \n    5570 rows × 13 columns"
  },
  {
    "objectID": "sections/table_locs.html#sigla-região",
    "href": "sections/table_locs.html#sigla-região",
    "title": "Localidades",
    "section": "Sigla Região",
    "text": "Sigla Região\n\nsigla_regioes = {\n  'Norte': 'NT',\n  'Nordeste': 'ND',\n  'Centro-Oeste': 'CO',\n  'Sudeste': 'SD',\n  'Sul': 'SL',\n}\n\n\nsiglas_regs = df_locs[:, 'nome_regiao'].to_pandas()['nome_regiao'].map(sigla_regioes)\ndf_locs[:, 'sigla_regiao'] = siglas_regs\ndf_locs\n\n\n\n  \n  \n    cod_municipionome_municipiocapitalufcod_ufnome_ufnome_regiaolatitudelongitudenome_regiao_saudesocioeconprefixcod_regiao_saudesigla_regiao\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    0520005Abadia de Goiás0GO52GoiásCentro-Oeste−16.7573−49.4412Central55252001CO\n    1310010Abadia dos Dourados0MG31Minas GeraisSudeste−18.4831−47.3916Patrocínio Monte Carmelo23131052SD\n    2520010Abadiânia0GO52GoiásCentro-Oeste−16.197−48.7057Pirineus35252011CO\n    3310020Abaeté0MG31Minas GeraisSudeste−19.1551−45.4444Sete Lagoas33131067SD\n    4150010Abaetetuba0PA15ParáNorte−1.72183−48.8788Tocantins11515011NT\n    5230010Abaiara0CE23CearáNordeste−7.34588−39.041619ª Região Brejo Santo12323019ND\n    6290010Abaíra0BA29BahiaNordeste−13.2488−41.6619Seabra12929023ND\n    7290020Abaré0BA29BahiaNordeste−8.72073−39.1162Paulo Afonso12929017ND\n    8410010Abatiá0PR41ParanáSul−23.3049−50.313318ª RS Cornélio Procópio34141018SL\n    9420005Abdon Batista0SC42Santa CatarinaSul−27.6126−51.0233Meio Oeste34242008SL\n    10150013Abel Figueiredo0PA15ParáNorte−4.95333−48.3933Carajás21515003NT\n    11420010Abelardo Luz0SC42Santa CatarinaSul−26.5716−52.3229Xanxerê34242003SL\n    12310030Abre Campo0MG31Minas GeraisSudeste−20.2996−42.4743Manhuaçu13131041SD\n    13260005Abreu e Lima0PE26PernambucoNordeste−7.90072−34.8984Recife52626010ND\n    14170025Abreulândia0TO17TocantinsNorte−9.62101−49.1518Cantão21717007NT\n    ⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮\n    5565293360Xique-Xique0BA29BahiaNordeste−10.823−42.7245Irecê12929010ND\n    5566251740Zabelê0PB25ParaíbaNordeste−8.07901−37.10575ª Região12525005ND\n    5567355715Zacarias0SP35São PauloSudeste−21.0506−50.0552José Bonifácio33535156SD\n    5568211400Zé Doca0MA21MaranhãoNordeste−3.27014−45.6553Zé Doca12121019ND\n    5569421985Zortéa0SC42Santa CatarinaSul−27.4521−51.552Meio Oeste34242008SL\n  \n  \n  \n    5570 rows × 14 columns"
  },
  {
    "objectID": "sections/table_locs.html#criando-código-concatenado",
    "href": "sections/table_locs.html#criando-código-concatenado",
    "title": "Localidades",
    "section": "Criando código concatenado",
    "text": "Criando código concatenado\n\ncodigos = list()\ndf_locs_pd = df_locs.to_pandas()\nfor i, row in df_locs_pd.iterrows():\n  codigo = f\"{row['sigla_regiao']}/{row['uf']}/{row['cod_regiao_saude']}/{row['cod_municipio']}\"\n  codigos.append(codigo)\ndf_locs_pd['codigo'] = codigos\ndf_locs = dt.Frame(df_locs_pd)\ndf_locs\n\n\n\n  \n  \n    cod_municipionome_municipiocapitalufcod_ufnome_ufnome_regiaolatitudelongitudenome_regiao_saudesocioeconprefixcod_regiao_saudesigla_regiaocodigo\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    0520005Abadia de Goiás0GO52GoiásCentro-Oeste−16.7573−49.4412Central55252001COCO/GO/52001/520005\n    1310010Abadia dos Dourados0MG31Minas GeraisSudeste−18.4831−47.3916Patrocínio Monte Carmelo23131052SDSD/MG/31052/310010\n    2520010Abadiânia0GO52GoiásCentro-Oeste−16.197−48.7057Pirineus35252011COCO/GO/52011/520010\n    3310020Abaeté0MG31Minas GeraisSudeste−19.1551−45.4444Sete Lagoas33131067SDSD/MG/31067/310020\n    4150010Abaetetuba0PA15ParáNorte−1.72183−48.8788Tocantins11515011NTNT/PA/15011/150010\n    5230010Abaiara0CE23CearáNordeste−7.34588−39.041619ª Região Brejo Santo12323019NDND/CE/23019/230010\n    6290010Abaíra0BA29BahiaNordeste−13.2488−41.6619Seabra12929023NDND/BA/29023/290010\n    7290020Abaré0BA29BahiaNordeste−8.72073−39.1162Paulo Afonso12929017NDND/BA/29017/290020\n    8410010Abatiá0PR41ParanáSul−23.3049−50.313318ª RS Cornélio Procópio34141018SLSL/PR/41018/410010\n    9420005Abdon Batista0SC42Santa CatarinaSul−27.6126−51.0233Meio Oeste34242008SLSL/SC/42008/420005\n    10150013Abel Figueiredo0PA15ParáNorte−4.95333−48.3933Carajás21515003NTNT/PA/15003/150013\n    11420010Abelardo Luz0SC42Santa CatarinaSul−26.5716−52.3229Xanxerê34242003SLSL/SC/42003/420010\n    12310030Abre Campo0MG31Minas GeraisSudeste−20.2996−42.4743Manhuaçu13131041SDSD/MG/31041/310030\n    13260005Abreu e Lima0PE26PernambucoNordeste−7.90072−34.8984Recife52626010NDND/PE/26010/260005\n    14170025Abreulândia0TO17TocantinsNorte−9.62101−49.1518Cantão21717007NTNT/TO/17007/170025\n    ⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮\n    5565293360Xique-Xique0BA29BahiaNordeste−10.823−42.7245Irecê12929010NDND/BA/29010/293360\n    5566251740Zabelê0PB25ParaíbaNordeste−8.07901−37.10575ª Região12525005NDND/PB/25005/251740\n    5567355715Zacarias0SP35São PauloSudeste−21.0506−50.0552José Bonifácio33535156SDSD/SP/35156/355715\n    5568211400Zé Doca0MA21MaranhãoNordeste−3.27014−45.6553Zé Doca12121019NDND/MA/21019/211400\n    5569421985Zortéa0SC42Santa CatarinaSul−27.4521−51.552Meio Oeste34242008SLSL/SC/42008/421985\n  \n  \n  \n    5570 rows × 15 columns"
  },
  {
    "objectID": "sections/table_locs.html#ajustando-colunas",
    "href": "sections/table_locs.html#ajustando-colunas",
    "title": "Localidades",
    "section": "Ajustando colunas",
    "text": "Ajustando colunas\n\ncols_order = [\n  'codigo',\n  'cod_municipio',\n  'nome_municipio',\n  'capital',\n  'cod_regiao_saude',\n  'nome_regiao_saude',\n  'cod_uf',\n  'uf',\n  'nome_uf',\n  'sigla_regiao',\n  'nome_regiao',\n  'socioecon',\n  'latitude',\n  'longitude',\n]\n\n\ndf_locs = df_locs[:, cols_order]\ndf_locs\n\n\n\n  \n  \n    codigocod_municipionome_municipiocapitalcod_regiao_saudenome_regiao_saudecod_ufufnome_ufsigla_regiaonome_regiaosocioeconlatitudelongitude\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    0CO/GO/52001/520005520005Abadia de Goiás052001Central52GOGoiásCOCentro-Oeste5−16.7573−49.4412\n    1SD/MG/31052/310010310010Abadia dos Dourados031052Patrocínio Monte Carmelo31MGMinas GeraisSDSudeste2−18.4831−47.3916\n    2CO/GO/52011/520010520010Abadiânia052011Pirineus52GOGoiásCOCentro-Oeste3−16.197−48.7057\n    3SD/MG/31067/310020310020Abaeté031067Sete Lagoas31MGMinas GeraisSDSudeste3−19.1551−45.4444\n    4NT/PA/15011/150010150010Abaetetuba015011Tocantins15PAParáNTNorte1−1.72183−48.8788\n    5ND/CE/23019/230010230010Abaiara02301919ª Região Brejo Santo23CECearáNDNordeste1−7.34588−39.0416\n    6ND/BA/29023/290010290010Abaíra029023Seabra29BABahiaNDNordeste1−13.2488−41.6619\n    7ND/BA/29017/290020290020Abaré029017Paulo Afonso29BABahiaNDNordeste1−8.72073−39.1162\n    8SL/PR/41018/410010410010Abatiá04101818ª RS Cornélio Procópio41PRParanáSLSul3−23.3049−50.3133\n    9SL/SC/42008/420005420005Abdon Batista042008Meio Oeste42SCSanta CatarinaSLSul3−27.6126−51.0233\n    10NT/PA/15003/150013150013Abel Figueiredo015003Carajás15PAParáNTNorte2−4.95333−48.3933\n    11SL/SC/42003/420010420010Abelardo Luz042003Xanxerê42SCSanta CatarinaSLSul3−26.5716−52.3229\n    12SD/MG/31041/310030310030Abre Campo031041Manhuaçu31MGMinas GeraisSDSudeste1−20.2996−42.4743\n    13ND/PE/26010/260005260005Abreu e Lima026010Recife26PEPernambucoNDNordeste5−7.90072−34.8984\n    14NT/TO/17007/170025170025Abreulândia017007Cantão17TOTocantinsNTNorte2−9.62101−49.1518\n    ⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮\n    5565ND/BA/29010/293360293360Xique-Xique029010Irecê29BABahiaNDNordeste1−10.823−42.7245\n    5566ND/PB/25005/251740251740Zabelê0250055ª Região25PBParaíbaNDNordeste1−8.07901−37.1057\n    5567SD/SP/35156/355715355715Zacarias035156José Bonifácio35SPSão PauloSDSudeste3−21.0506−50.0552\n    5568ND/MA/21019/211400211400Zé Doca021019Zé Doca21MAMaranhãoNDNordeste1−3.27014−45.6553\n    5569SL/SC/42008/421985421985Zortéa042008Meio Oeste42SCSanta CatarinaSLSul3−27.4521−51.552\n  \n  \n  \n    5570 rows × 14 columns"
  },
  {
    "objectID": "sections/table_procs.html",
    "href": "sections/table_procs.html",
    "title": "Procedimentos",
    "section": "",
    "text": "import pandas as pd\nfrom utils import get_path, group_cols\nfrom datatable import dt, f, by, as_type"
  },
  {
    "objectID": "sections/table_procs.html#localidades",
    "href": "sections/table_procs.html#localidades",
    "title": "Procedimentos",
    "section": "Localidades",
    "text": "Localidades\n\npath_locs = get_path('LOCALIDADES', 'localidades.csv.gzip')\ndf_locs = dt.fread(path_locs)\ndf_locs\n\n\n\n  \n  \n    codigocod_municipionome_municipiocapitalcod_regiao_saudenome_regiao_saudecod_ufufnome_ufsigla_regiaonome_regiaosocioeconlatitudelongitude\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    0CO/GO/52001/520005520005Abadia de Goiás052001Central52GOGoiásCOCentro-Oeste5−16.7573−49.4412\n    1SD/MG/31052/310010310010Abadia dos Dourados031052Patrocínio Monte Carmelo31MGMinas GeraisSDSudeste2−18.4831−47.3916\n    2CO/GO/52011/520010520010Abadiânia052011Pirineus52GOGoiásCOCentro-Oeste3−16.197−48.7057\n    3SD/MG/31067/310020310020Abaeté031067Sete Lagoas31MGMinas GeraisSDSudeste3−19.1551−45.4444\n    4NT/PA/15011/150010150010Abaetetuba015011Tocantins15PAParáNTNorte1−1.72183−48.8788\n    5ND/CE/23019/230010230010Abaiara02301919ª Região Brejo Santo23CECearáNDNordeste1−7.34588−39.0416\n    6ND/BA/29023/290010290010Abaíra029023Seabra29BABahiaNDNordeste1−13.2488−41.6619\n    7ND/BA/29017/290020290020Abaré029017Paulo Afonso29BABahiaNDNordeste1−8.72073−39.1162\n    8SL/PR/41018/410010410010Abatiá04101818ª RS Cornélio Procópio41PRParanáSLSul3−23.3049−50.3133\n    9SL/SC/42008/420005420005Abdon Batista042008Meio Oeste42SCSanta CatarinaSLSul3−27.6126−51.0233\n    10NT/PA/15003/150013150013Abel Figueiredo015003Carajás15PAParáNTNorte2−4.95333−48.3933\n    11SL/SC/42003/420010420010Abelardo Luz042003Xanxerê42SCSanta CatarinaSLSul3−26.5716−52.3229\n    12SD/MG/31041/310030310030Abre Campo031041Manhuaçu31MGMinas GeraisSDSudeste1−20.2996−42.4743\n    13ND/PE/26010/260005260005Abreu e Lima026010Recife26PEPernambucoNDNordeste5−7.90072−34.8984\n    14NT/TO/17007/170025170025Abreulândia017007Cantão17TOTocantinsNTNorte2−9.62101−49.1518\n    ⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮\n    5565ND/BA/29010/293360293360Xique-Xique029010Irecê29BABahiaNDNordeste1−10.823−42.7245\n    5566ND/PB/25005/251740251740Zabelê0250055ª Região25PBParaíbaNDNordeste1−8.07901−37.1057\n    5567SD/SP/35156/355715355715Zacarias035156José Bonifácio35SPSão PauloSDSudeste3−21.0506−50.0552\n    5568ND/MA/21019/211400211400Zé Doca021019Zé Doca21MAMaranhãoNDNordeste1−3.27014−45.6553\n    5569SL/SC/42008/421985421985Zortéa042008Meio Oeste42SCSanta CatarinaSLSul3−27.4521−51.552\n  \n  \n  \n    5570 rows × 14 columns"
  },
  {
    "objectID": "sections/table_procs.html#distâncias",
    "href": "sections/table_procs.html#distâncias",
    "title": "Procedimentos",
    "section": "Distâncias",
    "text": "Distâncias\n\ncols_dist = {\n  'origem': 'cod_municipio',\n  'destino': 'hosp_cod_municipio',\n  'distancia (km)': 'distancia (km)',\n  'tempo (min)': 'tempo (min)',\n  ...: None,\n}\n\n\npath_dist = get_path('DISTANCIAS', 'deslocamentos.csv.gzip')\ndf_dist = dt.fread(path_dist, columns=cols_dist)\ndf_dist\n\n\n\n  \n  \n    cod_municipiohosp_cod_municipiodistancia (km)tempo (min)\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    035503035503000\n    133045533045500\n    213026013026000\n    353001053001000\n    423044023044000\n    529274029274000\n    631062031062000\n    715014015014000\n    843149043149000\n    941069041069000\n    1027043027043000\n    1152087052087000\n    1235188035188000\n    1322110022110000\n    1450027050027000\n    ⋮⋮⋮⋮⋮\n    71,833530010521308376.351360.035\n    71,834530010521770328.373283.283\n    71,835530010522000153.655146.227\n    71,836530010522020515.668411.118\n    71,837530010522045207.413183.168\n  \n  \n  \n    71,838 rows × 4 columns"
  },
  {
    "objectID": "sections/table_procs.html#rotas-gmaps",
    "href": "sections/table_procs.html#rotas-gmaps",
    "title": "Procedimentos",
    "section": "Rotas Gmaps",
    "text": "Rotas Gmaps\n\nColunas\n\ncols_gmaps = [\n  'origem', 'destino', 'count',\n  'distance (value)', 'duration (value)',\n  'duration_in_traffic (value)',\n]\n\n\n\nCarregando tabela\n\npath_routes = get_path('GESTANTES', f'gmaps/routes.csv.gzip')\ndf_files = dt.fread(path_routes)\ndf_files\n\n\n\n  \n  \n    statusorigemdestinoorigin_addressesdestination_addressesorigem_latitudeorigem_longitudedestino_latitudedestino_longitudehour…duration (value)duration (text)duration_in_traffic (value)duration_in_traffic (text)count\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    0ZERO_RESULTS292070291360-14.1035,-39.0137-14.793,-39.046−14.1035−39.0137−14.793−39.0466…NANANA678\n    1ZERO_RESULTS290515293330-14.3347,-40.9175-14.8615,-40.8442−14.3347−40.9175−14.8615−40.84426…NANANA883\n    2OK330330330490R. Maria Bregua, 37 - São Lourenço, Niterói - RJ, 24120-007, BrasilR. Temistocles de Almeida, 134 - Camarão, São Gonçalo - RJ, 24436-820, Brasil−22.8832−43.1034−22.8268−43.06346…227138 minutosNANA204\n    3OK330330330185R. Maria Bregua, 37 - São Lourenço, Niterói - RJ, 24120-007, BrasilR. João da Silva Maia, 14 - Parque Santo Antonio, Guapimirim - RJ, 25945-348, Brasil−22.8832−43.1034−22.5347−42.98956…123883 horas 26 minutosNANA2\n    4OK330330330023R. Maria Bregua, 37 - São Lourenço, Niterói - RJ, 24120-007, BrasilAv. José Bento Ribeiro Dantas, 842, Búzios - RJ, 28950-000, Brasil−22.8832−43.1034−22.7528−41.88466…288708 horas 1 minutoNANA1\n    5OK330330330170R. Maria Bregua, 37 - São Lourenço, Niterói - RJ, 24120-007, BrasilR. Ana Neri, 18 - Jardim Vinte e Cinco de Agosto, Duque de Caxias - RJ, 25580-430, Brasil−22.8832−43.1034−22.7858−43.30496…49951 hora 23 minutosNANA25\n    6ZERO_RESULTS330330330130-22.8832,-43.1034-22.4812,-42.2066−22.8832−43.1034−22.4812−42.20666…NANANA2\n    7ZERO_RESULTS330330330452-22.8832,-43.1034-22.5174,-41.9475−22.8832−43.1034−22.5174−41.94756…NANANA3\n    8OK330330330080R. Maria Bregua, 37 - São Lourenço, Niterói - RJ, 24120-007, BrasilRua Bernardo dos Santos 34 Sobrado - Centro, Cachoeiras de Macacu - RJ, 28680-000, Brasil−22.8832−43.1034−22.4658−42.65236…129303 horas 36 minutosNANA9\n    9OK330330330350R. Maria Bregua, 37 - São Lourenço, Niterói - RJ, 24120-007, BrasilAv. Gov. Amaral Peixoto, 100 - Centro, Nova Iguaçu - RJ, 26215-010, Brasil−22.8832−43.1034−22.7556−43.46036…68881 hora 55 minutosNANA4\n    10OK330330330455R. Maria Bregua, 37 - São Lourenço, Niterói - RJ, 24120-007, BrasilR. Laura de Araújo, 178 - Cidade Nova, Rio de Janeiro - RJ, 20211-170, Brasil−22.8832−43.1034−22.9129−43.20036…320253 minutosNANA311\n    11OK330330330510R. Maria Bregua, 37 - São Lourenço, Niterói - RJ, 24120-007, BrasilR. Profa. Francisca César, 165 - Centro, São João de Meriti - RJ, 25520-130, Brasil−22.8832−43.1034−22.8058−43.37296…62411 hora 44 minutosNANA14\n    12OK330330330045R. Maria Bregua, 37 - São Lourenço, Niterói - RJ, 24120-007, BrasilAv. Florípes da Rocha, 402 - Centro, Belford Roxo - RJ, 26113-340, Brasil−22.8832−43.1034−22.764−43.39926…75692 horas 6 minutosNANA7\n    13OK330330330550R. Maria Bregua, 37 - São Lourenço, Niterói - RJ, 24120-007, BrasilAv. Oito de Maio, 1649 - Areal, Saquarema - RJ, 28990-690, Brasil−22.8832−43.1034−22.9292−42.50996…174654 horas 51 minutosNANA7\n    14ZERO_RESULTS330330330340-22.8832,-43.1034-22.2932,-42.5377−22.8832−43.1034−22.2932−42.53776…NANANA1\n    ⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋱⋮⋮⋮⋮⋮\n    65,933OK291810280290R. Delmiro Gouveia, 109 - Centro, Jeremoabo - BA, 48540-000, BrasilR. Cap. José Ferreira Neto, 244 - Centro, Itabaiana - SE, 49500-000, Brasil−10.0685−38.3471−10.6826−37.427318…75192 horas 5 minutos79082 horas 12 minutos6\n    65,934OK431075431310Av. Gen. Osório, 20, Ivorá - RS, 98160-000, BrasilR. Raimundo Aléssio, 325 - Nova Palma, RS, 97250-000, Brasil−29.5232−53.5842−29.471−53.468918…225338 minutos225338 minutos3\n    65,935OK431075431490Av. Gen. Osório, 20, Ivorá - RS, 98160-000, BrasilR. Casemiro de Abreu, 193 - Boa Vista, Porto Alegre - RS, 90420-001, Brasil−29.5232−53.5842−30.0318−51.206518…147764 horas 6 minutos166244 horas 37 minutos4\n    65,936OK431075431690Av. Gen. Osório, 20, Ivorá - RS, 98160-000, BrasilR. Conde de Porto Alegre, 365 - Bonfim, Santa Maria - RS, 97010-100, Brasil−29.5232−53.5842−29.6868−53.814918…356659 minutos41011 hora 8 minutos53\n    65,937OK431849432180Rua Linha da Barra Zona Rural, São José do Inhacorá - RS, 98958-000, BrasilR. Padre Cacique, 692 - Centro, Três de Maio - RS, 98910-000, Brasil−27.7251−54.1275−27.78−54.235718…136523 minutos150625 minutos116\n  \n  \n  \n    65,938 rows × 20 columns\n  \n\n\n\n\n\nSelecionando\ndriving pessimistic at 6pm\n\ndf_gmaps = df_files[\n  (\n    f.status == 'OK'\n  ) & (\n    f.mode == 'driving'\n  ) & (\n    f.traffic_model == 'pessimistic'\n  ) & (\n    f.hour == 18\n  ), cols_gmaps]\ndf_gmaps\n\n\n\n  \n  \n    origemdestinocountdistance (value)duration (value)duration_in_traffic (value)\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    0354820353800913208425152848\n    135482035025016329149076096\n    235482035548052759921012430\n    335482035499037155439875074\n    435482031473014669833173621\n    5354820354860453056825082668\n    63548203509704482190618352274\n    7354820355410173262826093203\n    81200341200401532258821322814222\n    91200341200503268734352765424\n    1012003412001024621662440725706\n    1151080551025028011033891640721\n    12510805510790716827885379626\n    1351080551052513134901565517268\n    1451080550027021.37872e+066782074701\n    ⋮⋮⋮⋮⋮⋮⋮\n    57,271291810280290614483575197908\n    57,27243107543131031987822532253\n    57,27343107543149042850931477616624\n    57,274431075431690534842935664101\n    57,2754318494321801161925013651506\n  \n  \n  \n    57,276 rows × 6 columns"
  },
  {
    "objectID": "sections/table_procs.html#sih",
    "href": "sections/table_procs.html#sih",
    "title": "Procedimentos",
    "section": "SIH",
    "text": "SIH\n\nColunas da tabela\n\ncols_proc = [\n  'ano',\n  'parto_normal',\n  'cod_municipio',\n  'hosp_cod_municipio',\n  'cnes',\n]\n\n\npath_sih = get_path('SIH', 'sih.jay')\ndf_proc = dt.fread(path_sih)\ndf_proc = df_proc[:, cols_proc]\ndf_proc\n\n\n\n  \n  \n    anoparto_normalcod_municipiohosp_cod_municipiocnes\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    020103100100391200051200052001020\n    120103100100391200401200402000733\n    220103100100391200401200402000733\n    320103100100391200401200402000733\n    420103100100391200401200402000733\n    520103100100391200401200402000733\n    620103100100391200401200402000733\n    720103100100391200051200052001020\n    820103100100391200401200402000733\n    920103100100391200401200402000733\n    1020103100100391200051200052001020\n    1120103100100391200381200402000733\n    1220103100100391200401200402000733\n    1320103100100391200011200402000733\n    1420103100100391200401200402000733\n    ⋮⋮⋮⋮⋮⋮\n    17,106,39620194110100341718401709302765640\n    17,106,39720194110100341716701709302765640\n    17,106,39820194110100341716701709302765640\n    17,106,39920194110100341709301709302765640\n    17,106,40020194110100341712501716102755149\n  \n  \n  \n    17,106,401 rows × 5 columns\n  \n\n\n\n\n\nTabela agrupada\n\ndf_proc = group_cols(df_proc, cols_proc)\ndf_proc\n\n\n\n  \n  \n    anoparto_normalcod_municipiohosp_cod_municipiocnescount\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    020103100100391100011100012679477141\n    1201031001003911000111000224942991\n    2201031001003911000111001328086172\n    3201031001003911000111002040013032\n    4201031001003911000111002824952289\n    520103100100391100021100022494299507\n    6201031001003911000211001128086095\n    7201031001003911000211001224952791\n    8201031001003911000211002039704421\n    9201031001003911000211002040013035\n    10201031001003911000235111020893271\n    11201031001003911000311000328085286\n    12201031001003911000311000628085441\n    13201031001003911000311003027984844\n    1420103100100391100041100042496046359\n    ⋮⋮⋮⋮⋮⋮⋮\n    461,8472019411010034530010530010105371015\n    461,848201941101003453001053001010545323\n    461,849201941101003453001053001026451571162\n    461,850201941101003453001053001026721971087\n    461,85120194110100345300105300105717515839\n  \n  \n  \n    461,852 rows × 6 columns\n  \n\n\n\n\n\nAtualizando variável parto normal\n\n# {310010039: 'normal', 411010034: 'cesariano'}\ndf_proc[:, dt.update(parto_normal = f.parto_normal == 310010039)]\ndf_proc\n\n\n\n  \n  \n    anoparto_normalcod_municipiohosp_cod_municipiocnescount\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    0201011100011100012679477141\n    12010111000111000224942991\n    22010111000111001328086172\n    32010111000111002040013032\n    42010111000111002824952289\n    5201011100021100022494299507\n    62010111000211001128086095\n    72010111000211001224952791\n    82010111000211002039704421\n    92010111000211002040013035\n    102010111000235111020893271\n    112010111000311000328085286\n    122010111000311000628085441\n    132010111000311003027984844\n    14201011100041100042496046359\n    ⋮⋮⋮⋮⋮⋮⋮\n    461,84720190530010530010105371015\n    461,8482019053001053001010545323\n    461,8492019053001053001026451571162\n    461,8502019053001053001026721971087\n    461,851201905300105300105717515839\n  \n  \n  \n    461,852 rows × 6 columns\n  \n\n\n\n\n\nOrdenando linhas\n\ndf_proc = df_proc.sort(\n  f.ano, f.parto_normal, f.cod_municipio, f.hosp_cod_municipio, f.cnes)\ndf_proc\n\n\n\n  \n  \n    anoparto_normalcod_municipiohosp_cod_municipiocnescount\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    020100110001110001267947749\n    12010011000111001224952792\n    22010011000111001328086171\n    32010011000111001824965341\n    42010011000111002824952284\n    52010011000135111020893271\n    6201001100021100022494299375\n    72010011000211001128086094\n    82010011000211002040013031\n    920100110003110003280852851\n    10201001100041100042496046199\n    112010011000411001224952792\n    122010011000411001824965341\n    132010011000411002040013032\n    142010011000411002824952282\n    ⋮⋮⋮⋮⋮⋮⋮\n    461,8472019153001053001010545479\n    461,8482019153001053001026451571373\n    461,8492019153001053001026503555\n    461,8502019153001053001026721972483\n    461,8512019153001053001057175151086\n  \n  \n  \n    461,852 rows × 6 columns"
  },
  {
    "objectID": "sections/table_procs.html#colunas-origem-destino",
    "href": "sections/table_procs.html#colunas-origem-destino",
    "title": "Procedimentos",
    "section": "Colunas origem & destino",
    "text": "Colunas origem & destino\n\ndef add_info_cols(df, cols, ref):\n  df_codes = df[:, cols]\n  col_key = cols[0]\n  if ref == 'destino':\n    col_key = 'hosp_' + col_key\n    df_codes.names = {cols[0]: col_key}\n  df_codes.names = {c: f'{ref}_{c}' for c in cols[2:]}\n  df_codes.names = {cols[1]: ref}\n  df_codes.key = col_key\n  return df_codes\n\n\ncols = ['cod_municipio', 'codigo', 'socioecon', 'capital', 'latitude', 'longitude']\ndf_origem = add_info_cols(df_locs, cols, 'origem')\ndf_destino = add_info_cols(df_locs, cols, 'destino')\ndf_proc = df_proc[:, :, dt.join(df_origem)]\ndf_proc = df_proc[:, :, dt.join(df_destino)]\ndf_proc\n\n\n\n  \n  \n    anoparto_normalcod_municipiohosp_cod_municipiocnescountorigemorigem_socioeconorigem_capitalorigem_latitude…destinodestino_socioecondestino_capitaldestino_latitudedestino_longitude\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    020100110001110001267947749NT/RO/11005/11000110−11.9283…NT/RO/11005/11000110−11.9283−61.9953\n    12010011000111001224952792NT/RO/11005/11000110−11.9283…NT/RO/11003/11001220−10.8777−61.9322\n    22010011000111001328086171NT/RO/11005/11000110−11.9283…NT/RO/11001/11001310−9.44363−61.9818\n    32010011000111001824965341NT/RO/11005/11000110−11.9283…NT/RO/11002/11001830−11.672−61.198\n    42010011000111002824952284NT/RO/11005/11000110−11.9283…NT/RO/11005/11002810−11.7271−61.7714\n    52010011000135111020893271NT/RO/11005/11000110−11.9283…SD/SP/35151/35111030−21.1314−48.977\n    6201001100021100022494299375NT/RO/11001/11000210−9.90571…NT/RO/11001/11000210−9.90571−63.0325\n    72010011000211001128086094NT/RO/11001/11000210−9.90571…NT/RO/11003/11001120−10.4318−62.4788\n    82010011000211002040013031NT/RO/11001/11000210−9.90571…NT/RO/11004/11002031−8.76077−63.8999\n    920100110003110003280852851NT/RO/11006/11000320−13.4945…NT/RO/11006/11000320−13.4945−60.552\n    10201001100041100042496046199NT/RO/11002/11000430−11.4343…NT/RO/11002/11000430−11.4343−61.4562\n    112010011000411001224952792NT/RO/11002/11000430−11.4343…NT/RO/11003/11001220−10.8777−61.9322\n    122010011000411001824965341NT/RO/11002/11000430−11.4343…NT/RO/11002/11001830−11.672−61.198\n    132010011000411002040013032NT/RO/11002/11000430−11.4343…NT/RO/11004/11002031−8.76077−63.8999\n    142010011000411002824952282NT/RO/11002/11000430−11.4343…NT/RO/11005/11002810−11.7271−61.7714\n    ⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋱⋮⋮⋮⋮⋮\n    461,8472019153001053001010545479CO/DF/53001/53001051−15.7795…CO/DF/53001/53001051−15.7795−47.9297\n    461,8482019153001053001026451571373CO/DF/53001/53001051−15.7795…CO/DF/53001/53001051−15.7795−47.9297\n    461,8492019153001053001026503555CO/DF/53001/53001051−15.7795…CO/DF/53001/53001051−15.7795−47.9297\n    461,8502019153001053001026721972483CO/DF/53001/53001051−15.7795…CO/DF/53001/53001051−15.7795−47.9297\n    461,8512019153001053001057175151086CO/DF/53001/53001051−15.7795…CO/DF/53001/53001051−15.7795−47.9297\n  \n  \n  \n    461,852 rows × 16 columns"
  },
  {
    "objectID": "sections/table_procs.html#cnes-concatenado-ao-destino",
    "href": "sections/table_procs.html#cnes-concatenado-ao-destino",
    "title": "Procedimentos",
    "section": "CNES concatenado ao destino",
    "text": "CNES concatenado ao destino\n\ndf_proc['cnes'] = df_proc[:, as_type(f.cnes, str)]\ndf_proc[:, dt.update(cnes= ('0000000' + f.cnes)[-7:])]\ndf_proc[:, dt.update(destino=f.destino + '/' + f.cnes)]\ndf_proc\n\n\n\n  \n  \n    anoparto_normalcod_municipiohosp_cod_municipiocnescountorigemorigem_socioeconorigem_capitalorigem_latitude…destinodestino_socioecondestino_capitaldestino_latitudedestino_longitude\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    020100110001110001267947749NT/RO/11005/11000110−11.9283…NT/RO/11005/110001/267947710−11.9283−61.9953\n    12010011000111001224952792NT/RO/11005/11000110−11.9283…NT/RO/11003/110012/249527920−10.8777−61.9322\n    22010011000111001328086171NT/RO/11005/11000110−11.9283…NT/RO/11001/110013/280861710−9.44363−61.9818\n    32010011000111001824965341NT/RO/11005/11000110−11.9283…NT/RO/11002/110018/249653430−11.672−61.198\n    42010011000111002824952284NT/RO/11005/11000110−11.9283…NT/RO/11005/110028/249522810−11.7271−61.7714\n    52010011000135111020893271NT/RO/11005/11000110−11.9283…SD/SP/35151/351110/208932730−21.1314−48.977\n    6201001100021100022494299375NT/RO/11001/11000210−9.90571…NT/RO/11001/110002/249429910−9.90571−63.0325\n    72010011000211001128086094NT/RO/11001/11000210−9.90571…NT/RO/11003/110011/280860920−10.4318−62.4788\n    82010011000211002040013031NT/RO/11001/11000210−9.90571…NT/RO/11004/110020/400130331−8.76077−63.8999\n    920100110003110003280852851NT/RO/11006/11000320−13.4945…NT/RO/11006/110003/280852820−13.4945−60.552\n    10201001100041100042496046199NT/RO/11002/11000430−11.4343…NT/RO/11002/110004/249604630−11.4343−61.4562\n    112010011000411001224952792NT/RO/11002/11000430−11.4343…NT/RO/11003/110012/249527920−10.8777−61.9322\n    122010011000411001824965341NT/RO/11002/11000430−11.4343…NT/RO/11002/110018/249653430−11.672−61.198\n    132010011000411002040013032NT/RO/11002/11000430−11.4343…NT/RO/11004/110020/400130331−8.76077−63.8999\n    142010011000411002824952282NT/RO/11002/11000430−11.4343…NT/RO/11005/110028/249522810−11.7271−61.7714\n    ⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋱⋮⋮⋮⋮⋮\n    461,847201915300105300100010545479CO/DF/53001/53001051−15.7795…CO/DF/53001/530010/001054551−15.7795−47.9297\n    461,8482019153001053001026451571373CO/DF/53001/53001051−15.7795…CO/DF/53001/530010/264515751−15.7795−47.9297\n    461,8492019153001053001026503555CO/DF/53001/53001051−15.7795…CO/DF/53001/530010/265035551−15.7795−47.9297\n    461,8502019153001053001026721972483CO/DF/53001/53001051−15.7795…CO/DF/53001/530010/267219751−15.7795−47.9297\n    461,8512019153001053001057175151086CO/DF/53001/53001051−15.7795…CO/DF/53001/530010/571751551−15.7795−47.9297\n  \n  \n  \n    461,852 rows × 16 columns"
  },
  {
    "objectID": "sections/table_procs.html#colunas-de-distância-e-tempo",
    "href": "sections/table_procs.html#colunas-de-distância-e-tempo",
    "title": "Procedimentos",
    "section": "Colunas de distância e tempo",
    "text": "Colunas de distância e tempo\n\nOSM\n\ndf_dist.key = ['cod_municipio', 'hosp_cod_municipio']\ndf_proc = df_proc[:, :, dt.join(df_dist)]\ndf_proc\n\n\n\n  \n  \n    anoparto_normalcod_municipiohosp_cod_municipiocnescountorigemorigem_socioeconorigem_capitalorigem_latitude…destino_capitaldestino_latitudedestino_longitudedistancia (km)tempo (min)\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    020100110001110001267947749NT/RO/11005/11000110−11.9283…0−11.9283−61.995300\n    12010011000111001224952792NT/RO/11005/11000110−11.9283…0−10.8777−61.9322130.77152.868\n    22010011000111001328086171NT/RO/11005/11000110−11.9283…0−9.44363−61.9818357.511427.84\n    32010011000111001824965341NT/RO/11005/11000110−11.9283…0−11.672−61.198114.061112.283\n    42010011000111002824952284NT/RO/11005/11000110−11.9283…0−11.7271−61.771448.609950.14\n    52010011000135111020893271NT/RO/11005/11000110−11.9283…0−21.1314−48.9772196.351852.41\n    6201001100021100022494299375NT/RO/11001/11000210−9.90571…0−9.90571−63.032500\n    72010011000211001128086094NT/RO/11001/11000210−9.90571…0−10.4318−62.478895.4727140.33\n    82010011000211002040013031NT/RO/11001/11000210−9.90571…1−8.76077−63.8999203.582188.315\n    920100110003110003280852851NT/RO/11006/11000320−13.4945…0−13.4945−60.55200\n    10201001100041100042496046199NT/RO/11002/11000430−11.4343…0−11.4343−61.456200\n    112010011000411001224952792NT/RO/11002/11000430−11.4343…0−10.8777−61.9322104.964100.03\n    122010011000411001824965341NT/RO/11002/11000430−11.4343…0−11.672−61.19841.426640.3333\n    132010011000411002040013032NT/RO/11002/11000430−11.4343…1−8.76077−63.8999480.05497.07\n    142010011000411002824952282NT/RO/11002/11000430−11.4343…0−11.7271−61.771447.789966.3017\n    ⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋱⋮⋮⋮⋮⋮\n    461,847201915300105300100010545479CO/DF/53001/53001051−15.7795…1−15.7795−47.929700\n    461,8482019153001053001026451571373CO/DF/53001/53001051−15.7795…1−15.7795−47.929700\n    461,8492019153001053001026503555CO/DF/53001/53001051−15.7795…1−15.7795−47.929700\n    461,8502019153001053001026721972483CO/DF/53001/53001051−15.7795…1−15.7795−47.929700\n    461,8512019153001053001057175151086CO/DF/53001/53001051−15.7795…1−15.7795−47.929700\n  \n  \n  \n    461,852 rows × 18 columns\n  \n\n\n\n\n\nGmaps\n\n# df_gmaps.key = ['origem', 'destino']\n# df_proc = df_proc[:, :, dt.join(df_dist)]\n# df_proc\n\n\n\nDistância e tempo ponderado\n\n# df_proc[:, dt.update(dist_pond = f['distancia (km)'] * f.count)]\n# df_proc[:, dt.update(tempo_pond = f['tempo (min)'] * f.count)]\n# df_proc"
  },
  {
    "objectID": "sections/table_procs.html#coluna-socioecon",
    "href": "sections/table_procs.html#coluna-socioecon",
    "title": "Procedimentos",
    "section": "Coluna socioecon",
    "text": "Coluna socioecon\n\ndf_proc['origem_socioecon'] = df_proc[:, as_type(f.origem_socioecon, str)]\ndf_proc['destino_socioecon'] = df_proc[:, as_type(f.destino_socioecon, str)]\ndf_proc[:, dt.update(socioecon = f.origem_socioecon + '_' + f.destino_socioecon)]\ndf_proc\n\n\n\n  \n  \n    anoparto_normalcod_municipiohosp_cod_municipiocnescountorigemorigem_socioeconorigem_capitalorigem_latitude…destino_latitudedestino_longitudedistancia (km)tempo (min)socioecon\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    020100110001110001267947749NT/RO/11005/11000110−11.9283…−11.9283−61.9953001_1\n    12010011000111001224952792NT/RO/11005/11000110−11.9283…−10.8777−61.9322130.77152.8681_2\n    22010011000111001328086171NT/RO/11005/11000110−11.9283…−9.44363−61.9818357.511427.841_1\n    32010011000111001824965341NT/RO/11005/11000110−11.9283…−11.672−61.198114.061112.2831_3\n    42010011000111002824952284NT/RO/11005/11000110−11.9283…−11.7271−61.771448.609950.141_1\n    52010011000135111020893271NT/RO/11005/11000110−11.9283…−21.1314−48.9772196.351852.411_3\n    6201001100021100022494299375NT/RO/11001/11000210−9.90571…−9.90571−63.0325001_1\n    72010011000211001128086094NT/RO/11001/11000210−9.90571…−10.4318−62.478895.4727140.331_2\n    82010011000211002040013031NT/RO/11001/11000210−9.90571…−8.76077−63.8999203.582188.3151_3\n    920100110003110003280852851NT/RO/11006/11000320−13.4945…−13.4945−60.552002_2\n    10201001100041100042496046199NT/RO/11002/11000430−11.4343…−11.4343−61.4562003_3\n    112010011000411001224952792NT/RO/11002/11000430−11.4343…−10.8777−61.9322104.964100.033_2\n    122010011000411001824965341NT/RO/11002/11000430−11.4343…−11.672−61.19841.426640.33333_3\n    132010011000411002040013032NT/RO/11002/11000430−11.4343…−8.76077−63.8999480.05497.073_3\n    142010011000411002824952282NT/RO/11002/11000430−11.4343…−11.7271−61.771447.789966.30173_1\n    ⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋱⋮⋮⋮⋮⋮\n    461,847201915300105300100010545479CO/DF/53001/53001051−15.7795…−15.7795−47.9297005_5\n    461,8482019153001053001026451571373CO/DF/53001/53001051−15.7795…−15.7795−47.9297005_5\n    461,8492019153001053001026503555CO/DF/53001/53001051−15.7795…−15.7795−47.9297005_5\n    461,8502019153001053001026721972483CO/DF/53001/53001051−15.7795…−15.7795−47.9297005_5\n    461,8512019153001053001057175151086CO/DF/53001/53001051−15.7795…−15.7795−47.9297005_5\n  \n  \n  \n    461,852 rows × 19 columns"
  },
  {
    "objectID": "sections/table_procs.html#coluna-capitais",
    "href": "sections/table_procs.html#coluna-capitais",
    "title": "Procedimentos",
    "section": "Coluna capitais",
    "text": "Coluna capitais\n\ndf_proc['origem_capital'] = df_proc[:, as_type(f.origem_capital, int)]\ndf_proc['origem_capital'] = df_proc[:, as_type(f.origem_capital, str)]\ndf_proc['destino_capital'] = df_proc[:, as_type(f.destino_capital, int)]\ndf_proc['destino_capital'] = df_proc[:, as_type(f.destino_capital, str)]\ndf_proc[:, dt.update(capitais = f.origem_capital + '_' + f.destino_capital)]\ndf_proc\n\n\n\n  \n  \n    anoparto_normalcod_municipiohosp_cod_municipiocnescountorigemorigem_socioeconorigem_capitalorigem_latitude…destino_longitudedistancia (km)tempo (min)socioeconcapitais\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    020100110001110001267947749NT/RO/11005/11000110−11.9283…−61.9953001_10_0\n    12010011000111001224952792NT/RO/11005/11000110−11.9283…−61.9322130.77152.8681_20_0\n    22010011000111001328086171NT/RO/11005/11000110−11.9283…−61.9818357.511427.841_10_0\n    32010011000111001824965341NT/RO/11005/11000110−11.9283…−61.198114.061112.2831_30_0\n    42010011000111002824952284NT/RO/11005/11000110−11.9283…−61.771448.609950.141_10_0\n    52010011000135111020893271NT/RO/11005/11000110−11.9283…−48.9772196.351852.411_30_0\n    6201001100021100022494299375NT/RO/11001/11000210−9.90571…−63.0325001_10_0\n    72010011000211001128086094NT/RO/11001/11000210−9.90571…−62.478895.4727140.331_20_0\n    82010011000211002040013031NT/RO/11001/11000210−9.90571…−63.8999203.582188.3151_30_1\n    920100110003110003280852851NT/RO/11006/11000320−13.4945…−60.552002_20_0\n    10201001100041100042496046199NT/RO/11002/11000430−11.4343…−61.4562003_30_0\n    112010011000411001224952792NT/RO/11002/11000430−11.4343…−61.9322104.964100.033_20_0\n    122010011000411001824965341NT/RO/11002/11000430−11.4343…−61.19841.426640.33333_30_0\n    132010011000411002040013032NT/RO/11002/11000430−11.4343…−63.8999480.05497.073_30_1\n    142010011000411002824952282NT/RO/11002/11000430−11.4343…−61.771447.789966.30173_10_0\n    ⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋱⋮⋮⋮⋮⋮\n    461,847201915300105300100010545479CO/DF/53001/53001051−15.7795…−47.9297005_51_1\n    461,8482019153001053001026451571373CO/DF/53001/53001051−15.7795…−47.9297005_51_1\n    461,8492019153001053001026503555CO/DF/53001/53001051−15.7795…−47.9297005_51_1\n    461,8502019153001053001026721972483CO/DF/53001/53001051−15.7795…−47.9297005_51_1\n    461,8512019153001053001057175151086CO/DF/53001/53001051−15.7795…−47.9297005_51_1\n  \n  \n  \n    461,852 rows × 20 columns"
  },
  {
    "objectID": "sections/table_procs.html#coluna-criticidade",
    "href": "sections/table_procs.html#coluna-criticidade",
    "title": "Procedimentos",
    "section": "Coluna criticidade",
    "text": "Coluna criticidade\n\ncrits = list()\norigins = df_proc[:, 'origem'].to_list()[0]\ndestins = df_proc[:, 'destino'].to_list()[0]\nfor ori, des in zip(origins, destins):\n  critic = 0\n  trim = ori\n  while trim not in des:\n    critic += 1\n    trim = '/'.join(trim.split('/')[:-1])\n  crits.append(critic)\ndf_proc['criticidade'] = dt.Frame(crits)\ndf_proc\n\n\n\n  \n  \n    anoparto_normalcod_municipiohosp_cod_municipiocnescountorigemorigem_socioeconorigem_capitalorigem_latitude…distancia (km)tempo (min)socioeconcapitaiscriticidade\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    020100110001110001267947749NT/RO/11005/11000110−11.9283…001_10_00\n    12010011000111001224952792NT/RO/11005/11000110−11.9283…130.77152.8681_20_02\n    22010011000111001328086171NT/RO/11005/11000110−11.9283…357.511427.841_10_02\n    32010011000111001824965341NT/RO/11005/11000110−11.9283…114.061112.2831_30_02\n    42010011000111002824952284NT/RO/11005/11000110−11.9283…48.609950.141_10_01\n    52010011000135111020893271NT/RO/11005/11000110−11.9283…2196.351852.411_30_04\n    6201001100021100022494299375NT/RO/11001/11000210−9.90571…001_10_00\n    72010011000211001128086094NT/RO/11001/11000210−9.90571…95.4727140.331_20_02\n    82010011000211002040013031NT/RO/11001/11000210−9.90571…203.582188.3151_30_12\n    920100110003110003280852851NT/RO/11006/11000320−13.4945…002_20_00\n    10201001100041100042496046199NT/RO/11002/11000430−11.4343…003_30_00\n    112010011000411001224952792NT/RO/11002/11000430−11.4343…104.964100.033_20_02\n    122010011000411001824965341NT/RO/11002/11000430−11.4343…41.426640.33333_30_01\n    132010011000411002040013032NT/RO/11002/11000430−11.4343…480.05497.073_30_12\n    142010011000411002824952282NT/RO/11002/11000430−11.4343…47.789966.30173_10_02\n    ⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋱⋮⋮⋮⋮⋮\n    461,847201915300105300100010545479CO/DF/53001/53001051−15.7795…005_51_10\n    461,8482019153001053001026451571373CO/DF/53001/53001051−15.7795…005_51_10\n    461,8492019153001053001026503555CO/DF/53001/53001051−15.7795…005_51_10\n    461,8502019153001053001026721972483CO/DF/53001/53001051−15.7795…005_51_10\n    461,8512019153001053001057175151086CO/DF/53001/53001051−15.7795…005_51_10\n  \n  \n  \n    461,852 rows × 21 columns"
  },
  {
    "objectID": "sections/table_procs.html#ajustando-colunas",
    "href": "sections/table_procs.html#ajustando-colunas",
    "title": "Procedimentos",
    "section": "Ajustando colunas",
    "text": "Ajustando colunas\n\ncols_order = [\n  'ano',\n  'parto_normal',\n  'origem',\n  'destino',\n  'distancia (km)',\n  'tempo (min)',\n  # 'dist_pond',\n  # 'tempo_pond',\n  'criticidade',\n  'capitais',\n  'socioecon',\n  'origem_latitude',\n  'origem_longitude',\n  'destino_latitude',\n  'destino_longitude',\n  'count',\n]\n\n\ndf_proc = df_proc[:, cols_order]\ndf_proc\n\n\n\n  \n  \n    anoparto_normalorigemdestinodistancia (km)tempo (min)criticidadecapitaissocioeconorigem_latitudeorigem_longitudedestino_latitudedestino_longitudecount\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    020100NT/RO/11005/110001NT/RO/11005/110001/26794770000_01_1−11.9283−61.9953−11.9283−61.995349\n    120100NT/RO/11005/110001NT/RO/11003/110012/2495279130.77152.86820_01_2−11.9283−61.9953−10.8777−61.93222\n    220100NT/RO/11005/110001NT/RO/11001/110013/2808617357.511427.8420_01_1−11.9283−61.9953−9.44363−61.98181\n    320100NT/RO/11005/110001NT/RO/11002/110018/2496534114.061112.28320_01_3−11.9283−61.9953−11.672−61.1981\n    420100NT/RO/11005/110001NT/RO/11005/110028/249522848.609950.1410_01_1−11.9283−61.9953−11.7271−61.77144\n    520100NT/RO/11005/110001SD/SP/35151/351110/20893272196.351852.4140_01_3−11.9283−61.9953−21.1314−48.9771\n    620100NT/RO/11001/110002NT/RO/11001/110002/24942990000_01_1−9.90571−63.0325−9.90571−63.0325375\n    720100NT/RO/11001/110002NT/RO/11003/110011/280860995.4727140.3320_01_2−9.90571−63.0325−10.4318−62.47884\n    820100NT/RO/11001/110002NT/RO/11004/110020/4001303203.582188.31520_11_3−9.90571−63.0325−8.76077−63.89991\n    920100NT/RO/11006/110003NT/RO/11006/110003/28085280000_02_2−13.4945−60.552−13.4945−60.55251\n    1020100NT/RO/11002/110004NT/RO/11002/110004/24960460000_03_3−11.4343−61.4562−11.4343−61.4562199\n    1120100NT/RO/11002/110004NT/RO/11003/110012/2495279104.964100.0320_03_2−11.4343−61.4562−10.8777−61.93222\n    1220100NT/RO/11002/110004NT/RO/11002/110018/249653441.426640.333310_03_3−11.4343−61.4562−11.672−61.1981\n    1320100NT/RO/11002/110004NT/RO/11004/110020/4001303480.05497.0720_13_3−11.4343−61.4562−8.76077−63.89992\n    1420100NT/RO/11002/110004NT/RO/11005/110028/249522847.789966.301720_03_1−11.4343−61.4562−11.7271−61.77142\n    ⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮\n    461,84720191CO/DF/53001/530010CO/DF/53001/530010/00105450001_15_5−15.7795−47.9297−15.7795−47.9297479\n    461,84820191CO/DF/53001/530010CO/DF/53001/530010/26451570001_15_5−15.7795−47.9297−15.7795−47.92971373\n    461,84920191CO/DF/53001/530010CO/DF/53001/530010/26503550001_15_5−15.7795−47.9297−15.7795−47.92975\n    461,85020191CO/DF/53001/530010CO/DF/53001/530010/26721970001_15_5−15.7795−47.9297−15.7795−47.92972483\n    461,85120191CO/DF/53001/530010CO/DF/53001/530010/57175150001_15_5−15.7795−47.9297−15.7795−47.92971086\n  \n  \n  \n    461,852 rows × 14 columns"
  },
  {
    "objectID": "sections/table_procs.html#filtrando-os-anos",
    "href": "sections/table_procs.html#filtrando-os-anos",
    "title": "Procedimentos",
    "section": "Filtrando os anos",
    "text": "Filtrando os anos\n\ndf_proc_bienio = df_proc[\n  (f.ano == 2010) | (f.ano == 2011) | (f.ano == 2018) |(f.ano == 2019)\n, :]\ndf_proc_bienio\n\n\n\n  \n  \n    anoparto_normalorigemdestinodistancia (km)tempo (min)criticidadecapitaissocioeconorigem_latitudeorigem_longitudedestino_latitudedestino_longitudecount\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    020100NT/RO/11005/110001NT/RO/11005/110001/26794770000_01_1−11.9283−61.9953−11.9283−61.995349\n    120100NT/RO/11005/110001NT/RO/11003/110012/2495279130.77152.86820_01_2−11.9283−61.9953−10.8777−61.93222\n    220100NT/RO/11005/110001NT/RO/11001/110013/2808617357.511427.8420_01_1−11.9283−61.9953−9.44363−61.98181\n    320100NT/RO/11005/110001NT/RO/11002/110018/2496534114.061112.28320_01_3−11.9283−61.9953−11.672−61.1981\n    420100NT/RO/11005/110001NT/RO/11005/110028/249522848.609950.1410_01_1−11.9283−61.9953−11.7271−61.77144\n    520100NT/RO/11005/110001SD/SP/35151/351110/20893272196.351852.4140_01_3−11.9283−61.9953−21.1314−48.9771\n    620100NT/RO/11001/110002NT/RO/11001/110002/24942990000_01_1−9.90571−63.0325−9.90571−63.0325375\n    720100NT/RO/11001/110002NT/RO/11003/110011/280860995.4727140.3320_01_2−9.90571−63.0325−10.4318−62.47884\n    820100NT/RO/11001/110002NT/RO/11004/110020/4001303203.582188.31520_11_3−9.90571−63.0325−8.76077−63.89991\n    920100NT/RO/11006/110003NT/RO/11006/110003/28085280000_02_2−13.4945−60.552−13.4945−60.55251\n    1020100NT/RO/11002/110004NT/RO/11002/110004/24960460000_03_3−11.4343−61.4562−11.4343−61.4562199\n    1120100NT/RO/11002/110004NT/RO/11003/110012/2495279104.964100.0320_03_2−11.4343−61.4562−10.8777−61.93222\n    1220100NT/RO/11002/110004NT/RO/11002/110018/249653441.426640.333310_03_3−11.4343−61.4562−11.672−61.1981\n    1320100NT/RO/11002/110004NT/RO/11004/110020/4001303480.05497.0720_13_3−11.4343−61.4562−8.76077−63.89992\n    1420100NT/RO/11002/110004NT/RO/11005/110028/249522847.789966.301720_03_1−11.4343−61.4562−11.7271−61.77142\n    ⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮\n    187,46620191CO/DF/53001/530010CO/DF/53001/530010/00105450001_15_5−15.7795−47.9297−15.7795−47.9297479\n    187,46720191CO/DF/53001/530010CO/DF/53001/530010/26451570001_15_5−15.7795−47.9297−15.7795−47.92971373\n    187,46820191CO/DF/53001/530010CO/DF/53001/530010/26503550001_15_5−15.7795−47.9297−15.7795−47.92975\n    187,46920191CO/DF/53001/530010CO/DF/53001/530010/26721970001_15_5−15.7795−47.9297−15.7795−47.92972483\n    187,47020191CO/DF/53001/530010CO/DF/53001/530010/57175150001_15_5−15.7795−47.9297−15.7795−47.92971086\n  \n  \n  \n    187,471 rows × 14 columns"
  },
  {
    "objectID": "sections/table_procs.html#atualizando-variável-ano-biênio",
    "href": "sections/table_procs.html#atualizando-variável-ano-biênio",
    "title": "Procedimentos",
    "section": "Atualizando variável ano (biênio)",
    "text": "Atualizando variável ano (biênio)\nValor da variável bienio:\n\n0 (False) = 2010/11\n1 (True) = 2018/19\n\n\ndf_proc_bienio[:, dt.update(ano = (f.ano == 2018) | (f.ano == 2019))]\ndf_proc_bienio.names = {'ano': 'bienio'}\ndf_proc_bienio\n\n\n\n  \n  \n    bienioparto_normalorigemdestinodistancia (km)tempo (min)criticidadecapitaissocioeconorigem_latitudeorigem_longitudedestino_latitudedestino_longitudecount\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    000NT/RO/11005/110001NT/RO/11005/110001/26794770000_01_1−11.9283−61.9953−11.9283−61.995349\n    100NT/RO/11005/110001NT/RO/11003/110012/2495279130.77152.86820_01_2−11.9283−61.9953−10.8777−61.93222\n    200NT/RO/11005/110001NT/RO/11001/110013/2808617357.511427.8420_01_1−11.9283−61.9953−9.44363−61.98181\n    300NT/RO/11005/110001NT/RO/11002/110018/2496534114.061112.28320_01_3−11.9283−61.9953−11.672−61.1981\n    400NT/RO/11005/110001NT/RO/11005/110028/249522848.609950.1410_01_1−11.9283−61.9953−11.7271−61.77144\n    500NT/RO/11005/110001SD/SP/35151/351110/20893272196.351852.4140_01_3−11.9283−61.9953−21.1314−48.9771\n    600NT/RO/11001/110002NT/RO/11001/110002/24942990000_01_1−9.90571−63.0325−9.90571−63.0325375\n    700NT/RO/11001/110002NT/RO/11003/110011/280860995.4727140.3320_01_2−9.90571−63.0325−10.4318−62.47884\n    800NT/RO/11001/110002NT/RO/11004/110020/4001303203.582188.31520_11_3−9.90571−63.0325−8.76077−63.89991\n    900NT/RO/11006/110003NT/RO/11006/110003/28085280000_02_2−13.4945−60.552−13.4945−60.55251\n    1000NT/RO/11002/110004NT/RO/11002/110004/24960460000_03_3−11.4343−61.4562−11.4343−61.4562199\n    1100NT/RO/11002/110004NT/RO/11003/110012/2495279104.964100.0320_03_2−11.4343−61.4562−10.8777−61.93222\n    1200NT/RO/11002/110004NT/RO/11002/110018/249653441.426640.333310_03_3−11.4343−61.4562−11.672−61.1981\n    1300NT/RO/11002/110004NT/RO/11004/110020/4001303480.05497.0720_13_3−11.4343−61.4562−8.76077−63.89992\n    1400NT/RO/11002/110004NT/RO/11005/110028/249522847.789966.301720_03_1−11.4343−61.4562−11.7271−61.77142\n    ⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮\n    187,46611CO/DF/53001/530010CO/DF/53001/530010/00105450001_15_5−15.7795−47.9297−15.7795−47.9297479\n    187,46711CO/DF/53001/530010CO/DF/53001/530010/26451570001_15_5−15.7795−47.9297−15.7795−47.92971373\n    187,46811CO/DF/53001/530010CO/DF/53001/530010/26503550001_15_5−15.7795−47.9297−15.7795−47.92975\n    187,46911CO/DF/53001/530010CO/DF/53001/530010/26721970001_15_5−15.7795−47.9297−15.7795−47.92972483\n    187,47011CO/DF/53001/530010CO/DF/53001/530010/57175150001_15_5−15.7795−47.9297−15.7795−47.92971086\n  \n  \n  \n    187,471 rows × 14 columns\n  \n\n\n\n\nTabela agrupada\n\ndf_proc_bienio = df_proc_bienio[:, dt.sum(f.count), by(df_proc_bienio.names[:-1])]\ndf_proc_bienio\n\n\n\n  \n  \n    bienioparto_normalorigemdestinodistancia (km)tempo (min)criticidadecapitaissocioeconorigem_latitudeorigem_longitudedestino_latitudedestino_longitudecount\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    000CO/DF/53001/530010CO/DF/53001/530010/00104640001_15_5−15.7795−47.9297−15.7795−47.9297260\n    100CO/DF/53001/530010CO/DF/53001/530010/00104720001_15_5−15.7795−47.9297−15.7795−47.9297282\n    200CO/DF/53001/530010CO/DF/53001/530010/00104800001_15_5−15.7795−47.9297−15.7795−47.92973323\n    300CO/DF/53001/530010CO/DF/53001/530010/00104990001_15_5−15.7795−47.9297−15.7795−47.92973368\n    400CO/DF/53001/530010CO/DF/53001/530010/00105020001_15_5−15.7795−47.9297−15.7795−47.9297964\n    500CO/DF/53001/530010CO/DF/53001/530010/00105100001_15_5−15.7795−47.9297−15.7795−47.9297832\n    600CO/DF/53001/530010CO/DF/53001/530010/00105290001_15_5−15.7795−47.9297−15.7795−47.92971831\n    700CO/DF/53001/530010CO/DF/53001/530010/00105370001_15_5−15.7795−47.9297−15.7795−47.92973707\n    800CO/DF/53001/530010CO/DF/53001/530010/00105450001_15_5−15.7795−47.9297−15.7795−47.9297728\n    900CO/DF/53001/530010CO/DF/53001/530010/00105610001_15_5−15.7795−47.9297−15.7795−47.92971\n    1000CO/DF/53001/530010CO/DF/53001/530010/26451570001_15_5−15.7795−47.9297−15.7795−47.92972251\n    1100CO/DF/53001/530010CO/DF/53001/530010/26721970001_15_5−15.7795−47.9297−15.7795−47.92971561\n    1200CO/DF/53001/530010CO/DF/53001/530010/57175150001_15_5−15.7795−47.9297−15.7795−47.92971798\n    1300CO/DF/53001/530010CO/GO/52011/520110/2361787152.625132.72331_05_3−15.7795−47.9297−16.3281−48.9534\n    1400CO/DF/53001/530010ND/BA/29002/290320/3972925630.949466.70541_05_2−15.7795−47.9297−12.1439−44.99681\n    ⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮\n    124,98011SL/SC/42016/421870SL/SC/42007/420540/3157245138.477104.9420_13_5−28.4713−49.0144−27.5945−48.54771\n    124,98111SL/SC/42016/421870SL/SC/42015/420460/259427754.62149.316720_03_4−28.4713−49.0144−28.6723−49.37291\n    124,98211SL/SC/42016/421870SL/SC/42016/420280/266588335.543937.493310_03_3−28.4713−49.0144−28.2681−49.17012\n    124,98311SL/SC/42016/421870SL/SC/42016/420730/238588053.96145.353310_03_3−28.4713−49.0144−28.2284−48.66591\n    124,98411SL/SC/42016/421870SL/SC/42016/421870/24917100000_03_3−28.4713−49.0144−28.4713−49.0144441\n  \n  \n  \n    124,985 rows × 14 columns"
  },
  {
    "objectID": "sections/table_procs.html#ano",
    "href": "sections/table_procs.html#ano",
    "title": "Procedimentos",
    "section": "Ano",
    "text": "Ano\n\noutput_proc = get_path('GESTANTES', 'procs_ano.csv.gzip')\ndf_proc.to_csv(output_proc)\n\n\ndt.fread(output_proc)\n\n\n\n  \n  \n    anoparto_normalorigemdestinodistancia (km)tempo (min)criticidadecapitaissocioeconorigem_latitudeorigem_longitudedestino_latitudedestino_longitudecount\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    020100NT/RO/11005/110001NT/RO/11005/110001/26794770000_01_1−11.9283−61.9953−11.9283−61.995349\n    120100NT/RO/11005/110001NT/RO/11003/110012/2495279130.77152.86820_01_2−11.9283−61.9953−10.8777−61.93222\n    220100NT/RO/11005/110001NT/RO/11001/110013/2808617357.511427.8420_01_1−11.9283−61.9953−9.44363−61.98181\n    320100NT/RO/11005/110001NT/RO/11002/110018/2496534114.061112.28320_01_3−11.9283−61.9953−11.672−61.1981\n    420100NT/RO/11005/110001NT/RO/11005/110028/249522848.609950.1410_01_1−11.9283−61.9953−11.7271−61.77144\n    520100NT/RO/11005/110001SD/SP/35151/351110/20893272196.351852.4140_01_3−11.9283−61.9953−21.1314−48.9771\n    620100NT/RO/11001/110002NT/RO/11001/110002/24942990000_01_1−9.90571−63.0325−9.90571−63.0325375\n    720100NT/RO/11001/110002NT/RO/11003/110011/280860995.4727140.3320_01_2−9.90571−63.0325−10.4318−62.47884\n    820100NT/RO/11001/110002NT/RO/11004/110020/4001303203.582188.31520_11_3−9.90571−63.0325−8.76077−63.89991\n    920100NT/RO/11006/110003NT/RO/11006/110003/28085280000_02_2−13.4945−60.552−13.4945−60.55251\n    1020100NT/RO/11002/110004NT/RO/11002/110004/24960460000_03_3−11.4343−61.4562−11.4343−61.4562199\n    1120100NT/RO/11002/110004NT/RO/11003/110012/2495279104.964100.0320_03_2−11.4343−61.4562−10.8777−61.93222\n    1220100NT/RO/11002/110004NT/RO/11002/110018/249653441.426640.333310_03_3−11.4343−61.4562−11.672−61.1981\n    1320100NT/RO/11002/110004NT/RO/11004/110020/4001303480.05497.0720_13_3−11.4343−61.4562−8.76077−63.89992\n    1420100NT/RO/11002/110004NT/RO/11005/110028/249522847.789966.301720_03_1−11.4343−61.4562−11.7271−61.77142\n    ⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮\n    461,84720191CO/DF/53001/530010CO/DF/53001/530010/00105450001_15_5−15.7795−47.9297−15.7795−47.9297479\n    461,84820191CO/DF/53001/530010CO/DF/53001/530010/26451570001_15_5−15.7795−47.9297−15.7795−47.92971373\n    461,84920191CO/DF/53001/530010CO/DF/53001/530010/26503550001_15_5−15.7795−47.9297−15.7795−47.92975\n    461,85020191CO/DF/53001/530010CO/DF/53001/530010/26721970001_15_5−15.7795−47.9297−15.7795−47.92972483\n    461,85120191CO/DF/53001/530010CO/DF/53001/530010/57175150001_15_5−15.7795−47.9297−15.7795−47.92971086\n  \n  \n  \n    461,852 rows × 14 columns"
  },
  {
    "objectID": "sections/table_procs.html#biênio",
    "href": "sections/table_procs.html#biênio",
    "title": "Procedimentos",
    "section": "Biênio",
    "text": "Biênio\n\noutput_proc_bienio = get_path('GESTANTES', 'procs_bienio.csv.gzip')\ndf_proc_bienio.to_csv(output_proc_bienio)\n\n\ndt.fread(output_proc_bienio)\n\n\n\n  \n  \n    bienioparto_normalorigemdestinodistancia (km)tempo (min)criticidadecapitaissocioeconorigem_latitudeorigem_longitudedestino_latitudedestino_longitudecount\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    000CO/DF/53001/530010CO/DF/53001/530010/00104640001_15_5−15.7795−47.9297−15.7795−47.9297260\n    100CO/DF/53001/530010CO/DF/53001/530010/00104720001_15_5−15.7795−47.9297−15.7795−47.9297282\n    200CO/DF/53001/530010CO/DF/53001/530010/00104800001_15_5−15.7795−47.9297−15.7795−47.92973323\n    300CO/DF/53001/530010CO/DF/53001/530010/00104990001_15_5−15.7795−47.9297−15.7795−47.92973368\n    400CO/DF/53001/530010CO/DF/53001/530010/00105020001_15_5−15.7795−47.9297−15.7795−47.9297964\n    500CO/DF/53001/530010CO/DF/53001/530010/00105100001_15_5−15.7795−47.9297−15.7795−47.9297832\n    600CO/DF/53001/530010CO/DF/53001/530010/00105290001_15_5−15.7795−47.9297−15.7795−47.92971831\n    700CO/DF/53001/530010CO/DF/53001/530010/00105370001_15_5−15.7795−47.9297−15.7795−47.92973707\n    800CO/DF/53001/530010CO/DF/53001/530010/00105450001_15_5−15.7795−47.9297−15.7795−47.9297728\n    900CO/DF/53001/530010CO/DF/53001/530010/00105610001_15_5−15.7795−47.9297−15.7795−47.92971\n    1000CO/DF/53001/530010CO/DF/53001/530010/26451570001_15_5−15.7795−47.9297−15.7795−47.92972251\n    1100CO/DF/53001/530010CO/DF/53001/530010/26721970001_15_5−15.7795−47.9297−15.7795−47.92971561\n    1200CO/DF/53001/530010CO/DF/53001/530010/57175150001_15_5−15.7795−47.9297−15.7795−47.92971798\n    1300CO/DF/53001/530010CO/GO/52011/520110/2361787152.625132.72331_05_3−15.7795−47.9297−16.3281−48.9534\n    1400CO/DF/53001/530010ND/BA/29002/290320/3972925630.949466.70541_05_2−15.7795−47.9297−12.1439−44.99681\n    ⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮\n    124,98011SL/SC/42016/421870SL/SC/42007/420540/3157245138.477104.9420_13_5−28.4713−49.0144−27.5945−48.54771\n    124,98111SL/SC/42016/421870SL/SC/42015/420460/259427754.62149.316720_03_4−28.4713−49.0144−28.6723−49.37291\n    124,98211SL/SC/42016/421870SL/SC/42016/420280/266588335.543937.493310_03_3−28.4713−49.0144−28.2681−49.17012\n    124,98311SL/SC/42016/421870SL/SC/42016/420730/238588053.96145.353310_03_3−28.4713−49.0144−28.2284−48.66591\n    124,98411SL/SC/42016/421870SL/SC/42016/421870/24917100000_03_3−28.4713−49.0144−28.4713−49.0144441\n  \n  \n  \n    124,985 rows × 14 columns"
  },
  {
    "objectID": "sections/table_procs.html#fontes-de-dados",
    "href": "sections/table_procs.html#fontes-de-dados",
    "title": "Procedimentos",
    "section": "Fontes de dados",
    "text": "Fontes de dados\n\nProcedimentos\n\ndf_bienio = pd.read_csv(output_proc_bienio)\ndf_bienio = df_bienio.rename(columns={\n  ref: f'codigo_{ref}' for ref in ['origem', 'destino']})\ndf_bienio['origem'] = df_bienio['codigo_origem'].apply(lambda x: int(x.split('/')[-1]))\ndf_bienio['destino'] = df_bienio['codigo_destino'].apply(lambda x: int(x.split('/')[-2]))\ndf_bienio\n\n\n\n\n\n  \n    \n      \n      bienio\n      parto_normal\n      codigo_origem\n      codigo_destino\n      distancia (km)\n      tempo (min)\n      criticidade\n      capitais\n      socioecon\n      origem_latitude\n      origem_longitude\n      destino_latitude\n      destino_longitude\n      count\n      origem\n      destino\n    \n  \n  \n    \n      0\n      0\n      0\n      CO/DF/53001/530010\n      CO/DF/53001/530010/0010464\n      0.0000\n      0.000000\n      0\n      1_1\n      5_5\n      -15.7795\n      -47.9297\n      -15.7795\n      -47.9297\n      260\n      530010\n      530010\n    \n    \n      1\n      0\n      0\n      CO/DF/53001/530010\n      CO/DF/53001/530010/0010472\n      0.0000\n      0.000000\n      0\n      1_1\n      5_5\n      -15.7795\n      -47.9297\n      -15.7795\n      -47.9297\n      282\n      530010\n      530010\n    \n    \n      2\n      0\n      0\n      CO/DF/53001/530010\n      CO/DF/53001/530010/0010480\n      0.0000\n      0.000000\n      0\n      1_1\n      5_5\n      -15.7795\n      -47.9297\n      -15.7795\n      -47.9297\n      3323\n      530010\n      530010\n    \n    \n      3\n      0\n      0\n      CO/DF/53001/530010\n      CO/DF/53001/530010/0010499\n      0.0000\n      0.000000\n      0\n      1_1\n      5_5\n      -15.7795\n      -47.9297\n      -15.7795\n      -47.9297\n      3368\n      530010\n      530010\n    \n    \n      4\n      0\n      0\n      CO/DF/53001/530010\n      CO/DF/53001/530010/0010502\n      0.0000\n      0.000000\n      0\n      1_1\n      5_5\n      -15.7795\n      -47.9297\n      -15.7795\n      -47.9297\n      964\n      530010\n      530010\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      124980\n      1\n      1\n      SL/SC/42016/421870\n      SL/SC/42007/420540/3157245\n      138.4773\n      104.940000\n      2\n      0_1\n      3_5\n      -28.4713\n      -49.0144\n      -27.5945\n      -48.5477\n      1\n      421870\n      420540\n    \n    \n      124981\n      1\n      1\n      SL/SC/42016/421870\n      SL/SC/42015/420460/2594277\n      54.6210\n      49.316667\n      2\n      0_0\n      3_4\n      -28.4713\n      -49.0144\n      -28.6723\n      -49.3729\n      1\n      421870\n      420460\n    \n    \n      124982\n      1\n      1\n      SL/SC/42016/421870\n      SL/SC/42016/420280/2665883\n      35.5439\n      37.493333\n      1\n      0_0\n      3_3\n      -28.4713\n      -49.0144\n      -28.2681\n      -49.1701\n      2\n      421870\n      420280\n    \n    \n      124983\n      1\n      1\n      SL/SC/42016/421870\n      SL/SC/42016/420730/2385880\n      53.9610\n      45.353333\n      1\n      0_0\n      3_3\n      -28.4713\n      -49.0144\n      -28.2284\n      -48.6659\n      1\n      421870\n      420730\n    \n    \n      124984\n      1\n      1\n      SL/SC/42016/421870\n      SL/SC/42016/421870/2491710\n      0.0000\n      0.000000\n      0\n      0_0\n      3_3\n      -28.4713\n      -49.0144\n      -28.4713\n      -49.0144\n      441\n      421870\n      421870\n    \n  \n\n124985 rows × 16 columns\n\n\n\n\nBiênio RJ\n\norigem_rj = df_bienio['origem'].astype(str).str.startswith('33')\ndestino_rj = df_bienio['destino'].astype(str).str.startswith('33')\ndf_bienio_rj = df_bienio[origem_rj & destino_rj]\ndf_bienio_rj\n\n\n\n\n\n  \n    \n      \n      bienio\n      parto_normal\n      codigo_origem\n      codigo_destino\n      distancia (km)\n      tempo (min)\n      criticidade\n      capitais\n      socioecon\n      origem_latitude\n      origem_longitude\n      destino_latitude\n      destino_longitude\n      count\n      origem\n      destino\n    \n  \n  \n    \n      20117\n      0\n      0\n      SD/RJ/33001/330010\n      SD/RJ/33001/330010/2280868\n      0.0000\n      0.000000\n      0\n      0_0\n      4_4\n      -23.0011\n      -44.3196\n      -23.0011\n      -44.3196\n      533\n      330010\n      330010\n    \n    \n      20118\n      0\n      0\n      SD/RJ/33001/330010\n      SD/RJ/33001/330010/2281384\n      0.0000\n      0.000000\n      0\n      0_0\n      4_4\n      -23.0011\n      -44.3196\n      -23.0011\n      -44.3196\n      116\n      330010\n      330010\n    \n    \n      20120\n      0\n      0\n      SD/RJ/33001/330260\n      SD/RJ/33001/330010/2280868\n      56.7885\n      47.100000\n      1\n      0_0\n      4_4\n      -22.9594\n      -44.0409\n      -23.0011\n      -44.3196\n      4\n      330260\n      330010\n    \n    \n      20121\n      0\n      0\n      SD/RJ/33001/330260\n      SD/RJ/33001/330260/2288109\n      0.0000\n      0.000000\n      0\n      0_0\n      4_4\n      -22.9594\n      -44.0409\n      -22.9594\n      -44.0409\n      183\n      330260\n      330260\n    \n    \n      20122\n      0\n      0\n      SD/RJ/33001/330260\n      SD/RJ/33005/330045/2289709\n      84.1763\n      63.915000\n      2\n      0_0\n      4_5\n      -22.9594\n      -44.0409\n      -22.7640\n      -43.3992\n      6\n      330260\n      330045\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      116597\n      1\n      1\n      SD/RJ/33009/330590\n      SD/RJ/33006/330330/0012521\n      186.0775\n      184.508333\n      2\n      0_0\n      3_5\n      -22.0638\n      -42.0643\n      -22.8832\n      -43.1034\n      1\n      330590\n      330330\n    \n    \n      116598\n      1\n      1\n      SD/RJ/33009/330590\n      SD/RJ/33008/330240/5412447\n      80.5919\n      75.171667\n      2\n      0_0\n      3_5\n      -22.0638\n      -42.0643\n      -22.3768\n      -41.7848\n      1\n      330590\n      330240\n    \n    \n      116599\n      1\n      1\n      SD/RJ/33009/330590\n      SD/RJ/33008/330415/2267209\n      79.7153\n      75.683333\n      2\n      0_0\n      3_5\n      -22.0638\n      -42.0643\n      -22.1031\n      -41.4693\n      1\n      330590\n      330415\n    \n    \n      116600\n      1\n      1\n      SD/RJ/33009/330590\n      SD/RJ/33009/330340/2271826\n      81.5882\n      79.888333\n      1\n      0_0\n      3_3\n      -22.0638\n      -42.0643\n      -22.2932\n      -42.5377\n      1\n      330590\n      330340\n    \n    \n      116601\n      1\n      1\n      SD/RJ/33009/330590\n      SD/RJ/33009/330590/3584968\n      0.0000\n      0.000000\n      0\n      0_0\n      3_3\n      -22.0638\n      -42.0643\n      -22.0638\n      -42.0643\n      6\n      330590\n      330590\n    \n  \n\n3148 rows × 16 columns\n\n\n\n\n\n\nRotas (Gmaps)\n\ncols_gmaps = [\n  'origem', 'destino',\n  # 'distancia (km)', 'tempo (min)',\n  'distance (value)',\n  'duration (value)', 'duration_in_traffic (value)'\n]\n\n\npath_route = get_path('GESTANTES', f'routes.csv.gzip')\ndf_route = pd.read_csv(path_route)\ndf_route = df_route[cols_gmaps]\ndf_route\n\n\n\n\n\n  \n    \n      \n      origem\n      destino\n      distance (value)\n      duration (value)\n      duration_in_traffic (value)\n    \n  \n  \n    \n      0\n      510840\n      510340\n      7.555\n      16.333333\n      34.016667\n    \n    \n      1\n      315460\n      310620\n      42.332\n      53.716667\n      82.650000\n    \n    \n      2\n      260790\n      261160\n      21.010\n      46.983333\n      77.250000\n    \n    \n      3\n      521250\n      530010\n      60.888\n      62.600000\n      83.350000\n    \n    \n      4\n      280480\n      280030\n      16.221\n      23.133333\n      31.483333\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      57271\n      520465\n      520110\n      409.137\n      329.583333\n      362.450000\n    \n    \n      57272\n      520470\n      170950\n      308.501\n      248.433333\n      265.916667\n    \n    \n      57273\n      520470\n      172100\n      525.439\n      422.766667\n      446.300000\n    \n    \n      57274\n      520470\n      520620\n      423.046\n      337.766667\n      385.066667\n    \n    \n      57275\n      520470\n      520750\n      54.954\n      47.183333\n      52.550000\n    \n  \n\n57276 rows × 5 columns"
  },
  {
    "objectID": "sections/table_procs.html#gerando-tabela-1",
    "href": "sections/table_procs.html#gerando-tabela-1",
    "title": "Procedimentos",
    "section": "Gerando tabela",
    "text": "Gerando tabela\n\nCombinando tabelas\n\ndf_proc_gmaps = pd.merge(df_bienio, df_route, how='left', on=['origem', 'destino'])\ndf_proc_gmaps\n\n\n\n\n\n  \n    \n      \n      bienio\n      parto_normal\n      codigo_origem\n      codigo_destino\n      distancia (km)\n      tempo (min)\n      criticidade\n      capitais\n      socioecon\n      origem_latitude\n      origem_longitude\n      destino_latitude\n      destino_longitude\n      count\n      origem\n      destino\n      distance (value)\n      duration (value)\n      duration_in_traffic (value)\n    \n  \n  \n    \n      0\n      0\n      0\n      CO/DF/53001/530010\n      CO/DF/53001/530010/0010464\n      0.0000\n      0.000000\n      0\n      1_1\n      5_5\n      -15.7795\n      -47.9297\n      -15.7795\n      -47.9297\n      260\n      530010\n      530010\n      NaN\n      NaN\n      NaN\n    \n    \n      1\n      0\n      0\n      CO/DF/53001/530010\n      CO/DF/53001/530010/0010472\n      0.0000\n      0.000000\n      0\n      1_1\n      5_5\n      -15.7795\n      -47.9297\n      -15.7795\n      -47.9297\n      282\n      530010\n      530010\n      NaN\n      NaN\n      NaN\n    \n    \n      2\n      0\n      0\n      CO/DF/53001/530010\n      CO/DF/53001/530010/0010480\n      0.0000\n      0.000000\n      0\n      1_1\n      5_5\n      -15.7795\n      -47.9297\n      -15.7795\n      -47.9297\n      3323\n      530010\n      530010\n      NaN\n      NaN\n      NaN\n    \n    \n      3\n      0\n      0\n      CO/DF/53001/530010\n      CO/DF/53001/530010/0010499\n      0.0000\n      0.000000\n      0\n      1_1\n      5_5\n      -15.7795\n      -47.9297\n      -15.7795\n      -47.9297\n      3368\n      530010\n      530010\n      NaN\n      NaN\n      NaN\n    \n    \n      4\n      0\n      0\n      CO/DF/53001/530010\n      CO/DF/53001/530010/0010502\n      0.0000\n      0.000000\n      0\n      1_1\n      5_5\n      -15.7795\n      -47.9297\n      -15.7795\n      -47.9297\n      964\n      530010\n      530010\n      NaN\n      NaN\n      NaN\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      124980\n      1\n      1\n      SL/SC/42016/421870\n      SL/SC/42007/420540/3157245\n      138.4773\n      104.940000\n      2\n      0_1\n      3_5\n      -28.4713\n      -49.0144\n      -27.5945\n      -48.5477\n      1\n      421870\n      420540\n      136.964\n      103.016667\n      134.716667\n    \n    \n      124981\n      1\n      1\n      SL/SC/42016/421870\n      SL/SC/42015/420460/2594277\n      54.6210\n      49.316667\n      2\n      0_0\n      3_4\n      -28.4713\n      -49.0144\n      -28.6723\n      -49.3729\n      1\n      421870\n      420460\n      65.627\n      54.633333\n      75.150000\n    \n    \n      124982\n      1\n      1\n      SL/SC/42016/421870\n      SL/SC/42016/420280/2665883\n      35.5439\n      37.493333\n      1\n      0_0\n      3_3\n      -28.4713\n      -49.0144\n      -28.2681\n      -49.1701\n      2\n      421870\n      420280\n      35.550\n      43.833333\n      55.416667\n    \n    \n      124983\n      1\n      1\n      SL/SC/42016/421870\n      SL/SC/42016/420730/2385880\n      53.9610\n      45.353333\n      1\n      0_0\n      3_3\n      -28.4713\n      -49.0144\n      -28.2284\n      -48.6659\n      1\n      421870\n      420730\n      52.210\n      44.033333\n      59.200000\n    \n    \n      124984\n      1\n      1\n      SL/SC/42016/421870\n      SL/SC/42016/421870/2491710\n      0.0000\n      0.000000\n      0\n      0_0\n      3_3\n      -28.4713\n      -49.0144\n      -28.4713\n      -49.0144\n      441\n      421870\n      421870\n      NaN\n      NaN\n      NaN\n    \n  \n\n124985 rows × 19 columns\n\n\n\n\n\nOrdenando\n\nColunas\n\ncols_order_gmaps = [\n  'bienio', 'parto_normal',\n  'codigo_origem', 'codigo_destino', 'origem', 'destino',\n  # 'mode', 'traffic_model', 'hour',\n  'distancia (km)', 'tempo (min)',\n  'distance (value)',\n  'duration (value)', 'duration_in_traffic (value)',\n  # 'dist_pond', 'tempo_pond',\n  'criticidade', 'capitais', 'socioecon',\n  'origem_latitude', 'origem_longitude',\n  'destino_latitude', 'destino_longitude',\n  'count',\n]\n\n\ncols_rename = {\n  'distancia (km)': 'distance (osm)',\n  'tempo (min)': 'duration (osm)',\n  'distance (value)': 'distance (gmaps)',\n  'duration (value)': 'duration (gmaps)',\n  'duration_in_traffic (value)': 'duration_traffic (gmaps)',\n}\n\n\n\nLinhas\n\ndf_proc_gmaps = df_proc_gmaps[cols_order_gmaps]\ndf_proc_gmaps = df_proc_gmaps.rename(columns=cols_rename)\ndf_proc_gmaps = df_proc_gmaps.sort_values([\n  'codigo_origem', 'codigo_destino'])\ndf_proc_gmaps\n\n\n\n\n\n  \n    \n      \n      bienio\n      parto_normal\n      codigo_origem\n      codigo_destino\n      origem\n      destino\n      distance (osm)\n      duration (osm)\n      distance (gmaps)\n      duration (gmaps)\n      duration_traffic (gmaps)\n      criticidade\n      capitais\n      socioecon\n      origem_latitude\n      origem_longitude\n      destino_latitude\n      destino_longitude\n      count\n    \n  \n  \n    \n      0\n      0\n      0\n      CO/DF/53001/530010\n      CO/DF/53001/530010/0010464\n      530010\n      530010\n      0.0000\n      0.000000\n      NaN\n      NaN\n      NaN\n      0\n      1_1\n      5_5\n      -15.7795\n      -47.9297\n      -15.7795\n      -47.9297\n      260\n    \n    \n      28243\n      0\n      1\n      CO/DF/53001/530010\n      CO/DF/53001/530010/0010464\n      530010\n      530010\n      0.0000\n      0.000000\n      NaN\n      NaN\n      NaN\n      0\n      1_1\n      5_5\n      -15.7795\n      -47.9297\n      -15.7795\n      -47.9297\n      2171\n    \n    \n      59725\n      1\n      0\n      CO/DF/53001/530010\n      CO/DF/53001/530010/0010464\n      530010\n      530010\n      0.0000\n      0.000000\n      NaN\n      NaN\n      NaN\n      0\n      1_1\n      5_5\n      -15.7795\n      -47.9297\n      -15.7795\n      -47.9297\n      1954\n    \n    \n      90381\n      1\n      1\n      CO/DF/53001/530010\n      CO/DF/53001/530010/0010464\n      530010\n      530010\n      0.0000\n      0.000000\n      NaN\n      NaN\n      NaN\n      0\n      1_1\n      5_5\n      -15.7795\n      -47.9297\n      -15.7795\n      -47.9297\n      2521\n    \n    \n      1\n      0\n      0\n      CO/DF/53001/530010\n      CO/DF/53001/530010/0010472\n      530010\n      530010\n      0.0000\n      0.000000\n      NaN\n      NaN\n      NaN\n      0\n      1_1\n      5_5\n      -15.7795\n      -47.9297\n      -15.7795\n      -47.9297\n      282\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      90379\n      1\n      0\n      SL/SC/42016/421870\n      SL/SC/42016/420940/2558017\n      421870\n      420940\n      31.5939\n      26.976667\n      31.558\n      30.1\n      41.1\n      1\n      0_0\n      3_3\n      -28.4713\n      -49.0144\n      -28.4843\n      -48.7772\n      1\n    \n    \n      28242\n      0\n      0\n      SL/SC/42016/421870\n      SL/SC/42016/421870/2491710\n      421870\n      421870\n      0.0000\n      0.000000\n      NaN\n      NaN\n      NaN\n      0\n      0_0\n      3_3\n      -28.4713\n      -49.0144\n      -28.4713\n      -49.0144\n      52\n    \n    \n      59724\n      0\n      1\n      SL/SC/42016/421870\n      SL/SC/42016/421870/2491710\n      421870\n      421870\n      0.0000\n      0.000000\n      NaN\n      NaN\n      NaN\n      0\n      0_0\n      3_3\n      -28.4713\n      -49.0144\n      -28.4713\n      -49.0144\n      271\n    \n    \n      90380\n      1\n      0\n      SL/SC/42016/421870\n      SL/SC/42016/421870/2491710\n      421870\n      421870\n      0.0000\n      0.000000\n      NaN\n      NaN\n      NaN\n      0\n      0_0\n      3_3\n      -28.4713\n      -49.0144\n      -28.4713\n      -49.0144\n      190\n    \n    \n      124984\n      1\n      1\n      SL/SC/42016/421870\n      SL/SC/42016/421870/2491710\n      421870\n      421870\n      0.0000\n      0.000000\n      NaN\n      NaN\n      NaN\n      0\n      0_0\n      3_3\n      -28.4713\n      -49.0144\n      -28.4713\n      -49.0144\n      441\n    \n  \n\n124985 rows × 19 columns"
  },
  {
    "objectID": "sections/table_procs.html#exportando-tabela-resultante",
    "href": "sections/table_procs.html#exportando-tabela-resultante",
    "title": "Procedimentos",
    "section": "Exportando tabela resultante",
    "text": "Exportando tabela resultante\n\npath_proc_gmaps = get_path('GESTANTES', f'procs.csv.gzip')\ndf_proc_gmaps.to_csv(path_proc_gmaps, index=False)\n\n\n# path_routes_rj = get_path('GESTANTES', f'gmaps/routes_rj.xlsx')\n# df_proc_gmaps.to_excel(path_routes_rj, index=False)"
  }
]