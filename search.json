[
  {
    "objectID": "README.html",
    "href": "README.html",
    "title": "Introdução",
    "section": "",
    "text": "Contexto\nNo Brasil, 98% dos partos ocorrem em ambiente hospitalar, e 77% no Sistema Único de Saúde (SUS). O acesso oportuno aos serviços obstétricos de internação para o parto é fundamental para garantir a segurança do cuidado materno e neonatal. Entretanto, há “vazios assistenciais” na oferta de serviços hospitalares pelo SUS que fazem com que grande parte das parturientes precise se deslocar de um município a outro para ser assistida.\nO retardo na atenção obstétrica no momento do parto está associado à desfechos maternos adversos, e o deslocamento de grandes distâncias tem sido associado a níveis elevados de mortalidade infantil e neonatal, além de maior risco de morbimortalidade materna. Assim, a análise da distância percorrida pelas parturientes de sua residência até o hospital é um indicador útil e sensível para avaliar a dificuldade em acessar cuidados maternos e neonatais no SUS.\nA análise da acessibilidade geográfica é um componente importante da avaliação de serviços de saúde e reflete aspectos da distribuição espacial da oferta de serviços que dificultam ou promovem sua utilização. A metodologia de análise de redes sociais (ARS) tem sido utilizada nesse contexto, incluindo a internação para o parto, e também como ferramenta para gestão em saúde.\nEste projeto tem o objetivo de analisar a acessibilidade geográfica ao parto hospitalar realizado no SUS nos últimos 10 anos, em todo Brasil, aplicando a ARS como uma nova ferramenta para a gestão de serviços de saúde. Serão utilizados dados do Departamento de Informática do SUS (DATASUS) para a construção das redes de deslocamento das gestantes em busca de internação para o parto, levando-se em conta as distâncias percorridas, mapeando fluxos preferenciais e identificando lacunas geográficas de atendimento e polos de atração de maior demanda, como medida de inequidade no acesso aos serviços. O projeto avança no processo de avaliação do sistema de saúde ao desenvolver novos indicadores de acesso à serviços obstétricos, baseados em uma metodologia inovadora, e com abrangência nacional e aplicabilidade a outras áreas de saúde pública.\nEspera-se, com este estudo, gerar evidências que permitam um melhor entendimento da organização e das fragilidades do SUS na assistência à saúde da mulher no ciclo gravídico-puerperal, contribuindo para o planejamento da atenção obstétrica e para o fortalecimento de políticas públicas voltadas para melhoria do acesso aos serviços de saúde."
  },
  {
    "objectID": "sections/database_dists.html",
    "href": "sections/database_dists.html",
    "title": "Distâncias",
    "section": "",
    "text": "Descrição\nThis working paper describes the methodological procedure for calculating distances and travel time between the 5,570 Brazilian municipalities using the APIs from Google Maps (Application Programming Interface) and, mainly, OpenStreet Maps. This is an update of the results of Carvalho et at. (2016). The data generated by this work provide relevant information that can be used by other academic works with the most diverse applications, such as, for example, applications in regional economics, dynamic allocation models, operational research, spatial econometrics or general equilibrium models. Therefore, the main objective of this work is to build a database that can be used in several applied studies.\nhttps://ideas.repec.org/p/cdp/texdis/td630.html\n\n\nTabela\n\npath_dist = get_path('DISTANCIAS', 'matriz_distancias.zip')\ndf_dist = dt.fread(path_dist)\ndf_dist\n\n\n\n  \n  \n    origemdestinodistanciatempo\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    011000111000100\n    1110001110002309.056.16906\n    2110001110003399.56.28906\n    311000111000481.20111.91775\n    4110001110005391.7046.13636\n    5110001110006353.4175.53989\n    6110001110007313.5926.18117\n    7110001110008326.9835.34175\n    8110001110009145.6782.346\n    9110001110010649.54513.405\n    10110001110011214.1253.83481\n    11110001110012130.772.54781\n    12110001110013357.5117.13067\n    1311000111001460.21031.02275\n    14110001110015172.9263.18425\n    ⋮⋮⋮⋮⋮\n    31,024,895530010522200161.7292.356\n    31,024,896530010522205382.7095.47956\n    31,024,897530010522220161.6032.24894\n    31,024,898530010522230190.0013.21608\n    31,024,89953001053001000\n  \n  \n  \n    31,024,900 rows × 4 columns\n  \n\n\n\n\n\nExportar tabela\n\noutput_dist = path_dist.replace('zip', 'jay')\ndf_dist.to_jay(output_dist)\n\n\ndf_dist = dt.fread(output_dist)\ndf_dist\n\n\n\n  \n  \n    origemdestinodistanciatempo\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    011000111000100\n    1110001110002309.056.16906\n    2110001110003399.56.28906\n    311000111000481.20111.91775\n    4110001110005391.7046.13636\n    5110001110006353.4175.53989\n    6110001110007313.5926.18117\n    7110001110008326.9835.34175\n    8110001110009145.6782.346\n    9110001110010649.54513.405\n    10110001110011214.1253.83481\n    11110001110012130.772.54781\n    12110001110013357.5117.13067\n    1311000111001460.21031.02275\n    14110001110015172.9263.18425\n    ⋮⋮⋮⋮⋮\n    31,024,895530010522200161.7292.356\n    31,024,896530010522205382.7095.47956\n    31,024,897530010522220161.6032.24894\n    31,024,898530010522230190.0013.21608\n    31,024,89953001053001000\n  \n  \n  \n    31,024,900 rows × 4 columns"
  },
  {
    "objectID": "sections/database_sih.html",
    "href": "sections/database_sih.html",
    "title": "SIH",
    "section": "",
    "text": "from utils import data_load\nfrom datatable import dt, f"
  },
  {
    "objectID": "sections/database_sih.html#filtro-de-colunas",
    "href": "sections/database_sih.html#filtro-de-colunas",
    "title": "SIH",
    "section": "Filtro de Colunas",
    "text": "Filtro de Colunas\n\ncols_sih = {\n  # Infomações do procedimento:\n  'ano_internacao': 'ano',\n  'PROC_REA': 'parto_normal',\n  'CNES': 'cnes',\n  # Infomações da gestante:\n  'def_idade_anos': 'idade',\n  # Infomações de localidade do hospital de interção:\n  'int_codigo_adotado': 'hosp_cod_municipio',\n  'int_RSAUDCOD': 'hosp_regiao_saude',\n  # Infomações de localidade da residência:\n  'res_codigo_adotado': 'cod_municipio', # Armazena o código atribuído ao município de residência atualmente, tratando os casos em que múltiplos códigos tenham sido utilizados para um mesmo município ao longo do tempo\n  'res_REGIAO': 'regiao', # Nome da região da unidade da federação de residência\n  'res_SIGLA_UF': 'uf', # Sigla da unidade da federação de residência\n  'res_CODIGO_UF': 'cod_uf', # Código da UF de residência\n  'res_NOME_UF': 'nome_uf', # Nome da unidade da federação de residência\n  'res_MUNNOME': 'municipio', # Nome do município de residência\n  'res_MUNNOMEX': 'nome_municipio', # Nome do município de residência em maiúsculas e sem acentos\n  'res_CAPITAL': 'capital', # Indica (S/N) se o município de residência é capital de UF\n  'res_FRONTEIRA': 'fronteira', # Indica (S/N) se o município de residência faz parte da faixa de fronteira (conforme IBGE)\n  'res_AMAZONIA': 'amazonia', # Indica (S/N) se o município de residência faz parte da Amazônia Legal (conforme IBGE)\n  'res_MSAUDCOD': 'macroregiao_saude', # Código da Macrorregional de Saúde a que o Município de residência pertence\n  'res_RSAUDCOD': 'regiao_saude', # Código da Regional de Saúde a que o Município de residência pertence\n  'def_rsaud_res': 'nome_regiao_saude', # Nome da Região de saúde de residência do paciente\n  'res_CSAUDCOD': 'microregiao_saude', # Código da Microrregional de Saúde a que o Município de residência pertence\n  'res_LATITUDE': 'latitude', # Latitude do município de residência\n  'res_LONGITUDE': 'longitude', # Longitude do município de residência\n  'res_ALTITUDE': 'altitude', # Altitude do município de residência\n  'res_AREA': 'area', # Área do município de residência\n}"
  },
  {
    "objectID": "sections/database_sih.html#filtro-de-linhas",
    "href": "sections/database_sih.html#filtro-de-linhas",
    "title": "SIH",
    "section": "Filtro de Linhas",
    "text": "Filtro de Linhas\n\ndef filter_sih(df, cols):\n  cols = list(cols.values())[:-1]\n  cols = [c for c in cols if c in df.names]\n  df_filtered = df[\n    (\n      (f['ano'] > 2009) & (f['ano'] < 2020)\n    ) & (\n      (f['idade'] > 9) & (f['idade'] < 50)\n    ) & (\n      (f['parto_normal'] == 310010039) | (f['parto_normal'] == 411010034)\n    ) & (\n      (f['cnes'] != None)\n    ) & (\n      (f['uf'] != 'DF')\n    ) & (\n      (f['regiao_saude'] != None)\n    ) & (\n      (f['hosp_regiao_saude'] != None)\n    ) & (\n      (f['cod_municipio'] != None)\n    ), cols]\n  return df_filtered"
  },
  {
    "objectID": "sections/database_socioecon.html",
    "href": "sections/database_socioecon.html",
    "title": "Socioeconômico",
    "section": "",
    "text": "Descrição\nEntre os desafios mais urgentes do Sistema Único de Saúde (SUS) estão a ampliação do acesso e a adequação dos serviços ofertados. No Brasil, as relações existentes entre regiões e redes de atenção à saúde indicam que o avanço do processo de regionalização do SUS pode interferir positivamente na oferta de ações de serviços de saúde, tornando-a mais eficiente e abrangente.\nSaiba mais\nDownload\n\ndef scrap_indicator(driver, url, n_files=10):\n  driver.maximize_window()\n  anchors = None\n  columns = None\n  checkboxes = None\n  for i in tqdm(range(n_files)):\n    driver.get(url + 'clrSession=true')\n    driver.find_element(By.XPATH, \"//input[@type='radio' and @value='4']\").click()\n    columns = driver.find_elements(\n      By.XPATH, \"//input[@type='checkbox' and @onclick='SelAll(this)']\")\n    for column in columns: column.click()\n    driver.find_element(By.XPATH, \"//input[@id='btnEnviar']\").click()\n    if anchors == None:\n      anchors = driver.find_elements(By.CSS_SELECTOR, \"a[href*=listaLocs]\")\n      anchors = set([a.get_attribute('href') for a in anchors])\n      anchors = sorted(list(anchors))\n    for a in anchors: driver.execute_script(a[:-1])\n    checkboxes = driver.find_elements(\n      By.XPATH, \"//input[@type='checkbox' and @onclick='SelAll(this)']\")\n    n_cks = len(checkboxes)\n    pos_list = np.arange(0, n_cks, n_cks/10, dtype=int)\n    bgn = pos_list[i]\n    try: end = pos_list[i+1]\n    except: end = len(checkboxes)\n    selected_boxes = checkboxes[bgn:end]\n    for checkbox in selected_boxes:\n      if not checkbox.is_selected() and checkbox.is_displayed():\n        checkbox.click()\n    driver.find_element(By.XPATH, \"//input[@id='btnEnviar2']\").click()\n    driver.find_element(By.XPATH, \"//input[@id='btnTabela']\").click()\n    driver.get(url.replace('indicadores.php', 'output.php') + 'export=2')\n    print(f'{i+1:02}/{n_files}: checkboxes={n_cks}, selected={len(selected_boxes)}')\n    driver.switch_to.window(driver.window_handles[0])\n\n\nurl = 'https://indicadores.resbr.net.br/view/indicadores.php?'\nchromedriver = '/Users/lucas/Desktop/chromedriver'\ndriver = webdriver.Chrome(chromedriver)\nscrap_indicator(driver, url)\n\n/var/folders/9d/972tfrtd01z2hhl836z97zdr0000gn/T/ipykernel_83928/4099842114.py:3: DeprecationWarning:\n\nexecutable_path has been deprecated, please pass in a Service object\n\n 10%|█         | 1/10 [00:22<03:23, 22.56s/it]\n\n\n01/10: checkboxes=465, selected=46\n\n\n 20%|██        | 2/10 [00:30<01:49, 13.73s/it]\n\n\n02/10: checkboxes=465, selected=46\n\n\n 30%|███       | 3/10 [00:40<01:26, 12.38s/it]\n\n\n03/10: checkboxes=465, selected=46\n\n\n 40%|████      | 4/10 [00:51<01:10, 11.70s/it]\n\n\n04/10: checkboxes=465, selected=46\n\n\n 50%|█████     | 5/10 [00:59<00:51, 10.21s/it]\n\n\n05/10: checkboxes=465, selected=46\n\n\n 60%|██████    | 6/10 [01:11<00:43, 10.97s/it]\n\n\n06/10: checkboxes=465, selected=46\n\n\n 70%|███████   | 7/10 [01:22<00:33, 11.06s/it]\n\n\n07/10: checkboxes=465, selected=46\n\n\n 80%|████████  | 8/10 [01:34<00:22, 11.19s/it]\n\n\n08/10: checkboxes=465, selected=46\n\n\n 90%|█████████ | 9/10 [01:45<00:11, 11.25s/it]\n\n\n09/10: checkboxes=465, selected=46\n\n\n100%|██████████| 10/10 [01:56<00:00, 11.68s/it]\n\n\n10/10: checkboxes=465, selected=51\n\n\n\n\n\n\ndriver.close()\n\n\n\nTabela\n\ndir = get_path('INDICADORES', '')\nfiles = [dir+pth for pth in listdir(dir) if pth[-3:] == 'csv']\ndfs = [pd.read_csv(fl, encoding='latin1', sep=';') for fl in files]\nfor df in dfs: print(df.shape)\n\n(524, 184)\n(595, 184)\n(673, 184)\n(511, 184)\n(645, 184)\n(516, 184)\n(528, 184)\n(695, 184)\n(734, 184)\n(587, 184)\n\n\n\ndf = pd.concat(dfs)\ndf\n\n\n\n\n\n  \n    \n      \n      CÓDIGO\n      Tipo Localidade\n      UF\n      CIR\n      Município\n      Número de municípios na Região de Saúde\n      Município de capital\n      Municípios que fazem parte da zona de fronteira - IBGE\n      Municípios que fazem parte da faixa de fronteira - IBGE\n      Municípios que fazem parte da fronteira estadual\n      ...\n      Porcentual de Despesas com Investimentos pelo Total de Despesas em Saúde (2014)\n      Porcentual de Tranferências SUS pelo Total de Despesas em Saúde (2014)\n      Porcentual de Recursos Próprios em Saúde - EC29 (2014)\n      Recursos de Transferências SUS por habitante (2014)\n      Despesas com Recursos Próprios em Saúde por habitante (2014)\n      Cobertura populacional estimada pelas equipes de Atenção Básica (2014)\n      % de população beneficiária de planos de saúde (Setembro/2015)\n      Porcentual de famílias beneficiárias do Programa Bolsa Família (2014)\n      Porcentual de população beneficiária do Programa Bolsa Família (2014)\n      Unnamed: 183\n    \n  \n  \n    \n      0\n      15.001\n      REGSAU\n      -\n      Araguaia\n      -\n      15\n      0\n      0\n      0\n      7\n      ...\n      8,53\n      54,61\n      18,83\n      213,11\n      161,66\n      63,90\n      5,15\n      34,43\n      31,59\n      NaN\n    \n    \n      1\n      15.002\n      REGSAU\n      -\n      Baixo Amazonas\n      -\n      14\n      0\n      3\n      5\n      5\n      ...\n      10,61\n      50,82\n      20,77\n      204,22\n      159,30\n      42,20\n      6,18\n      49,15\n      52,45\n      NaN\n    \n    \n      2\n      15.003\n      REGSAU\n      -\n      Carajás\n      -\n      17\n      0\n      0\n      0\n      9\n      ...\n      9,44\n      26,16\n      23,79\n      177,49\n      455,16\n      52,23\n      22,06\n      34,18\n      35,01\n      NaN\n    \n    \n      3\n      15.004\n      REGSAU\n      -\n      Lago de Tucuruí\n      -\n      6\n      0\n      0\n      0\n      0\n      ...\n      8,08\n      53,90\n      20,08\n      208,23\n      166,48\n      49,99\n      3,07\n      45,30\n      39,86\n      NaN\n    \n    \n      4\n      15.013\n      REGSAU\n      -\n      Marajó I\n      -\n      9\n      0\n      0\n      0\n      0\n      ...\n      20,06\n      51,15\n      17,21\n      158,85\n      111,80\n      24,19\n      1,02\n      60,93\n      61,59\n      NaN\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      582\n      171.780\n      MUNIC\n      Tocantins\n      Sudeste\n      Ponte Alta do Bom Jesus\n      15\n      Não\n      Não\n      Não\n      Sim\n      ...\n      8,43\n      34,79\n      28,54\n      199,83\n      369,45\n      100\n      2,02\n      51,97\n      46,93\n      NaN\n    \n    \n      583\n      171.800\n      MUNIC\n      Tocantins\n      Sudeste\n      Porto Alegre do Tocantins\n      15\n      Não\n      Não\n      Não\n      Não\n      ...\n      10,52\n      35,89\n      19,05\n      220,42\n      386,41\n      100\n      1,15\n      52,65\n      48,82\n      NaN\n    \n    \n      584\n      171.865\n      MUNIC\n      Tocantins\n      Sudeste\n      Rio da Conceição\n      15\n      Não\n      Não\n      Não\n      Sim\n      ...\n      13,86\n      20,14\n      15,52\n      162,11\n      538,36\n      100\n      0,81\n      47,84\n      48,19\n      NaN\n    \n    \n      585\n      172.090\n      MUNIC\n      Tocantins\n      Sudeste\n      Taguatinga\n      15\n      Não\n      Não\n      Não\n      Sim\n      ...\n      0,25\n      44,17\n      33,13\n      187,31\n      292,60\n      78,25\n      26,20\n      37,30\n      41,23\n      NaN\n    \n    \n      586\n      172.093\n      MUNIC\n      Tocantins\n      Sudeste\n      Taipas do Tocantins\n      15\n      Não\n      Não\n      Não\n      Não\n      ...\n      1,73\n      13,75\n      17,79\n      80,78\n      514,21\n      100\n      0,38\n      48,24\n      56,10\n      NaN\n    \n  \n\n6008 rows × 184 columns\n\n\n\n\ndf.to_csv(dir + 'indicadores.csv.gzip', index=False)"
  },
  {
    "objectID": "sections/deslc_uf.html",
    "href": "sections/deslc_uf.html",
    "title": "Deslocamento de Gestantes",
    "section": "",
    "text": "output_deslc = get_path('GESTANTES', 'deslocamentos.csv.gzip')\ndf_deslc = pd.read_csv(output_deslc)\ndf_deslc\n\n\n\n\n\n  \n    \n      \n      bienio\n      parto_normal\n      origem\n      destino\n      mun_diff\n      regsau_diff\n      distancia\n      tempo\n      regiao\n      uf\n      ...\n      capital\n      socioecon\n      latitude\n      longitude\n      hosp_latitude\n      hosp_longitude\n      hosp_cnes\n      hosp_regiao_saude\n      hosp_uf\n      count\n    \n  \n  \n    \n      0\n      0\n      1\n      355030\n      355030\n      0\n      0\n      0.0000\n      0.000000\n      SD\n      SP\n      ...\n      1\n      5\n      -23.548\n      -46.636\n      -23.548\n      -46.636\n      2077701\n      3501\n      SP\n      76\n    \n    \n      1\n      0\n      1\n      130260\n      130260\n      0\n      0\n      0.0000\n      0.000000\n      NT\n      AM\n      ...\n      1\n      4\n      -3.102\n      -60.025\n      -3.102\n      -60.025\n      3004104\n      1301\n      AM\n      74\n    \n    \n      2\n      0\n      1\n      120040\n      120040\n      0\n      0\n      0.0000\n      0.000000\n      NT\n      AC\n      ...\n      1\n      2\n      -9.975\n      -67.810\n      -9.975\n      -67.810\n      2000733\n      1201\n      AC\n      73\n    \n    \n      3\n      0\n      1\n      160030\n      160030\n      0\n      0\n      0.0000\n      0.000000\n      NT\n      AP\n      ...\n      1\n      2\n      0.039\n      -51.066\n      0.039\n      -51.066\n      2020068\n      1601\n      AP\n      73\n    \n    \n      4\n      0\n      1\n      150180\n      150180\n      0\n      0\n      0.0000\n      0.000000\n      NT\n      PA\n      ...\n      0\n      1\n      -1.682\n      -50.480\n      -1.682\n      -50.480\n      2418657\n      1508\n      PA\n      73\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      123865\n      1\n      1\n      315980\n      270430\n      1\n      1\n      2275.6718\n      28.283556\n      SD\n      MG\n      ...\n      0\n      5\n      -18.839\n      -50.121\n      -9.666\n      -35.735\n      9923837\n      2701\n      AL\n      1\n    \n    \n      123866\n      1\n      1\n      350400\n      270430\n      1\n      1\n      2599.6191\n      31.918583\n      SD\n      SP\n      ...\n      0\n      4\n      -22.662\n      -50.412\n      -9.666\n      -35.735\n      9923837\n      2701\n      AL\n      1\n    \n    \n      123867\n      1\n      1\n      351880\n      270430\n      1\n      1\n      2404.7096\n      29.901278\n      SD\n      SP\n      ...\n      0\n      4\n      -23.463\n      -46.533\n      -9.666\n      -35.735\n      9923837\n      2701\n      AL\n      1\n    \n    \n      123868\n      1\n      1\n      354100\n      270430\n      1\n      1\n      2490.4019\n      31.241472\n      SD\n      SP\n      ...\n      0\n      4\n      -24.006\n      -46.403\n      -9.666\n      -35.735\n      9923837\n      2701\n      AL\n      1\n    \n    \n      123869\n      1\n      1\n      510623\n      270430\n      1\n      1\n      3217.7273\n      39.940667\n      CO\n      MT\n      ...\n      0\n      2\n      -14.797\n      -57.288\n      -9.666\n      -35.735\n      9923837\n      2701\n      AL\n      1\n    \n  \n\n123870 rows × 21 columns\n\n\n\n\ndf_deslc.to_excel(output_deslc.replace('csv.gzip', 'xlsx'), index=False)\n\n\ndf_deslc.info()\n\n<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 97665 entries, 0 to 97664\nData columns (total 19 columns):\n #   Column             Non-Null Count  Dtype  \n---  ------             --------------  -----  \n 0   bienio             97665 non-null  int64  \n 1   parto_normal       97665 non-null  int64  \n 2   origem             97665 non-null  int64  \n 3   destino            97665 non-null  int64  \n 4   mun_diff           97665 non-null  int64  \n 5   regsau_diff        97665 non-null  int64  \n 6   distancia          97665 non-null  float64\n 7   tempo              97665 non-null  float64\n 8   regiao             97665 non-null  object \n 9   uf                 97665 non-null  object \n 10  regiao_saude       97665 non-null  int64  \n 11  capital            97665 non-null  int64  \n 12  socioecon          97665 non-null  int64  \n 13  latitude           97665 non-null  float64\n 14  longitude          97665 non-null  float64\n 15  hosp_latitude      97665 non-null  float64\n 16  hosp_longitude     97665 non-null  float64\n 17  hosp_regiao_saude  97665 non-null  int64  \n 18  count              97665 non-null  int64  \ndtypes: float64(6), int64(11), object(2)\nmemory usage: 14.2+ MB\n\n\n\ndf_deslc['count'].sum()\n\n1350318\n\n\n\nregioes = df_deslc['regiao'].unique()\nregioes\n\narray(['Sudeste', 'Nordeste', 'Norte', 'Centro-Oeste', 'Sul'],\n      dtype=object)\n\n\n\ndesc_regiao = dict()\nfor regiao in regioes:\n  desc_regiao[regiao] = df_deslc[df_deslc['regiao'] == regiao]\n\n\ndesc_regiao[regioes[0]]\n\n\n\n\n\n  \n    \n      \n      bienio\n      parto_normal\n      origem\n      destino\n      mun_diff\n      regsau_diff\n      distancia\n      tempo\n      regiao\n      uf\n      regiao_saude\n      capital\n      socioecon\n      latitude\n      longitude\n      hosp_latitude\n      hosp_longitude\n      hosp_regiao_saude\n      count\n    \n  \n  \n    \n      0\n      0\n      1\n      355030\n      355030\n      0\n      0\n      0.0000\n      0.000000\n      Sudeste\n      SP\n      3501\n      1\n      5\n      -23.548\n      -46.636\n      -23.548\n      -46.636\n      3501\n      2368\n    \n    \n      1\n      0\n      0\n      355030\n      355030\n      0\n      0\n      0.0000\n      0.000000\n      Sudeste\n      SP\n      3501\n      1\n      5\n      -23.548\n      -46.636\n      -23.548\n      -46.636\n      3501\n      2020\n    \n    \n      2\n      0\n      1\n      330455\n      330455\n      0\n      0\n      0.0000\n      0.000000\n      Sudeste\n      RJ\n      3305\n      1\n      5\n      -22.903\n      -43.208\n      -22.903\n      -43.208\n      3305\n      1210\n    \n    \n      3\n      0\n      0\n      330455\n      330455\n      0\n      0\n      0.0000\n      0.000000\n      Sudeste\n      RJ\n      3305\n      1\n      5\n      -22.903\n      -43.208\n      -22.903\n      -43.208\n      3305\n      872\n    \n    \n      14\n      0\n      1\n      310620\n      310620\n      0\n      0\n      0.0000\n      0.000000\n      Sudeste\n      MG\n      3101\n      1\n      1\n      -19.817\n      -43.956\n      -19.817\n      -43.956\n      3101\n      466\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      97494\n      1\n      1\n      313440\n      521150\n      1\n      1\n      274.7725\n      3.272722\n      Sudeste\n      MG\n      3113\n      0\n      3\n      -19.728\n      -50.196\n      -18.420\n      -49.218\n      5216\n      1\n    \n    \n      97552\n      1\n      1\n      330100\n      521760\n      1\n      1\n      1232.6051\n      15.700639\n      Sudeste\n      RJ\n      3307\n      0\n      5\n      -21.754\n      -41.324\n      -15.453\n      -47.614\n      5206\n      1\n    \n    \n      97625\n      1\n      1\n      353730\n      522040\n      1\n      1\n      356.4371\n      5.702722\n      Sudeste\n      SP\n      3506\n      0\n      3\n      -21.420\n      -50.078\n      -18.991\n      -50.544\n      5213\n      1\n    \n    \n      97626\n      1\n      1\n      354340\n      522040\n      1\n      1\n      449.7193\n      6.066944\n      Sudeste\n      SP\n      3518\n      0\n      5\n      -21.178\n      -47.810\n      -18.991\n      -50.544\n      5213\n      1\n    \n    \n      97640\n      1\n      1\n      312950\n      522045\n      1\n      1\n      598.9450\n      7.536861\n      Sudeste\n      MG\n      3113\n      0\n      3\n      -19.478\n      -46.539\n      -16.708\n      -49.093\n      5202\n      1\n    \n  \n\n26527 rows × 19 columns\n\n\n\n\ndesc_regiao[regioes[0]].info()\n\n<class 'pandas.core.frame.DataFrame'>\nInt64Index: 26527 entries, 0 to 97640\nData columns (total 19 columns):\n #   Column             Non-Null Count  Dtype  \n---  ------             --------------  -----  \n 0   bienio             26527 non-null  int64  \n 1   parto_normal       26527 non-null  int64  \n 2   origem             26527 non-null  int64  \n 3   destino            26527 non-null  int64  \n 4   mun_diff           26527 non-null  int64  \n 5   regsau_diff        26527 non-null  int64  \n 6   distancia          26527 non-null  float64\n 7   tempo              26527 non-null  float64\n 8   regiao             26527 non-null  object \n 9   uf                 26527 non-null  object \n 10  regiao_saude       26527 non-null  int64  \n 11  capital            26527 non-null  int64  \n 12  socioecon          26527 non-null  int64  \n 13  latitude           26527 non-null  float64\n 14  longitude          26527 non-null  float64\n 15  hosp_latitude      26527 non-null  float64\n 16  hosp_longitude     26527 non-null  float64\n 17  hosp_regiao_saude  26527 non-null  int64  \n 18  count              26527 non-null  int64  \ndtypes: float64(6), int64(11), object(2)\nmemory usage: 4.0+ MB\n\n\n\ndf_deslc['uf'].value_counts()\n\nMG    11715\nSP    10539\nBA     9845\nPE     7320\nRS     6471\nMA     5352\nPR     5322\nSC     4266\nPA     4134\nPB     3667\nCE     3581\nGO     3478\nPI     3225\nRN     3098\nRJ     2485\nMT     2161\nTO     2146\nAL     1886\nES     1788\nSE     1262\nMS     1261\nRO     1141\nAM      832\nAC      291\nAP      228\nRR      171\nName: uf, dtype: int64\n\n\n\ndf_deslc[df_deslc['uf'] == 'MG'].info()\n\n<class 'pandas.core.frame.DataFrame'>\nInt64Index: 11715 entries, 14 to 97640\nData columns (total 19 columns):\n #   Column             Non-Null Count  Dtype  \n---  ------             --------------  -----  \n 0   bienio             11715 non-null  int64  \n 1   parto_normal       11715 non-null  int64  \n 2   origem             11715 non-null  int64  \n 3   destino            11715 non-null  int64  \n 4   mun_diff           11715 non-null  int64  \n 5   regsau_diff        11715 non-null  int64  \n 6   distancia          11715 non-null  float64\n 7   tempo              11715 non-null  float64\n 8   regiao             11715 non-null  object \n 9   uf                 11715 non-null  object \n 10  regiao_saude       11715 non-null  int64  \n 11  capital            11715 non-null  int64  \n 12  socioecon          11715 non-null  int64  \n 13  latitude           11715 non-null  float64\n 14  longitude          11715 non-null  float64\n 15  hosp_latitude      11715 non-null  float64\n 16  hosp_longitude     11715 non-null  float64\n 17  hosp_regiao_saude  11715 non-null  int64  \n 18  count              11715 non-null  int64  \ndtypes: float64(6), int64(11), object(2)\nmemory usage: 1.8+ MB\n\n\n\n# df_deslc.to_pandas().to_excel(output_deslc.replace('csv.gzip', 'xlsx'), index=False)"
  },
  {
    "objectID": "sections/table_deslc.html",
    "href": "sections/table_deslc.html",
    "title": "Deslocamento",
    "section": "",
    "text": "import pandas as pd\nfrom utils import get_path, group_cols\nfrom datatable import dt, f"
  },
  {
    "objectID": "sections/table_deslc.html#tabela-procedimentos",
    "href": "sections/table_deslc.html#tabela-procedimentos",
    "title": "Deslocamento",
    "section": "Tabela Procedimentos",
    "text": "Tabela Procedimentos\n\nColunas da tabela\n\ncols_deslc = {\n  'ano': 'ano',\n  'parto_normal': 'parto_normal',\n  'cod_municipio': 'origem',\n  'hosp_cod_municipio': 'destino',\n  # 'regiao_saude': 'regiao_saude',\n  # 'hosp_regiao_saude': 'hosp_regiao_saude',\n  'cnes': 'hosp_cnes',\n  'count': 'count',\n  ...: None,\n  # 'idade'\n}\n\n\n\nLinhas da tabela\n\ndef filter_deslc(df):\n  df_filtered = df[\n    (\n      f.ano == 2010\n    ) | (\n      f.ano == 2011\n    ) | (\n      f.ano == 2018\n    ) | (\n      f.ano == 2019\n    ), :]\n  return df_filtered\n\n\n\nCarregando tabela\n\npath_deslc = get_path('GESTANTES', 'procedimentos.csv.gzip')\ndf_deslc = dt.fread(path_deslc, columns=cols_deslc)\ndf_deslc = filter_deslc(df_deslc)\ndf_deslc\n\n\n\n  \n  \n    anoparto_normalhosp_cnesdestinoorigemcount\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    0201012077388355030355030362\n    1201012077388355030355030333\n    2201012077388355030355030331\n    3201012077388355030355030327\n    4201012077701355030355030318\n    5201012077388355030355030303\n    6201012077388355030355030297\n    7201012077701355030355030296\n    8201012077701355030355030295\n    9201012077388355030355030292\n    10201013151794130260130260288\n    11201013151794130260130260276\n    12201012077388355030355030270\n    13201012079186355030355030269\n    14201013151794130260130260269\n    ⋮⋮⋮⋮⋮⋮⋮\n    1,357,7732019099238372704303556401\n    1,357,7742019099238372704304209101\n    1,357,7752019099238372704305102851\n    1,357,7762019099238372704305106221\n    1,357,7772019099238372704305107921\n  \n  \n  \n    1,357,778 rows × 6 columns\n  \n\n\n\n\n\nAtualizando variável ano (biênio)\nValor da variável bienio:\n\n0 (False) = 2010/11\n1 (True) = 2018/19\n\n\ndf_deslc[:, dt.update(ano = (f.ano == 2018) | (f.ano == 2019))]\ndf_deslc.names = {'ano': 'bienio'}\ndf_deslc\n\n\n\n  \n  \n    bienioparto_normalhosp_cnesdestinoorigemcount\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    0012077388355030355030362\n    1012077388355030355030333\n    2012077388355030355030331\n    3012077388355030355030327\n    4012077701355030355030318\n    5012077388355030355030303\n    6012077388355030355030297\n    7012077701355030355030296\n    8012077701355030355030295\n    9012077388355030355030292\n    10013151794130260130260288\n    11013151794130260130260276\n    12012077388355030355030270\n    13012079186355030355030269\n    14013151794130260130260269\n    ⋮⋮⋮⋮⋮⋮⋮\n    1,357,7731099238372704303556401\n    1,357,7741099238372704304209101\n    1,357,7751099238372704305102851\n    1,357,7761099238372704305106221\n    1,357,7771099238372704305107921\n  \n  \n  \n    1,357,778 rows × 6 columns\n  \n\n\n\n\n\nTabela agrupada\n\ndf_deslc = group_cols(df_deslc, df_deslc.names[:-1])\ndf_deslc\n\n\n\n  \n  \n    bienioparto_normalhosp_cnesdestinoorigemcount\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    000272602902602901\n    100272602902607201\n    200942602902601402\n    3009426029026029058\n    400942602902603453\n    500942602902604001\n    600942602902605205\n    700942602902605402\n    800942602902606402\n    900942602902606801\n    10009426029026072023\n    11009426029026079043\n    1200942602902609609\n    1300942602902610001\n    1400942602902610601\n    ⋮⋮⋮⋮⋮⋮⋮\n    124,7741199238372704303159801\n    124,7751199238372704303504001\n    124,7761199238372704303518801\n    124,7771199238372704303541001\n    124,7781199238372704305106231\n  \n  \n  \n    124,779 rows × 6 columns\n  \n\n\n\n\nwith all: 3_355_691 rows\nwithout age: 461_276 rows\nwithout age and cnes: 98_055 rows"
  },
  {
    "objectID": "sections/table_deslc.html#tabela-municípios",
    "href": "sections/table_deslc.html#tabela-municípios",
    "title": "Deslocamento",
    "section": "Tabela Municípios",
    "text": "Tabela Municípios\n\nColunas da tabela\n\ncols_mun = {\n  'cod_municipio': 'origem',\n  'regiao': 'regiao',\n  'uf': 'uf',\n  # 'nome_uf': 'nome_uf',\n  # 'macroregiao_saude': 'macroregiao_saude',\n  'regiao_saude': 'regiao_saude',\n  'nome_regiao_saude': 'nome_regiao_saude',\n  # 'microregiao_saude': 'microregiao_saude',\n  'municipio': 'municipio',\n  'capital': 'capital',\n  'latitude': 'latitude',\n  'longitude': 'longitude',\n  'socioecon': 'socioecon',\n  ...: None\n}\n\n\ncols_mun_hosp = {\n  'cod_municipio': 'destino',\n  'uf': 'hosp_uf',\n  'regiao_saude': 'hosp_regiao_saude',\n  'latitude': 'hosp_latitude',\n  'longitude': 'hosp_longitude',\n  ...: None\n}\n\n\n\nCarregando tabela\n\npath_mun = get_path('GESTANTES', 'municipios.csv.gzip')\ndf_mun = dt.fread(path_mun, columns=cols_mun)\ndf_mun\n\n\n\n  \n  \n    origemregiaoufmunicipiocapitallatitudelongitudenome_regiao_saudesocioeconregiao_saude\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    0355030SudesteSPSão Paulo1−23.548−46.636São Paulo535016\n    1330455SudesteRJRio de Janeiro1−22.903−43.208Metropolitana I533005\n    2130260NorteAMManaus1−3.102−60.025Entorno Manaus e Alto Rio Negro413001\n    3230440NordesteCEFortaleza1−3.717−38.5431ª Região Fortaleza523001\n    4292740NordesteBASalvador1−12.971−38.511Salvador529020\n    5150140NortePABelém1−1.456−48.504Metropolitana I415006\n    6310620SudesteMGBelo Horizonte1−19.817−43.956Belo Horizonte Nova Lima Caeté531008\n    7431490SulRSPorto Alegre1−30.033−51.23Região 10 - Capital e Vale do Gravataí543010\n    8410690SulPRCuritiba1−25.428−49.2732ª RS Metropolitana541002\n    9270430NordesteALMaceió1−9.666−35.7351ª Região de Saúde327001\n    10520870Centro-OesteGOGoiânia1−16.679−49.254Central552001\n    11351880SudesteSPGuarulhos0−23.463−46.533Alto do Tietê435011\n    12221100NordestePITeresina1−5.089−42.802Entre Rios322004\n    13500270Centro-OesteMSCampo Grande1−20.443−54.646Campo Grande450001\n    14261160NordestePERecife1−8.054−34.881Recife526010\n    ⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮\n    5564520020Centro-OesteGOÁgua Limpa0−18.074−48.762Sul352017\n    5565510120Centro-OesteMTAraguainha0−16.856−53.033Sul Matogrossense251013\n    5566350640SudesteSPBilac0−21.403−50.471Central do DRS II535021\n    5567500627Centro-OesteMSParaíso das Águas0−19.0216−53.0116Campo Grande450001\n    5568330513SudesteRJSão José de Ubá0−21.358−41.943Noroeste333007\n  \n  \n  \n    5569 rows × 10 columns\n  \n\n\n\n\ndf_mun_hosp = dt.fread(path_mun, columns=cols_mun_hosp)\ndf_mun_hosp\n\n\n\n  \n  \n    destinohosp_ufhosp_latitudehosp_longitudehosp_regiao_saude\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    0355030SP−23.548−46.63635016\n    1330455RJ−22.903−43.20833005\n    2130260AM−3.102−60.02513001\n    3230440CE−3.717−38.54323001\n    4292740BA−12.971−38.51129020\n    5150140PA−1.456−48.50415006\n    6310620MG−19.817−43.95631008\n    7431490RS−30.033−51.2343010\n    8410690PR−25.428−49.27341002\n    9270430AL−9.666−35.73527001\n    10520870GO−16.679−49.25452001\n    11351880SP−23.463−46.53335011\n    12221100PI−5.089−42.80222004\n    13500270MS−20.443−54.64650001\n    14261160PE−8.054−34.88126010\n    ⋮⋮⋮⋮⋮⋮\n    5564520020GO−18.074−48.76252017\n    5565510120MT−16.856−53.03351013\n    5566350640SP−21.403−50.47135021\n    5567500627MS−19.0216−53.011650001\n    5568330513RJ−21.358−41.94333007\n  \n  \n  \n    5569 rows × 5 columns\n  \n\n\n\n\n\nAbreviando valores coluna Região\n\nregioes = {\n  'Norte': 'NT',\n  'Nordeste': 'ND',\n  'Centro-Oeste': 'CO',\n  'Sudeste': 'SD',\n  'Sul': 'SL',\n}\n\n\nreg = df_mun[:, 'regiao']\nreg.replace(regioes)\ndf_mun['regiao'] = reg\ndf_mun\n\n\n\n  \n  \n    origemregiaoufmunicipiocapitallatitudelongitudenome_regiao_saudesocioeconregiao_saude\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    0355030SDSPSão Paulo1−23.548−46.636São Paulo535016\n    1330455SDRJRio de Janeiro1−22.903−43.208Metropolitana I533005\n    2130260NTAMManaus1−3.102−60.025Entorno Manaus e Alto Rio Negro413001\n    3230440NDCEFortaleza1−3.717−38.5431ª Região Fortaleza523001\n    4292740NDBASalvador1−12.971−38.511Salvador529020\n    5150140NTPABelém1−1.456−48.504Metropolitana I415006\n    6310620SDMGBelo Horizonte1−19.817−43.956Belo Horizonte Nova Lima Caeté531008\n    7431490SLRSPorto Alegre1−30.033−51.23Região 10 - Capital e Vale do Gravataí543010\n    8410690SLPRCuritiba1−25.428−49.2732ª RS Metropolitana541002\n    9270430NDALMaceió1−9.666−35.7351ª Região de Saúde327001\n    10520870COGOGoiânia1−16.679−49.254Central552001\n    11351880SDSPGuarulhos0−23.463−46.533Alto do Tietê435011\n    12221100NDPITeresina1−5.089−42.802Entre Rios322004\n    13500270COMSCampo Grande1−20.443−54.646Campo Grande450001\n    14261160NDPERecife1−8.054−34.881Recife526010\n    ⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮\n    5564520020COGOÁgua Limpa0−18.074−48.762Sul352017\n    5565510120COMTAraguainha0−16.856−53.033Sul Matogrossense251013\n    5566350640SDSPBilac0−21.403−50.471Central do DRS II535021\n    5567500627COMSParaíso das Águas0−19.0216−53.0116Campo Grande450001\n    5568330513SDRJSão José de Ubá0−21.358−41.943Noroeste333007\n  \n  \n  \n    5569 rows × 10 columns"
  },
  {
    "objectID": "sections/table_deslc.html#tabela-distâncias",
    "href": "sections/table_deslc.html#tabela-distâncias",
    "title": "Deslocamento",
    "section": "Tabela Distâncias",
    "text": "Tabela Distâncias\n\nCarregando tabela\n\noutput_dist = get_path('GESTANTES', 'distancias.csv.gzip')\ndf_dist = dt.fread(output_dist)\ndf_dist = df_dist[:, df_dist.names[:-1]]\ndf_dist\n\n\n\n  \n  \n    origemdestinodistanciatempo\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    035503035503000\n    133045533045500\n    223044023044000\n    313026013026000\n    429274029274000\n    515014015014000\n    652087052087000\n    731062031062000\n    843149043149000\n    923037023044016.71610.344111\n    1027043027043000\n    1141069041069000\n    1221113021113000\n    1322110022110000\n    1450027050027000\n    ⋮⋮⋮⋮⋮\n    71,681522220520540443.0895.96508\n    71,682522220521830150.6191.85706\n    71,683522230521830501.827.04144\n    71,684522230521970203.7833.14278\n    71,685522230522045192.8553.10403\n  \n  \n  \n    71,686 rows × 4 columns"
  },
  {
    "objectID": "sections/table_deslc.html#juntando-com-outras",
    "href": "sections/table_deslc.html#juntando-com-outras",
    "title": "Deslocamento",
    "section": "Juntando com outras",
    "text": "Juntando com outras\n\nJuntando com Distâncias\n\ndf_dist.key = ['origem', 'destino']\ndf_deslc = df_deslc[:, :, dt.join(df_dist)]\ndf_dist\n\n\n\n  \n  \n    origemdestinodistanciatempo\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    11000111000100\n    110001110002309.056.16906\n    11000111000481.20111.91775\n    110001110006353.4175.53989\n    110001110009145.6782.346\n    110001110012130.772.54781\n    110001110013357.5117.13067\n    110001110015172.9263.18425\n    110001110018114.0611.87139\n    110001110020505.8569.16514\n    11000111002596.60651.98553\n    11000111002848.60990.835667\n    110001110030297.4554.71864\n    110001110149217.3553.67378\n    110001110150153.3372.8455\n    ⋮⋮⋮⋮\n    522230521560101.5551.65708\n    522230521830501.827.04144\n    522230521970203.7833.14278\n    522230522045192.8553.10403\n    522230530010190.0013.21608\n  \n  \n  \n    71,686 rows × 4 columns\n  \n\n\n\n\n\nJuntando com Municípios (res)\n\ndf_mun.key = 'origem'\ndf_deslc = df_deslc[:, :, dt.join(df_mun)]\ndf_mun\n\n\n\n  \n  \n    origemregiaoufmunicipiocapitallatitudelongitudenome_regiao_saudesocioeconregiao_saude\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    110001NTROAlta Floresta D'Oeste0−11.929−61.996Zona da Mata111005\n    110002NTROAriquemes0−9.913−63.041Vale do Jamari111001\n    110003NTROCabixi0−13.492−60.545Cone Sul211006\n    110004NTROCacoal0−11.438−61.448Café311002\n    110005NTROCerejeiras0−13.189−60.812Cone Sul211006\n    110006NTROColorado do Oeste0−13.117−60.542Cone Sul211006\n    110007NTROCorumbiara0−12.962−60.887Cone Sul211006\n    110008NTROCosta Marques0−12.445−64.227Vale do Guaporé111007\n    110009NTROEspigão D'Oeste0−11.525−61.013Café311002\n    110010NTROGuajará-Mirim0−10.783−65.339Madeira-Mamoré311004\n    110011NTROJaru0−10.439−62.466Central211003\n    110012NTROJi-Paraná0−10.882−61.944Central211003\n    110013NTROMachadinho D'Oeste0−9.444−61.981Vale do Jamari111001\n    110014NTRONova Brasilândia D'Oeste0−11.725−62.331Zona da Mata111005\n    110015NTROOuro Preto do Oeste0−10.716−62.248Central211003\n    ⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮\n    522190COGOVarjão0−17.045−49.631Centro Sul352002\n    522200COGOVianópolis0−16.742−48.516Centro Sul352002\n    522205COGOVicentinópolis0−17.735−49.806Centro Sul352002\n    522220COGOVila Boa0−15.038−47.059Entorno Norte252003\n    522230COGOVila Propício0−15.457−48.889São Patrício II252018\n  \n  \n  \n    5569 rows × 10 columns\n  \n\n\n\n\n\nJuntando com Municípios (hosp)\n\ndf_mun_hosp.key = 'destino'\ndf_deslc = df_deslc[:, :, dt.join(df_mun_hosp)]\ndf_deslc\n\n\n\n  \n  \n    bienioparto_normalhosp_cnesdestinoorigemcountdistanciatemporegiaouf…regiao_saudehosp_ufhosp_latitudehosp_longitudehosp_regiao_saude\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    00027260290260290100NDPE…26010PE−8.287−35.03526010\n    10027260290260720116.81390.319111NDPE…26010PE−8.287−35.03526010\n    20094260290260140273.99771.34642NDPE…26008PE−8.287−35.03526010\n    300942602902602905800NDPE…26010PE−8.287−35.03526010\n    40094260290260345342.40650.630306NDPE…26010PE−8.287−35.03526010\n    50094260290260400181.50931.15006NDPE…26006PE−8.287−35.03526010\n    60094260290260520527.99070.378972NDPE…26008PE−8.287−35.03526010\n    700942602902605402103.1171.53569NDPE…26006PE−8.287−35.03526010\n    8009426029026064021041.41492NDPE…26003PE−8.287−35.03526010\n    90094260290260680162.86550.96025NDPE…26010PE−8.287−35.03526010\n    1000942602902607202316.81390.319111NDPE…26010PE−8.287−35.03526010\n    1100942602902607904319.31150.414222NDPE…26010PE−8.287−35.03526010\n    120094260290260960941.47520.5945NDPE…26010PE−8.287−35.03526010\n    130094260290261000189.25131.06403NDPE…26008PE−8.287−35.03526010\n    140094260290261060169.37761.02681NDPE…26006PE−8.287−35.03526010\n    ⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋱⋮⋮⋮⋮⋮\n    124,77411992383727043031598012275.6728.2836SDMG…31032AL−9.666−35.73527001\n    124,77511992383727043035040012599.6231.9186SDSP…35092AL−9.666−35.73527001\n    124,77611992383727043035188012404.7129.9013SDSP…35011AL−9.666−35.73527001\n    124,77711992383727043035410012490.431.2415SDSP…35041AL−9.666−35.73527001\n    124,77811992383727043051062313217.7339.9407COMT…51007AL−9.666−35.73527001\n  \n  \n  \n    124,779 rows × 21 columns"
  },
  {
    "objectID": "sections/table_deslc.html#criando-colunas",
    "href": "sections/table_deslc.html#criando-colunas",
    "title": "Deslocamento",
    "section": "Criando colunas",
    "text": "Criando colunas\n\ndf_deslc['mun_diff'] = f.origem != f.destino\ndf_deslc['regsau_diff'] = f.regiao_saude != f.hosp_regiao_saude\ndf_deslc\n\n\n\n  \n  \n    bienioparto_normalhosp_cnesdestinoorigemcountdistanciatemporegiaouf…hosp_latitudehosp_longitudehosp_regiao_saudemun_diffregsau_diff\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    00027260290260290100NDPE…−8.287−35.0352601000\n    10027260290260720116.81390.319111NDPE…−8.287−35.0352601010\n    20094260290260140273.99771.34642NDPE…−8.287−35.0352601011\n    300942602902602905800NDPE…−8.287−35.0352601000\n    40094260290260345342.40650.630306NDPE…−8.287−35.0352601010\n    50094260290260400181.50931.15006NDPE…−8.287−35.0352601011\n    60094260290260520527.99070.378972NDPE…−8.287−35.0352601011\n    700942602902605402103.1171.53569NDPE…−8.287−35.0352601011\n    8009426029026064021041.41492NDPE…−8.287−35.0352601011\n    90094260290260680162.86550.96025NDPE…−8.287−35.0352601010\n    1000942602902607202316.81390.319111NDPE…−8.287−35.0352601010\n    1100942602902607904319.31150.414222NDPE…−8.287−35.0352601010\n    120094260290260960941.47520.5945NDPE…−8.287−35.0352601010\n    130094260290261000189.25131.06403NDPE…−8.287−35.0352601011\n    140094260290261060169.37761.02681NDPE…−8.287−35.0352601011\n    ⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋱⋮⋮⋮⋮⋮\n    124,77411992383727043031598012275.6728.2836SDMG…−9.666−35.7352700111\n    124,77511992383727043035040012599.6231.9186SDSP…−9.666−35.7352700111\n    124,77611992383727043035188012404.7129.9013SDSP…−9.666−35.7352700111\n    124,77711992383727043035410012490.431.2415SDSP…−9.666−35.7352700111\n    124,77811992383727043051062313217.7339.9407COMT…−9.666−35.7352700111\n  \n  \n  \n    124,779 rows × 23 columns"
  },
  {
    "objectID": "sections/table_deslc.html#removendo-valores-na",
    "href": "sections/table_deslc.html#removendo-valores-na",
    "title": "Deslocamento",
    "section": "Removendo valores NA",
    "text": "Removendo valores NA\n\ndf_deslc = df_deslc[(\n  f.latitude != None) & (\n  f.longitude != None) & (\n  f.hosp_latitude != None) & (\n  f.hosp_longitude != None), :]\ndf_deslc\n\n\n\n  \n  \n    bienioparto_normalhosp_cnesdestinoorigemcountdistanciatemporegiaouf…hosp_latitudehosp_longitudehosp_regiao_saudemun_diffregsau_diff\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    00027260290260290100NDPE…−8.287−35.0352601000\n    10027260290260720116.81390.319111NDPE…−8.287−35.0352601010\n    20094260290260140273.99771.34642NDPE…−8.287−35.0352601011\n    300942602902602905800NDPE…−8.287−35.0352601000\n    40094260290260345342.40650.630306NDPE…−8.287−35.0352601010\n    50094260290260400181.50931.15006NDPE…−8.287−35.0352601011\n    60094260290260520527.99070.378972NDPE…−8.287−35.0352601011\n    700942602902605402103.1171.53569NDPE…−8.287−35.0352601011\n    8009426029026064021041.41492NDPE…−8.287−35.0352601011\n    90094260290260680162.86550.96025NDPE…−8.287−35.0352601010\n    1000942602902607202316.81390.319111NDPE…−8.287−35.0352601010\n    1100942602902607904319.31150.414222NDPE…−8.287−35.0352601010\n    120094260290260960941.47520.5945NDPE…−8.287−35.0352601010\n    130094260290261000189.25131.06403NDPE…−8.287−35.0352601011\n    140094260290261060169.37761.02681NDPE…−8.287−35.0352601011\n    ⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋱⋮⋮⋮⋮⋮\n    123,86511992383727043031598012275.6728.2836SDMG…−9.666−35.7352700111\n    123,86611992383727043035040012599.6231.9186SDSP…−9.666−35.7352700111\n    123,86711992383727043035188012404.7129.9013SDSP…−9.666−35.7352700111\n    123,86811992383727043035410012490.431.2415SDSP…−9.666−35.7352700111\n    123,86911992383727043051062313217.7339.9407COMT…−9.666−35.7352700111\n  \n  \n  \n    123,870 rows × 23 columns"
  },
  {
    "objectID": "sections/table_deslc.html#ordenando",
    "href": "sections/table_deslc.html#ordenando",
    "title": "Deslocamento",
    "section": "Ordenando",
    "text": "Ordenando\n\nColunas\n\ncols_order = [\n  # procedimento:\n  'bienio',\n  'parto_normal',\n  # deslocamento:\n  'origem',\n  'destino',\n  'mun_diff',\n  'regsau_diff',\n  'distancia',\n  'tempo',\n  # localização de residência:\n  'regiao',\n  'uf',\n  # 'nome_uf',\n  # 'macroregiao_saude',\n  'regiao_saude',\n  'nome_regiao_saude',\n  # 'microregiao_saude',\n  # 'municipio',\n  'capital',\n  'socioecon',\n  'latitude',\n  'longitude',\n  # localização do hospital:\n  'hosp_latitude',\n  'hosp_longitude',\n  'hosp_cnes',\n  'hosp_regiao_saude',\n  'hosp_uf',\n  # contagem:\n  'count',\n]\n\n\ndf_deslc = df_deslc[:, cols_order]\ndf_deslc\n\n\n\n  \n  \n    bienioparto_normalorigemdestinomun_diffregsau_diffdistanciatemporegiaouf…hosp_longitudehosp_cneshosp_regiao_saudehosp_ufcount\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    0002602902602900000NDPE…−35.0352726010PE1\n    1002607202602901016.81390.319111NDPE…−35.0352726010PE1\n    2002601402602901173.99771.34642NDPE…−35.0359426010PE2\n    3002602902602900000NDPE…−35.0359426010PE58\n    4002603452602901042.40650.630306NDPE…−35.0359426010PE3\n    5002604002602901181.50931.15006NDPE…−35.0359426010PE1\n    6002605202602901127.99070.378972NDPE…−35.0359426010PE5\n    70026054026029011103.1171.53569NDPE…−35.0359426010PE2\n    800260640260290111041.41492NDPE…−35.0359426010PE2\n    9002606802602901062.86550.96025NDPE…−35.0359426010PE1\n    10002607202602901016.81390.319111NDPE…−35.0359426010PE23\n    11002607902602901019.31150.414222NDPE…−35.0359426010PE43\n    12002609602602901041.47520.5945NDPE…−35.0359426010PE9\n    13002610002602901189.25131.06403NDPE…−35.0359426010PE1\n    14002610602602901169.37761.02681NDPE…−35.0359426010PE1\n    ⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋱⋮⋮⋮⋮⋮\n    123,86511315980270430112275.6728.2836SDMG…−35.735992383727001AL1\n    123,86611350400270430112599.6231.9186SDSP…−35.735992383727001AL1\n    123,86711351880270430112404.7129.9013SDSP…−35.735992383727001AL1\n    123,86811354100270430112490.431.2415SDSP…−35.735992383727001AL1\n    123,86911510623270430113217.7339.9407COMT…−35.735992383727001AL1\n  \n  \n  \n    123,870 rows × 22 columns\n  \n\n\n\n\n\nLinhas\n\ndf_deslc = df_deslc.sort(f.bienio, f.parto_normal, f.origem, f.destino)\ndf_deslc\n\n\n\n  \n  \n    bienioparto_normalorigemdestinomun_diffregsau_diffdistanciatemporegiaouf…hosp_longitudehosp_cneshosp_regiao_saudehosp_ufcount\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    0001100011100010000NTRO…−61.996267947711005RO35\n    10011000111001211130.772.54781NTRO…−61.944249527911003RO6\n    20011000111001311357.5117.13067NTRO…−61.981280861711001RO1\n    30011000111001811114.0611.87139NTRO…−61.193249653411002RO1\n    40011000111002011505.8569.16514NTRO…−63.904400130311004RO2\n    5001100011100281048.60990.835667NTRO…−61.778249522811005RO9\n    600110001351110112196.3530.8736NTRO…−48.973208932735151SP1\n    7001100021100020000NTRO…−63.041249429911001RO59\n    8001100021100111195.47272.33883NTRO…−62.466280860911003RO2\n    90011000211001211181.3643.735NTRO…−61.944249527911003RO1\n    100011000211002011203.5823.13858NTRO…−63.904400130311004RO3\n    11001100021101401058.29220.905083NTRO…−63.29400303911001RO1\n    1200110002353060113002.2139.7158NTRO…−46.188208005235011SP3\n    130011000311000211610.68910.3634NTRO…−63.041249429911001RO1\n    14001100031100030000NTRO…−60.545280852811006RO31\n    ⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋱⋮⋮⋮⋮⋮\n    123,865115222055222050000COGO…−49.806238369152002GO26\n    123,866115222205200801192.98371.12764COGO…−46.492253491652007GO1\n    123,867115222205208001087.27481.07444COGO…−47.334253496752003GO26\n    123,868115222305208601032.58180.52775COGO…−49.117253458452018GO20\n    123,8691152223052197011203.7833.14278COGO…−49.706253527052013GO1\n  \n  \n  \n    123,870 rows × 22 columns"
  },
  {
    "objectID": "sections/table_deslc.html#tabela-referência",
    "href": "sections/table_deslc.html#tabela-referência",
    "title": "Deslocamento",
    "section": "Tabela referência",
    "text": "Tabela referência\n\ndf_deslc = dt.fread(output_deslc)"
  },
  {
    "objectID": "sections/table_deslc.html#brasil-sem-cnes",
    "href": "sections/table_deslc.html#brasil-sem-cnes",
    "title": "Deslocamento",
    "section": "Brasil (sem CNES)",
    "text": "Brasil (sem CNES)\n\ndf_deslc_brasil = df_deslc[:, f[:].remove(f.hosp_cnes)]\ndf_deslc_brasil = df_deslc_brasil[:, dt.sum(f.count), dt.by(df_deslc_brasil.names[:-1])]\ndf_deslc_brasil\n\n\n\n  \n  \n    bienioparto_normalorigemdestinomun_diffregsau_diffdistanciatemporegiaouf…hosp_latitudehosp_longitudehosp_regiao_saudehosp_ufcount\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    0001100011100010000NTRO…−11.929−61.99611005RO35\n    10011000111001211130.772.54781NTRO…−10.882−61.94411003RO6\n    20011000111001311357.5117.13067NTRO…−9.444−61.98111001RO1\n    30011000111001811114.0611.87139NTRO…−11.673−61.19311002RO1\n    40011000111002011505.8569.16514NTRO…−8.762−63.90411004RO2\n    5001100011100281048.60990.835667NTRO…−11.733−61.77811005RO9\n    600110001351110112196.3530.8736NTRO…−21.138−48.97335151SP1\n    7001100021100020000NTRO…−9.913−63.04111001RO59\n    8001100021100111195.47272.33883NTRO…−10.439−62.46611003RO2\n    90011000211001211181.3643.735NTRO…−10.882−61.94411003RO1\n    100011000211002011203.5823.13858NTRO…−8.762−63.90411004RO3\n    11001100021101401058.29220.905083NTRO…−10.246−63.2911001RO1\n    1200110002353060113002.2139.7158NTRO…−23.523−46.18835011SP3\n    130011000311000211610.68910.3634NTRO…−9.913−63.04111001RO1\n    14001100031100030000NTRO…−13.492−60.54511006RO31\n    ⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋱⋮⋮⋮⋮⋮\n    97,660115222055222050000COGO…−17.735−49.80652002GO26\n    97,661115222205200801192.98371.12764COGO…−14.481−46.49252007GO1\n    97,662115222205208001087.27481.07444COGO…−15.537−47.33452003GO26\n    97,663115222305208601032.58180.52775COGO…−15.317−49.11752018GO20\n    97,6641152223052197011203.7833.14278COGO…−14.438−49.70652013GO1\n  \n  \n  \n    97,665 rows × 21 columns\n  \n\n\n\n\noutput_deslc_brasil = get_path('GESTANTES', 'deslocamentos_brasil.csv.gzip') # xlsx\ndf_deslc_brasil.to_csv(output_deslc_brasil)\npd.read_csv(output_deslc_brasil).to_excel(output_deslc_brasil.replace('csv.gzip', 'xlsx'), index=False)\n# df_deslc_brasil.to_pandas().to_excel(output_deslc_brasil, index=False)"
  },
  {
    "objectID": "sections/table_deslc.html#rj",
    "href": "sections/table_deslc.html#rj",
    "title": "Deslocamento",
    "section": "RJ",
    "text": "RJ\n\nCom CNES\n\ndf_deslc_rj_cnes = df_deslc[(f.uf == 'RJ'), :]\ndf_deslc_rj_cnes\n\n\n\n  \n  \n    bienioparto_normalorigemdestinomun_diffregsau_diffdistanciatemporegiaouf…hosp_longitudehosp_cneshosp_regiao_saudehosp_ufcount\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    00033001032024511614.6137.66281SDRJ…−41.511244820332002ES2\n    1003300103300100000SDRJ…−44.318228086833001RJ57\n    2003300103300100000SDRJ…−44.318228138433001RJ48\n    30033001035184011222.9883.47778SDRJ…−45.193208151235172SP1\n    4003300203300200000SDRJ…−42.343227309833002RJ58\n    5003300203300701043.17870.650056SDRJ…−42.019590339433002RJ3\n    60033002033045511118.0521.55372SDRJ…−43.208227039033005RJ1\n    70033002033045511118.0521.55372SDRJ…−43.208227343833005RJ1\n    8003300203305201031.04310.417139SDRJ…−42.103228047733002RJ2\n    9003300203305501022.83790.348SDRJ…−42.51227429933002RJ1\n    10003300223306001025.16550.377083SDRJ…−43.209229492333003RJ32\n    11003300233300230000SDRJ…−41.882620070233002RJ23\n    12003300233300701026.3750.542528SDRJ…−42.019590339433002RJ2\n    13003300233305201032.28080.655444SDRJ…−42.103228047733002RJ2\n    14003300253300201054.11540.823222SDRJ…−42.343227309833002RJ1\n    ⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋱⋮⋮⋮⋮⋮\n    3458113306303303951015.83690.40825SDRJ…−44.001227114133004RJ3\n    3459113306303304111035.13780.636833SDRJ…−44.29530786433004RJ1\n    34601133063033045511127.4331.93703SDRJ…−43.208702739733005RJ1\n    34611133063033049011146.8082.26831SDRJ…−43.054229759033006RJ1\n    3462113306303306300000SDRJ…−44.1042513533004RJ63\n  \n  \n  \n    3463 rows × 22 columns\n  \n\n\n\n\noutput_rj_cnes = get_path('GESTANTES', 'deslocamentos_rj_cnes.csv.gzip') # xlsx\ndf_deslc_rj_cnes.to_csv(output_rj_cnes)\npd.read_csv(output_rj_cnes).to_excel(output_rj_cnes.replace('csv.gzip', 'xlsx'), index=False)\n# df_deslc_rj_cnes.to_pandas().to_excel(output_rj_cnes, index=False)\n\n\n\nSem CNES\n\ndf_deslc_rj = df_deslc_rj_cnes[:, f[:].remove(f.hosp_cnes)]\ndf_deslc_rj = df_deslc_rj[:, dt.sum(f.count), dt.by(df_deslc_rj.names[:-1])]\ndf_deslc_rj\n\n\n\n  \n  \n    bienioparto_normalorigemdestinomun_diffregsau_diffdistanciatemporegiaouf…hosp_latitudehosp_longitudehosp_regiao_saudehosp_ufcount\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    00033001032024511614.6137.66281SDRJ…−20.234−41.51132002ES2\n    1003300103300100000SDRJ…−23.007−44.31833001RJ105\n    20033001035184011222.9883.47778SDRJ…−22.816−45.19335172SP1\n    3003300203300200000SDRJ…−22.873−42.34333002RJ58\n    4003300203300701043.17870.650056SDRJ…−22.879−42.01933002RJ3\n    50033002033045511118.0521.55372SDRJ…−22.903−43.20833005RJ2\n    6003300203305201031.04310.417139SDRJ…−22.839−42.10333002RJ2\n    7003300203305501022.83790.348SDRJ…−22.92−42.5133002RJ1\n    8003300223306001025.16550.377083SDRJ…−22.117−43.20933003RJ32\n    9003300233300230000SDRJ…−22.747−41.88233002RJ23\n    10003300233300701026.3750.542528SDRJ…−22.879−42.01933002RJ2\n    11003300233305201032.28080.655444SDRJ…−22.839−42.10333002RJ2\n    12003300253300201054.11540.823222SDRJ…−22.873−42.34333002RJ1\n    13003300253300250000SDRJ…−22.966−42.02833002RJ25\n    14003300253300701014.35760.255528SDRJ…−22.879−42.01933002RJ20\n    ⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋱⋮⋮⋮⋮⋮\n    2480113306303303951015.83690.40825SDRJ…−22.513−44.00133004RJ3\n    2481113306303304111035.13780.636833SDRJ…−22.42−44.2933004RJ1\n    24821133063033045511127.4331.93703SDRJ…−22.903−43.20833005RJ1\n    24831133063033049011146.8082.26831SDRJ…−22.827−43.05433006RJ1\n    2484113306303306300000SDRJ…−22.523−44.10433004RJ63\n  \n  \n  \n    2485 rows × 21 columns\n  \n\n\n\n\noutput_rj = get_path('GESTANTES', 'deslocamentos_rj.csv.gzip') # xlsx\ndf_deslc_rj.to_csv(output_rj)\npd.read_csv(output_rj).to_excel(output_rj.replace('csv.gzip', 'xlsx'), index=False)\n# df_deslc_rj.to_pandas().to_excel(output_rj, index=False)"
  },
  {
    "objectID": "sections/table_dists.html",
    "href": "sections/table_dists.html",
    "title": "Distâncias",
    "section": "",
    "text": "from utils import get_path, group_cols\nfrom datatable import dt, f"
  },
  {
    "objectID": "sections/table_dists.html#tabela-distâncias",
    "href": "sections/table_dists.html#tabela-distâncias",
    "title": "Distâncias",
    "section": "Tabela Distâncias",
    "text": "Tabela Distâncias\n\nCarregando tabela\n\npath_dist = get_path('DISTANCIAS', 'matriz_distancias.jay')\ndf_dist = dt.fread(path_dist)\ndf_dist\n\n\n\n  \n  \n    origemdestinodistanciatempo\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    011000111000100\n    1110001110002309.056.16906\n    2110001110003399.56.28906\n    311000111000481.20111.91775\n    4110001110005391.7046.13636\n    5110001110006353.4175.53989\n    6110001110007313.5926.18117\n    7110001110008326.9835.34175\n    8110001110009145.6782.346\n    9110001110010649.54513.405\n    10110001110011214.1253.83481\n    11110001110012130.772.54781\n    12110001110013357.5117.13067\n    1311000111001460.21031.02275\n    14110001110015172.9263.18425\n    ⋮⋮⋮⋮⋮\n    31,024,895530010522200161.7292.356\n    31,024,896530010522205382.7095.47956\n    31,024,897530010522220161.6032.24894\n    31,024,898530010522230190.0013.21608\n    31,024,89953001053001000\n  \n  \n  \n    31,024,900 rows × 4 columns"
  },
  {
    "objectID": "sections/table_dists.html#tabela-procedimentos",
    "href": "sections/table_dists.html#tabela-procedimentos",
    "title": "Distâncias",
    "section": "Tabela Procedimentos",
    "text": "Tabela Procedimentos\n\nColunas da tabela\n\ncols_proc = {\n  'cod_municipio': 'origem',\n  'hosp_cod_municipio': 'destino',\n  ...: None\n}\n\n\n\nCarregando tabela\n\npath_proc = get_path('GESTANTES', 'procedimentos.csv.gzip')\ndf_proc = dt.fread(path_proc, columns=cols_proc)\ndf_proc\n\n\n\n  \n  \n    destinoorigem\n    ▪▪▪▪▪▪▪▪\n  \n  \n    0355030355030\n    1355030355030\n    2355030355030\n    3355030355030\n    4355030355030\n    5355030355030\n    6355030355030\n    7355030355030\n    8355030355030\n    9355030355030\n    10130260130260\n    11130260130260\n    12355030355030\n    13355030355030\n    14130260130260\n    ⋮⋮⋮\n    3,355,686270430355640\n    3,355,687270430420910\n    3,355,688270430510285\n    3,355,689270430510622\n    3,355,690270430510792\n  \n  \n  \n    3,355,691 rows × 2 columns\n  \n\n\n\n\n\nTabela agrupada\n\ndf_proc = group_cols(df_proc, list(cols_proc.values())[:-1])\ndf_proc = df_proc.sort(-f.count)\ndf_proc\n\n\n\n  \n  \n    origemdestinocount\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    035503035503021807\n    13304553304559922\n    22304402304407113\n    31302601302605488\n    42927402927405406\n    51501401501405142\n    65208705208704669\n    73106203106204408\n    84314904314903879\n    92303702304403507\n    102704302704303353\n    114106904106903310\n    122111302111303208\n    132211002211003059\n    145002705002702902\n    ⋮⋮⋮⋮\n    71,6815222205205401\n    71,6825222205218301\n    71,6835222305218301\n    71,6845222305219701\n    71,6855222305220451\n  \n  \n  \n    71,686 rows × 3 columns"
  },
  {
    "objectID": "sections/table_muns.html",
    "href": "sections/table_muns.html",
    "title": "Municípios",
    "section": "",
    "text": "from utils import get_path, group_cols\nfrom datatable import dt, f, as_type"
  },
  {
    "objectID": "sections/table_muns.html#sih",
    "href": "sections/table_muns.html#sih",
    "title": "Municípios",
    "section": "SIH",
    "text": "SIH\n\nColunas da tabela\n\ncols_mun = [\n  'cod_municipio',\n  'regiao',\n  'uf',\n  'cod_uf',\n  'nome_uf',\n  'municipio',\n  'nome_municipio',\n  'capital',\n  'fronteira',\n  'amazonia',\n  'macroregiao_saude',\n  # 'regiao_saude',\n  # 'nome_regiao_saude',\n  'microregiao_saude',\n  'latitude',\n  'longitude',\n  'altitude',\n  'area',\n]\n\n\npath_sih = get_path('SIH', 'SIH.jay')\ndf_mun = dt.fread(path_sih)\ndf_mun = df_mun[:, cols_mun]\ndf_mun\n\n\n\n  \n  \n    cod_municipioregiaoufcod_ufnome_ufmunicipionome_municipiocapitalfronteiraamazonia…microregiao_saudelatitudelongitudealtitudearea\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    0120005NorteAC12ACREAssis BrasilASSIS BRASILNSS…12900−10.941−69.5672392875.91\n    1120040NorteAC12ACRERio BrancoRIO BRANCOSSS…12900−9.975−67.811539222.58\n    2120040NorteAC12ACRERio BrancoRIO BRANCOSSS…12900−9.975−67.811539222.58\n    3120040NorteAC12ACRERio BrancoRIO BRANCOSSS…12900−9.975−67.811539222.58\n    4120040NorteAC12ACRERio BrancoRIO BRANCOSSS…12900−9.975−67.811539222.58\n    5120040NorteAC12ACRERio BrancoRIO BRANCOSSS…12900−9.975−67.811539222.58\n    6120040NorteAC12ACRERio BrancoRIO BRANCOSSS…12900−9.975−67.811539222.58\n    7120005NorteAC12ACREAssis BrasilASSIS BRASILNSS…12900−10.941−69.5672392875.91\n    8120040NorteAC12ACRERio BrancoRIO BRANCOSSS…12900−9.975−67.811539222.58\n    9120040NorteAC12ACRERio BrancoRIO BRANCOSSS…12900−9.975−67.811539222.58\n    10120005NorteAC12ACREAssis BrasilASSIS BRASILNSS…12900−10.941−69.5672392875.91\n    11120038NorteAC12ACREPlácido de CastroPLACIDO DE CASTRONSS…12900−10.276−67.151362047.45\n    12120040NorteAC12ACRERio BrancoRIO BRANCOSSS…12900−9.975−67.811539222.58\n    13120001NorteAC12ACREAcrelândiaACRELANDIANSS…12900−9.828−66.883251574.55\n    14120040NorteAC12ACRERio BrancoRIO BRANCOSSS…12900−9.975−67.811539222.58\n    ⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋱⋮⋮⋮⋮⋮\n    16,816,986171840NorteTO17TOCANTINSPresidente KennedyPRESIDENTE KENNEDYNNS…17900−8.539−48.506247770.418\n    16,816,987171670NorteTO17TOCANTINSColméiaCOLMEIANNS…17900−8.729−48.765362990.712\n    16,816,988171670NorteTO17TOCANTINSColméiaCOLMEIANNS…17900−8.729−48.765362990.712\n    16,816,989170930NorteTO17TOCANTINSGuaraíGUARAINNS…17900−8.834−48.512592268.15\n    16,816,990171250NorteTO17TOCANTINSMarianópolis do TocantinsMARIANOPOLIS DO TOCANTINSNNS…17900−9.796−49.6541462091.36\n  \n  \n  \n    16,816,991 rows × 16 columns\n  \n\n\n\n\n\nTabela agrupada\n\ndf_mun = group_cols(df_mun, cols_mun)\ndf_mun = df_mun.sort(-f.count)\ndf_mun\n\n\n\n  \n  \n    cod_municipioregiaoufcod_ufnome_ufmunicipionome_municipiocapitalfronteiraamazonia…latitudelongitudealtitudeareacount\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    0355030SudesteSP35SAO PAULOSão PauloSAO PAULOSNN…−23.548−46.6367601522.99806352\n    1330455SudesteRJ33RIO DE JANEIRORio de JaneiroRIO DE JANEIROSNN…−22.903−43.20821182.3368216\n    2130260NorteAM13AMAZONASManausMANAUSSNS…−3.102−60.0259211401.1297036\n    3230440NordesteCE23CEARAFortalezaFORTALEZASNN…−3.717−38.54321313.14203370\n    4292740NordesteBA29BAHIASalvadorSALVADORSNN…−12.971−38.5118706.799169924\n    5150140NortePA15PARABelémBELEMSNS…−1.456−48.504101064.92126918\n    6310620SudesteMG31MINAS GERAISBelo HorizonteBELO HORIZONTESNN…−19.817−43.956858330.954125370\n    7431490SulRS43RIO GRANDE DO SULPorto AlegrePORTO ALEGRESNN…−30.033−51.233496.827105321\n    8410690SulPR41PARANACuritibaCURITIBASNN…−25.428−49.273934434.967101337\n    9270430NordesteAL27ALAGOASMaceióMACEIOSNN…−9.666−35.73516510.65593551\n    10520870Centro-OesteGO52GOIASGoiâniaGOIANIASNN…−16.679−49.254749739.49292068\n    11351880SudesteSP35SAO PAULOGuarulhosGUARULHOSNNN…−23.463−46.533759318.01491617\n    12221100NordestePI22PIAUITeresinaTERESINASNN…−5.089−42.802721755.786245\n    13500270Centro-OesteMS50MATO GROSSO DO SULCampo GrandeCAMPO GRANDESNN…−20.443−54.6465328096.0584481\n    14261160NordestePE26PERNAMBUCORecifeRECIFESNN…−8.054−34.8814217.49483833\n    ⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋱⋮⋮⋮⋮⋮\n    5564520020Centro-OesteGO52GOIASÁgua LimpaAGUA LIMPANNN…−18.074−48.762682452.85625\n    5565510120Centro-OesteMT51MATO GROSSOAraguainhaARAGUAINHANNS…−16.856−53.033462688.67623\n    5566350640SudesteSP35SAO PAULOBilacBILACNNN…−21.403−50.471431157.27818\n    5567500627Centro-OesteMS50MATO GROSSO DO SULParaíso das ÁguasPARAISO DAS AGUASNNN…−19.0216−53.011605032.4715\n    5568330513SudesteRJ33RIO DE JANEIROSão José de UbáSAO JOSE DE UBANNN…−21.358−41.94395250.5966\n  \n  \n  \n    5569 rows × 17 columns"
  },
  {
    "objectID": "sections/table_muns.html#índice-socioeconômico",
    "href": "sections/table_muns.html#índice-socioeconômico",
    "title": "Municípios",
    "section": "Índice Socioeconômico",
    "text": "Índice Socioeconômico\n\nColunas da tabela\n\ncols_socioecon = {\n  'CÓDIGO': 'codigo',\n  'Tipo Localidade': 'tipo',\n  'CIR': 'nome_regiao_saude',\n  'Grupos de Regiões de Saúde segundo Condições Socioeconômicas e de Saúde - 2016': 'socioecon',\n  ...: None\n}\n\n\npath_socioeco = path_socioeco = get_path('INDICADORES', 'indicadores.csv.gzip')\ndf_socioeco = dt.fread(path_socioeco, columns=cols_socioecon)\ndf_socioeco = df_socioeco.to_pandas()\ndf_socioeco\n\n\n\n\n\n  \n    \n      \n      codigo\n      tipo\n      nome_regiao_saude\n      socioecon\n    \n  \n  \n    \n      0\n      15.001\n      REGSAU\n      Araguaia\n      1\n    \n    \n      1\n      15.002\n      REGSAU\n      Baixo Amazonas\n      1\n    \n    \n      2\n      15.003\n      REGSAU\n      Carajás\n      2\n    \n    \n      3\n      15.004\n      REGSAU\n      Lago de Tucuruí\n      1\n    \n    \n      4\n      15.013\n      REGSAU\n      Marajó I\n      1\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      6003\n      171.780\n      MUNIC\n      Sudeste\n      1\n    \n    \n      6004\n      171.800\n      MUNIC\n      Sudeste\n      1\n    \n    \n      6005\n      171.865\n      MUNIC\n      Sudeste\n      1\n    \n    \n      6006\n      172.090\n      MUNIC\n      Sudeste\n      1\n    \n    \n      6007\n      172.093\n      MUNIC\n      Sudeste\n      1\n    \n  \n\n6008 rows × 4 columns\n\n\n\n\n\nMunicípios\n\ndf_munic = df_socioeco.loc[df_socioeco['tipo'] == 'MUNIC'].copy()\ndf_munic.drop(columns=['tipo'], inplace=True)\ndf_munic['codigo'] = df_munic['codigo'].apply(lambda x: (str(x).replace('.', '') + '00')[:6])\ndf_munic['prefix'] = df_munic['codigo'].apply(lambda x: str(x)[:2])\ndf_munic = df_munic.rename(columns={'codigo': 'cod_municipio'})\ndf_munic\n\n\n\n\n\n  \n    \n      \n      cod_municipio\n      nome_regiao_saude\n      socioecon\n      prefix\n    \n  \n  \n    \n      13\n      310600\n      João Monlevade\n      3\n      31\n    \n    \n      14\n      313620\n      João Monlevade\n      3\n      31\n    \n    \n      15\n      314470\n      João Monlevade\n      3\n      31\n    \n    \n      16\n      315570\n      João Monlevade\n      3\n      31\n    \n    \n      17\n      316100\n      João Monlevade\n      3\n      31\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      6003\n      171780\n      Sudeste\n      1\n      17\n    \n    \n      6004\n      171800\n      Sudeste\n      1\n      17\n    \n    \n      6005\n      171865\n      Sudeste\n      1\n      17\n    \n    \n      6006\n      172090\n      Sudeste\n      1\n      17\n    \n    \n      6007\n      172093\n      Sudeste\n      1\n      17\n    \n  \n\n5570 rows × 4 columns\n\n\n\n\n\nRegiões de Saúde\n\ndf_regsau = df_socioeco[df_socioeco['tipo'] == 'REGSAU'].copy()\ndf_regsau.drop(columns=['tipo', 'socioecon'], inplace=True)\ndf_regsau['codigo'] = df_regsau['codigo'].apply(lambda x: (str(x).replace('.', '') + '0')[:5])\ndf_regsau['prefix'] = df_regsau['codigo'].apply(lambda x: str(x)[:2])\ndf_regsau = df_regsau.rename(columns={'codigo': 'regiao_saude'})\ndf_regsau\n\n\n\n\n\n  \n    \n      \n      regiao_saude\n      nome_regiao_saude\n      prefix\n    \n  \n  \n    \n      0\n      15001\n      Araguaia\n      15\n    \n    \n      1\n      15002\n      Baixo Amazonas\n      15\n    \n    \n      2\n      15003\n      Carajás\n      15\n    \n    \n      3\n      15004\n      Lago de Tucuruí\n      15\n    \n    \n      4\n      15013\n      Marajó I\n      15\n    \n    \n      ...\n      ...\n      ...\n      ...\n    \n    \n      5431\n      17001\n      Médio Norte Araguaia\n      17\n    \n    \n      5432\n      28005\n      Nossa Senhora da Glória\n      28\n    \n    \n      5433\n      28006\n      Nossa Senhora do Socorro\n      28\n    \n    \n      5434\n      28007\n      Propriá\n      28\n    \n    \n      5435\n      17003\n      Sudeste\n      17\n    \n  \n\n438 rows × 3 columns\n\n\n\n\n\nMerge\n\ndf_socioeco = df_munic.merge(df_regsau, how='left', left_on=['prefix', 'nome_regiao_saude'], right_on=['prefix', 'nome_regiao_saude'])\ndf_socioeco = dt.Frame(df_socioeco)\ndf_socioeco[:, 'cod_municipio'] = df_socioeco[:, dt.as_type(f.cod_municipio, int)]\ndf_socioeco\n\n\n\n  \n  \n    cod_municipionome_regiao_saudesocioeconprefixregiao_saude\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    0310600João Monlevade33131035\n    1313620João Monlevade33131035\n    2314470João Monlevade33131035\n    3315570João Monlevade33131035\n    4316100João Monlevade33131035\n    5310855João Pinheiro23131036\n    6313630João Pinheiro23131036\n    7313753João Pinheiro23131036\n    8310280Juiz de Fora Lima Duarte Bom Jardim Min53131037\n    9310360Juiz de Fora Lima Duarte Bom Jardim Min53131037\n    10310610Juiz de Fora Lima Duarte Bom Jardim Min53131037\n    11310680Juiz de Fora Lima Duarte Bom Jardim Min53131037\n    12310720Juiz de Fora Lima Duarte Bom Jardim Min53131037\n    13310750Juiz de Fora Lima Duarte Bom Jardim Min53131037\n    14311590Juiz de Fora Lima Duarte Bom Jardim Min53131037\n    ⋮⋮⋮⋮⋮⋮\n    5565171780Sudeste11717003\n    5566171800Sudeste11717003\n    5567171865Sudeste11717003\n    5568172090Sudeste11717003\n    5569172093Sudeste11717003\n  \n  \n  \n    5570 rows × 5 columns"
  },
  {
    "objectID": "sections/table_muns.html#juntando-com-outras",
    "href": "sections/table_muns.html#juntando-com-outras",
    "title": "Municípios",
    "section": "Juntando com outras",
    "text": "Juntando com outras"
  },
  {
    "objectID": "sections/table_muns.html#juntando-com-socioeconômico",
    "href": "sections/table_muns.html#juntando-com-socioeconômico",
    "title": "Municípios",
    "section": "Juntando com Socioeconômico",
    "text": "Juntando com Socioeconômico\n\ndf_socioeco.key = 'cod_municipio'\ndf_mun = df_mun[:, :, dt.join(df_socioeco)]\ncols_mun = list(df_mun.names)\ncols_mun = cols_mun[:-2] + [cols_mun[-1]] + [cols_mun[-2]]\ndf_mun = df_mun[:, cols_mun]\ndf_mun\n\n\n\n  \n  \n    cod_municipioregiaoufcod_ufnome_ufmunicipionome_municipiocapitalfronteiraamazonia…countnome_regiao_saudesocioeconregiao_saudeprefix\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    0355030SudesteSP35SAO PAULOSão PauloSAO PAULOSNN…806352São Paulo53501635\n    1330455SudesteRJ33RIO DE JANEIRORio de JaneiroRIO DE JANEIROSNN…368216Metropolitana I53300533\n    2130260NorteAM13AMAZONASManausMANAUSSNS…297036Entorno Manaus e Alto Rio Negro41300113\n    3230440NordesteCE23CEARAFortalezaFORTALEZASNN…2033701ª Região Fortaleza52300123\n    4292740NordesteBA29BAHIASalvadorSALVADORSNN…169924Salvador52902029\n    5150140NortePA15PARABelémBELEMSNS…126918Metropolitana I41500615\n    6310620SudesteMG31MINAS GERAISBelo HorizonteBELO HORIZONTESNN…125370Belo Horizonte Nova Lima Caeté53100831\n    7431490SulRS43RIO GRANDE DO SULPorto AlegrePORTO ALEGRESNN…105321Região 10 - Capital e Vale do Gravataí54301043\n    8410690SulPR41PARANACuritibaCURITIBASNN…1013372ª RS Metropolitana54100241\n    9270430NordesteAL27ALAGOASMaceióMACEIOSNN…935511ª Região de Saúde32700127\n    10520870Centro-OesteGO52GOIASGoiâniaGOIANIASNN…92068Central55200152\n    11351880SudesteSP35SAO PAULOGuarulhosGUARULHOSNNN…91617Alto do Tietê43501135\n    12221100NordestePI22PIAUITeresinaTERESINASNN…86245Entre Rios32200422\n    13500270Centro-OesteMS50MATO GROSSO DO SULCampo GrandeCAMPO GRANDESNN…84481Campo Grande45000150\n    14261160NordestePE26PERNAMBUCORecifeRECIFESNN…83833Recife52601026\n    ⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋱⋮⋮⋮⋮⋮\n    5564520020Centro-OesteGO52GOIASÁgua LimpaAGUA LIMPANNN…25Sul35201752\n    5565510120Centro-OesteMT51MATO GROSSOAraguainhaARAGUAINHANNS…23Sul Matogrossense25101351\n    5566350640SudesteSP35SAO PAULOBilacBILACNNN…18Central do DRS II53502135\n    5567500627Centro-OesteMS50MATO GROSSO DO SULParaíso das ÁguasPARAISO DAS AGUASNNN…15Campo Grande45000150\n    5568330513SudesteRJ33RIO DE JANEIROSão José de UbáSAO JOSE DE UBANNN…6Noroeste33300733\n  \n  \n  \n    5569 rows × 21 columns"
  },
  {
    "objectID": "sections/table_muns.html#ajustando-valores",
    "href": "sections/table_muns.html#ajustando-valores",
    "title": "Municípios",
    "section": "Ajustando valores",
    "text": "Ajustando valores\n\nValor Booleanos\n\ndf_mun[:, dt.update(capital = f.capital == 'S')]\ndf_mun[:, dt.update(fronteira = f.fronteira == 'S')]\ndf_mun[:, dt.update(amazonia = f.amazonia == 'S')]\ndf_mun\n\n\n\n  \n  \n    cod_municipioregiaoufcod_ufnome_ufmunicipionome_municipiocapitalfronteiraamazonia…countnome_regiao_saudesocioeconregiao_saudeprefix\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    0355030SudesteSP35SAO PAULOSão PauloSAO PAULO100…806352São Paulo53501635\n    1330455SudesteRJ33RIO DE JANEIRORio de JaneiroRIO DE JANEIRO100…368216Metropolitana I53300533\n    2130260NorteAM13AMAZONASManausMANAUS101…297036Entorno Manaus e Alto Rio Negro41300113\n    3230440NordesteCE23CEARAFortalezaFORTALEZA100…2033701ª Região Fortaleza52300123\n    4292740NordesteBA29BAHIASalvadorSALVADOR100…169924Salvador52902029\n    5150140NortePA15PARABelémBELEM101…126918Metropolitana I41500615\n    6310620SudesteMG31MINAS GERAISBelo HorizonteBELO HORIZONTE100…125370Belo Horizonte Nova Lima Caeté53100831\n    7431490SulRS43RIO GRANDE DO SULPorto AlegrePORTO ALEGRE100…105321Região 10 - Capital e Vale do Gravataí54301043\n    8410690SulPR41PARANACuritibaCURITIBA100…1013372ª RS Metropolitana54100241\n    9270430NordesteAL27ALAGOASMaceióMACEIO100…935511ª Região de Saúde32700127\n    10520870Centro-OesteGO52GOIASGoiâniaGOIANIA100…92068Central55200152\n    11351880SudesteSP35SAO PAULOGuarulhosGUARULHOS000…91617Alto do Tietê43501135\n    12221100NordestePI22PIAUITeresinaTERESINA100…86245Entre Rios32200422\n    13500270Centro-OesteMS50MATO GROSSO DO SULCampo GrandeCAMPO GRANDE100…84481Campo Grande45000150\n    14261160NordestePE26PERNAMBUCORecifeRECIFE100…83833Recife52601026\n    ⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋱⋮⋮⋮⋮⋮\n    5564520020Centro-OesteGO52GOIASÁgua LimpaAGUA LIMPA000…25Sul35201752\n    5565510120Centro-OesteMT51MATO GROSSOAraguainhaARAGUAINHA001…23Sul Matogrossense25101351\n    5566350640SudesteSP35SAO PAULOBilacBILAC000…18Central do DRS II53502135\n    5567500627Centro-OesteMS50MATO GROSSO DO SULParaíso das ÁguasPARAISO DAS AGUAS000…15Campo Grande45000150\n    5568330513SudesteRJ33RIO DE JANEIROSão José de UbáSAO JOSE DE UBA000…6Noroeste33300733\n  \n  \n  \n    5569 rows × 21 columns"
  },
  {
    "objectID": "sections/table_procs.html",
    "href": "sections/table_procs.html",
    "title": "Procedimentos",
    "section": "",
    "text": "from utils import get_path, group_cols\nfrom datatable import dt, f"
  },
  {
    "objectID": "sections/table_procs.html#sih",
    "href": "sections/table_procs.html#sih",
    "title": "Procedimentos",
    "section": "SIH",
    "text": "SIH\n\nColunas da tabela\n\ncols_proc = [\n  'ano',\n  'parto_normal',\n  'cnes',\n  'hosp_cod_municipio',\n  # 'hosp_regiao_saude',\n  'cod_municipio',\n  # 'regiao_saude',\n  'idade'\n]\n\n\npath_sih = get_path('SIH', 'SIH.jay')\ndf_proc = dt.fread(path_sih)\ndf_proc = df_proc[:, cols_proc]\ndf_proc\n\n\n\n  \n  \n    anoparto_normalcneshosp_cod_municipiocod_municipioidade\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    02010310010039200102012000512000523\n    12010310010039200073312004012004028\n    22010310010039200073312004012004038\n    32010310010039200073312004012004016\n    42010310010039200073312004012004026\n    52010310010039200073312004012004026\n    62010310010039200073312004012004027\n    72010310010039200102012000512000531\n    82010310010039200073312004012004030\n    92010310010039200073312004012004018\n    102010310010039200102012000512000528\n    112010310010039200073312004012003832\n    122010310010039200073312004012004030\n    132010310010039200073312004012000126\n    142010310010039200073312004012004026\n    ⋮⋮⋮⋮⋮⋮⋮\n    16,816,9862019411010034276564017093017184024\n    16,816,9872019411010034276564017093017167027\n    16,816,9882019411010034276564017093017167022\n    16,816,9892019411010034276564017093017093025\n    16,816,9902019411010034275514917161017125021\n  \n  \n  \n    16,816,991 rows × 6 columns\n  \n\n\n\n\n\nTabela agrupada\n\ndf_proc = group_cols(df_proc, cols_proc)\ndf_proc = df_proc.sort(f.ano, -f.count)\ndf_proc\n\n\n\n  \n  \n    anoparto_normalcneshosp_cod_municipiocod_municipioidadecount\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    02010310010039207738835503035503022362\n    12010310010039207738835503035503020333\n    22010310010039207738835503035503019331\n    32010310010039207738835503035503024327\n    42010310010039207770135503035503021318\n    52010310010039207738835503035503021303\n    62010310010039207738835503035503023297\n    72010310010039207770135503035503020296\n    82010310010039207770135503035503022295\n    92010310010039207738835503035503018292\n    102010310010039315179413026013026020288\n    112010310010039315179413026013026019276\n    122010310010039207738835503035503025270\n    132010310010039207918635503035503022269\n    142010310010039315179413026013026022269\n    ⋮⋮⋮⋮⋮⋮⋮⋮\n    3,355,68620194110100349923837270430355640291\n    3,355,68720194110100349923837270430420910241\n    3,355,68820194110100349923837270430510285281\n    3,355,68920194110100349923837270430510622291\n    3,355,69020194110100349923837270430510792141\n  \n  \n  \n    3,355,691 rows × 7 columns\n  \n\n\n\n\n\nAtualizando variável parto normal\n\ndf_proc[:, dt.update(parto_normal = f.parto_normal == 310010039)] # {310010039: 'normal', 411010034: 'cesariano'}\ndf_proc\n\n\n\n  \n  \n    anoparto_normalcneshosp_cod_municipiocod_municipioidadecount\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    020101207738835503035503022362\n    120101207738835503035503020333\n    220101207738835503035503019331\n    320101207738835503035503024327\n    420101207770135503035503021318\n    520101207738835503035503021303\n    620101207738835503035503023297\n    720101207770135503035503020296\n    820101207770135503035503022295\n    920101207738835503035503018292\n    1020101315179413026013026020288\n    1120101315179413026013026019276\n    1220101207738835503035503025270\n    1320101207918635503035503022269\n    1420101315179413026013026022269\n    ⋮⋮⋮⋮⋮⋮⋮⋮\n    3,355,686201909923837270430355640291\n    3,355,687201909923837270430420910241\n    3,355,688201909923837270430510285281\n    3,355,689201909923837270430510622291\n    3,355,690201909923837270430510792141\n  \n  \n  \n    3,355,691 rows × 7 columns"
  }
]