[
  {
    "objectID": "data_load.html",
    "href": "data_load.html",
    "title": "Coleta dos Dados",
    "section": "",
    "text": "import os, sys\nimport sqlite3\nimport pandas as pd\nfrom tqdm import tqdm\nfrom pathlib import Path\nfrom zipfile import ZipFile\nfrom datatable import dt, f, by"
  },
  {
    "objectID": "data_load.html#cnes",
    "href": "data_load.html#cnes",
    "title": "Coleta dos Dados",
    "section": "CNES",
    "text": "CNES\n\nDescrição\nDados do Cadastro Nacional de Estabelecimentos de Saúde (CNES) reunidos pela Plataforma de Ciência de Dados aplicada à Saúde (PCDaS). Os dados foram obtidos junto ao DATASUS (Ministério da Saúde), tratados e enriquecidos seguindo uma metodologia própria de ETL da PCDaS, resultando em um dataset mensal com todos os registros de estabelecimentos de saúde contidos no CNES à partir de agosto de 2005. A atualização dos dados é realizada pelo DATASUS e a PCDaS extrai os registros mensais assim que disponibilizados. As colunas com nomes em MAIÚSCULO representam dados originais advindos do DATASUS e colunas com nomes iniciando em minúsculo representam dados resultantes de transformação ou enriquecimento.\n\n\nSelecionar\n\nColunas\n\ncols_cnes = {\n  'CNES': 'cnes', # Número nacional do estabelecimento de saúde\n  'uf_SIGLA_UF': 'uf', # Sigla da unidade da federação do estabelecimento\n  'mun_codigo_adotado': 'cod_mun', # Armazena o código atribuído ao município do estabelecimento, tratando os casos em que múltiplos códigos tenham sido utilizados para um mesmo município ao longo do tempo\n  'def_esfera_a': 'esfera_adm', # Código da esfera administrativa\n  'def_retencao': 'retencao_tributos', # Código de retenção de tributos\n  'def_cod_ir': 'tipo_retenção', # Indica o tipo de retenção de tributos da mantenedora\n  'def_natureza': 'natureza', # Código da natureza da organização\n  'VINC_SUS': 'sus', # Vínculo com SUS: 1-Sim 0-Não\n}\n\n\n\nLinhas\n\ndef filter_cnes(df):\n  cols = list(cols_cnes.values())[:-2]\n  return df[(f['sus'] == 1), cols]\n\n\n\n\nCarregar dados\n\npath_zip_cnes = f'{Path.home()}/Databases/CNES/CNES.zip'\noutput_cnes = path_zip_cnes.replace('zip', 'csv.gzip')\n# df_cnes = data_load(path_zip_cnes, cols_cnes, filter_cnes)\n# df_cnes = df_cnes.to_pandas().drop_duplicates()\n# df_cnes.to_csv(output_cnes, index=False)\ndf_cnes = dt.fread(output_cnes)\ndf_cnes\n\n\n\n  \n  \n    cnesufcod_munesfera_admretencao_tributostipo_retençãonatureza\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    02786052SP350410MUNICIPALEstabelecimento PUBLICOEstabelecimento PUBLICOAdministração Direta da Saúde (MS, SES, e SMS)\n    12814714SP355030PRIVADAEstabelecimento PRIVADO LUCRATIVAEmpresa Privada\n    22784769SP351880ESTADUALEstabelecimento PUBLICOEstabelecimento PUBLICOAdministração Direta da Saúde (MS, SES, e SMS)\n    32051001SP350440MUNICIPALEstabelecimento PUBLICOEstabelecimento PUBLICOAdministração Direta da Saúde (MS, SES, e SMS)\n    48012806SP352390MUNICIPALEstabelecimento PUBLICOEstabelecimento PUBLICOAdministração Direta da Saúde (MS, SES, e SMS)\n    52028476SP355030ESTADUALEstabelecimento PUBLICOEstabelecimento PUBLICOAdministração Direta da Saúde (MS, SES, e SMS)\n    62093731SP355030MUNICIPALEstabelecimento PUBLICOAdministração Direta da Saúde (MS, SES, e SMS)\n    72093766SP354090MUNICIPALEstabelecimento PUBLICOEstabelecimento PUBLICOAdministração Direta da Saúde (MS, SES, e SMS)\n    82093871SP354090MUNICIPALEstabelecimento PUBLICOEstabelecimento PUBLICOAdministração Direta da Saúde (MS, SES, e SMS)\n    92088894SP351340MUNICIPALEstabelecimento PUBLICOEstabelecimento PUBLICOAdministração Direta da Saúde (MS, SES, e SMS)\n    102088908SP350860MUNICIPALEstabelecimento PUBLICOEstabelecimento PUBLICOAdministração Direta da Saúde (MS, SES, e SMS)\n    112060701SP351620ESTADUALEstabelecimento PUBLICOEstabelecimento PUBLICOAdm Indireta - Organização Social Pública\n    122050455SP350450ESTADUALEstabelecimento PUBLICOEstabelecimento PUBLICOAdministração Direta da Saúde (MS, SES, e SMS)\n    132094010SP353530MUNICIPALEstabelecimento PUBLICOEstabelecimento PUBLICOAdministração Direta da Saúde (MS, SES, e SMS)\n    142804794SP354980PRIVADAEstabelecimento PRIVADO LUCRATIVAEstabelecimento PRIVADO LUCRATIVAEmpresa Privada\n    ⋮⋮⋮⋮⋮⋮⋮⋮\n    233,3063475840MG314310PRIVADAEstabelecimento PRIVADO LUCRATIVAEmpresa Privada\n    233,3073933067MG314310PRIVADAEstabelecimento PRIVADO LUCRATIVAEmpresa Privada\n    233,3086094325MG315540PRIVADAEstabelecimento PRIVADO LUCRATIVAEstabelecimento PRIVADO LUCRATIVAEmpresa Privada\n    233,3096563775PR410540\n    233,3107843135DF530010ESTADUALEstabelecimento PUBLICOEstabelecimento PUBLICOAdministração Direta da Saúde (MS, SES, e SMS)\n  \n  \n  \n    233,311 rows × 7 columns\n  \n\n\n\n100%|██████████| 4374/4374 [05:40<00:00, 12.86it/s]"
  },
  {
    "objectID": "data_load.html#sinasc",
    "href": "data_load.html#sinasc",
    "title": "Coleta dos Dados",
    "section": "SINASC",
    "text": "SINASC\n\nDescrição\nDados do Sistema de Informações sobre Nascidos Vivos (SINASC) reunidos pela Plataforma de Ciência de Dados aplicada à Saúde (PCDaS). Os dados foram obtidos junto ao DATASUS (Ministério da Saúde), tratados e enriquecidos seguindo uma metodologia própria de ETL da PCDaS, resultando em um dataset anual com todos os registros das declarações de nascidos vivos contidas no SINASC à partir de 1996. A atualização dos dados é realizada pelo DATASUS e a PCDaS extrai os registros anuais assim que disponibilizados. As colunas com nomes em MAIÚSCULO representam dados originais advindos do DATASUS e colunas com nomes iniciando em minúsculo representam dados resultantes de transformação ou enriquecimento.\n\n\nSelecionar\n\nColunas\n\ncols_sinasc = {\n  'ano_nasc': 'ano',\n  'CODESTAB': 'cnes',\n  'nasc_codigo_adotado': 'hosp_municipio',\n  'res_codigo_adotado': 'res_municipio',\n  'nasc_RSAUDCOD': 'hosp_regiao_saude',\n  'res_RSAUDCOD': 'res_regiao_saude',\n  'def_parto': 'tipo_parto',\n  'GRAVIDEZ': 'n_gestados',\n  'CONSULTAS': 'n_pre_natal',\n  'IDADEMAE': 'idade',\n  'ESCMAE': 'nivel_escolaridade',\n  'RACACORMAE': 'raca_cor',\n  'def_raca_cor': 'nasc_raca_cor',\n  'def_sexo': 'nasc_sexo',\n  'PESO': 'nasc_peso',\n  'APGAR1': 'nasc_apgar1',\n  'APGAR5': 'nasc_apgar5',\n  'LOCNASC': 'local_nasc',\n}\n\n\n\nLinhas\n\ndef filter_sinasc(df):\n  cols = list(cols_sinasc.values())[:-2]\n  cols = [c for c in cols if c in df.names]\n  if 'cnes' in df.names:\n    df_filtered = df[\n      (\n        (f['ano'] > 2009) & (f['ano'] < 2020)\n      ) & (\n        (f['idade'] > 9) & (f['idade'] < 50)\n      ) & (\n        (f['tipo_parto'] != 'Ignorado') # tipo parto\n      ) & (\n        (f['cnes'] != None)\n      ) & (\n        (f['local_nasc'] == 1) # Hospital\n      ) & (\n        (f['res_regiao_saude'] != 5301) # DF\n      ) & (\n        (f['res_regiao_saude'] != None)\n      ) & (\n        (f['hosp_regiao_saude'] != None)\n      ) & (\n        (f['res_municipio'] != None)\n      ) & (\n        (f['hosp_municipio'] != None)\n      ), cols]\n  else:\n    df_filtered = dt.Frame()\n  return df_filtered\n\n\n\n\nCarregar dados\n\npath_zip_sinasc = f'{Path.home()}/Databases/SINASC/SINASC.zip'\noutput_sinasc = path_zip_sinasc.replace('zip', 'csv.gzip')\n# df_sinasc = data_load(path_zip_sinasc, cols_sinasc, filter_sinasc)\n# df_sinasc.to_csv(output_sinasc)\ndf_sinasc = dt.fread(output_sinasc)\ndf_sinasc\n\n\n\n  \n  \n    anocneshosp_municipiores_municipiohosp_regiao_sauderes_regiao_saudetipo_parton_gestadosn_pre_natalidade…nasc_raca_cornasc_sexonasc_pesonasc_apgar1nasc_apgar5\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    02010251559811000212004011041201Cesáreo1424…BrancaMasculino3400910\n    12010379259511001112004011011201Cesáreo1322…PardaMasculino395089\n    22010279848411003012004011031201Vaginal1420…BrancaMasculino355089\n    32010570192912000112000112011201Vaginal1321…PardaFeminino3000910\n    42010570192912000112000112011201Vaginal1331…PardaFeminino3000910\n    52010570192912000112000112011201Vaginal1423…PardaMasculino390079\n    62010570192912000112000112011201Vaginal1426…PardaFeminino3250710\n    72010570192912000112000112011201Vaginal1421…PardaMasculino3500810\n    82010570192912000112000112011201Vaginal1420…PardaFeminino290089\n    92010570192912000112000112011201Vaginal1431…PardaMasculino3400810\n    102010570192912000112000112011201Vaginal1428…PardaFeminino390089\n    112010570192912000112000112011201Vaginal1923…PardaFeminino320089\n    122010570192912000112000112011201Vaginal1230…PardaMasculino305089\n    132010570192912000112000112011201Vaginal1321…BrancaMasculino350089\n    142010570192912000112000112011201Vaginal1334…BrancaMasculino400010NA\n    ⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋱⋮⋮⋮⋮⋮\n    28,197,1592019342763352087017095052011707Cesáreo1429…PardaFeminino170078\n    28,197,16020191053753001017024053011709Cesáreo1336…IgnoradoIgnorado287089\n    28,197,1612019571751553001017061053011710Cesáreo1321…PardaMasculino255489\n    28,197,1622019571751553001017210053011705Vaginal1421…PardaFeminino261089\n    28,197,1632019301960853001017024053011709Vaginal1430…PardaMasculino2975910\n  \n  \n  \n    28,197,164 rows × 17 columns\n  \n\n\n\n100%|██████████| 675/675 [03:03<00:00, 3.69it/s]\n\n\nMunicípios\n\ncols_mun = {\n  'res_codigo_adotado': 'cod_ibge', # Armazena o código atribuído ao município de residência atualmente, tratando os casos em que múltiplos códigos tenham sido utilizados para um mesmo município ao longo do tempo\n  'res_REGIAO': 'regiao', # Nome da região da unidade da federação de residência\n  'res_SIGLA_UF': 'uf', # Sigla da unidade da federação de residência\n  'res_CODIGO_UF': 'cod_uf', # Código da UF de residência\n  'res_NOME_UF': 'nome_uf', # Nome da unidade da federação de residência\n  'res_MUNNOME': 'municipio', # Nome do município de residência\n  'res_MUNNOMEX': 'nome', # Nome do município de residência em maiúsculas e sem acentos\n  'res_CAPITAL': 'capital', # Indica (S/N) se o município de residência é capital de UF\n  'res_FRONTEIRA': 'fronteira', # Indica (S/N) se o município de residência faz parte da faixa de fronteira (conforme IBGE)\n  'res_AMAZONIA': 'amazonia', # Indica (S/N) se o município de residência faz parte da Amazônia Legal (conforme IBGE)\n  'res_MSAUDCOD': 'macroregiao_saude', # Código da Macrorregional de Saúde a que o Município de residência pertence\n  'res_RSAUDCOD': 'regiao_saude', # Código da Regional de Saúde a que o Município de residência pertence\n  'res_CSAUDCOD': 'microregiao_saude', # Código da Microrregional de Saúde a que o Município de residência pertence\n  'res_LATITUDE': 'latitude', # Latitude do município de residência\n  'res_LONGITUDE': 'longitude', # Longitude do município de residência\n  'res_ALTITUDE': 'altitude', # Altitude do município de residência\n  'res_AREA': 'area', # Área do município de residência\n}\n\n\nquery_municipios = \"\"\"\nselect\n  COLUMNS, count(*)\nfrom\n  \"datasus-sinasc\"\nwhere\n  res_codigo_adotado like 'PREFIX%'\ngroup by\n  COLUMNS\norder by\n  res_codigo_adotado\nlimit\n  1000\n\"\"\"\nquery_municipios = query_municipios.replace('\\n', ' ').replace('  ', ' ')\nquery_municipios\n\n' select  COLUMNS, count(*) from  \"datasus-sinasc\" where  res_codigo_adotado like \\'PREFIX%\\' group by  COLUMNS order by  res_codigo_adotado limit  1000 '\n\n\n\nquery_count_mun = \"\"\"\nselect\n  count(distinct res_codigo_adotado)\nfrom\n  \"datasus-sinasc\"\nwhere\n  res_codigo_adotado like 'PREFIX%'\nlimit\n  100\n\"\"\"\nquery_count_mun = query_count_mun.replace('\\n', ' ').replace('  ', ' ')\nquery_count_mun\n\n' select  count(distinct res_codigo_adotado) from  \"datasus-sinasc\" where  res_codigo_adotado like \\'PREFIX%\\' limit  100 '\n\n\n\nprefix = {\n  1: 457,\n  2: 1803,\n  31: 854, # 3 = 1672.0\n  32: 79,\n  33: 93,\n  35: 646,\n  41: 400, # 4 = 1194.0\n  42: 296,\n  43: 498,\n  5: 470,\n}\n\n\ndfs_muns = list()\ncols_names = ', '.join(cols_mun)\nfor pre in tqdm(prefix):\n  q = query_municipios.replace('PREFIX', str(pre))\n  q = q.replace('COLUMNS', cols_names)\n  df_mun = data_load.df_query(q)\n  dfs_muns.append(df_mun)\ndf_mun = pd.concat(dfs_muns, ignore_index=True)\ndf_mun\n\n100%|██████████| 10/10 [02:20<00:00, 14.09s/it]\n\n\n\n\n\n\n  \n    \n      \n      res_codigo_adotado\n      res_REGIAO\n      res_SIGLA_UF\n      res_CODIGO_UF\n      res_NOME_UF\n      res_MUNNOME\n      res_MUNNOMEX\n      res_CAPITAL\n      res_FRONTEIRA\n      res_AMAZONIA\n      res_MSAUDCOD\n      res_RSAUDCOD\n      res_CSAUDCOD\n      res_LATITUDE\n      res_LONGITUDE\n      res_ALTITUDE\n      res_AREA\n      count(*)\n    \n  \n  \n    \n      0\n      110000\n      Norte\n      RO\n      11\n      RONDONIA\n      Município ignorado - RO\n      MUNICIPIO IGNORADO - RO\n      N\n      N\n      N\n      1100\n      1100\n      11000\n      0.000000\n      0.000000\n      0.0\n      0.000000\n      450\n    \n    \n      1\n      110001\n      Norte\n      RO\n      11\n      RONDONIA\n      Alta Floresta D'Oeste\n      ALTA FLORESTA D'OESTE\n      N\n      S\n      S\n      1190\n      1102\n      11900\n      -11.929000\n      -61.995998\n      350.0\n      7066.702148\n      12003\n    \n    \n      2\n      110002\n      Norte\n      RO\n      11\n      RONDONIA\n      Ariquemes\n      ARIQUEMES\n      N\n      N\n      S\n      1190\n      1104\n      11900\n      -9.913000\n      -63.041000\n      142.0\n      4426.558105\n      43680\n    \n    \n      3\n      110003\n      Norte\n      RO\n      11\n      RONDONIA\n      Cabixi\n      CABIXI\n      N\n      S\n      S\n      1190\n      1103\n      11900\n      -13.492000\n      -60.544998\n      230.0\n      1314.354980\n      2540\n    \n    \n      4\n      110004\n      Norte\n      RO\n      11\n      RONDONIA\n      Cacoal\n      CACOAL\n      N\n      N\n      S\n      1190\n      1102\n      11900\n      -11.438000\n      -61.448002\n      200.0\n      3792.637939\n      37402\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      4789\n      522200\n      Centro-Oeste\n      GO\n      52\n      GOIAS\n      Vianópolis\n      VIANOPOLIS\n      N\n      N\n      N\n      5201\n      5202\n      52900\n      -16.742001\n      -48.515999\n      1002.0\n      954.278992\n      4650\n    \n    \n      4790\n      522205\n      Centro-Oeste\n      GO\n      52\n      GOIAS\n      Vicentinópolis\n      VICENTINOPOLIS\n      N\n      N\n      N\n      5201\n      5202\n      52900\n      -17.735001\n      -49.806000\n      646.0\n      737.250977\n      2740\n    \n    \n      4791\n      522220\n      Centro-Oeste\n      GO\n      52\n      GOIAS\n      Vila Boa\n      VILA BOA\n      N\n      N\n      N\n      5202\n      5206\n      52900\n      -15.038000\n      -47.058998\n      0.0\n      1060.170044\n      1630\n    \n    \n      4792\n      522230\n      Centro-Oeste\n      GO\n      52\n      GOIAS\n      Vila Propício\n      VILA PROPICIO\n      N\n      N\n      N\n      5203\n      5212\n      52900\n      -15.457000\n      -48.889000\n      744.0\n      2181.574951\n      1319\n    \n    \n      4793\n      530010\n      Centro-Oeste\n      DF\n      53\n      DISTRITO FEDERAL\n      Brasília\n      BRASILIA\n      S\n      N\n      N\n      5301\n      5301\n      53001\n      -15.780000\n      -47.930000\n      1171.0\n      5801.937012\n      1127504\n    \n  \n\n4794 rows × 18 columns\n\n\n\n\ndf_mun = df_mun.rename(columns=cols_mun).iloc[:, :-1]\ndf_mun\n\n\n\n\n\n  \n    \n      \n      cod_igbe\n      regiao\n      uf\n      cod_uf\n      nome_uf\n      municipio\n      nome\n      capital\n      fronteira\n      amazonia\n      macroregiao_saude\n      regiao_saude\n      microregiao_saude\n      latitude\n      longitude\n      altitude\n      area\n    \n  \n  \n    \n      0\n      110000\n      Norte\n      RO\n      11\n      RONDONIA\n      Município ignorado - RO\n      MUNICIPIO IGNORADO - RO\n      N\n      N\n      N\n      1100\n      1100\n      11000\n      0.000000\n      0.000000\n      0.0\n      0.000000\n    \n    \n      1\n      110001\n      Norte\n      RO\n      11\n      RONDONIA\n      Alta Floresta D'Oeste\n      ALTA FLORESTA D'OESTE\n      N\n      S\n      S\n      1190\n      1102\n      11900\n      -11.929000\n      -61.995998\n      350.0\n      7066.702148\n    \n    \n      2\n      110002\n      Norte\n      RO\n      11\n      RONDONIA\n      Ariquemes\n      ARIQUEMES\n      N\n      N\n      S\n      1190\n      1104\n      11900\n      -9.913000\n      -63.041000\n      142.0\n      4426.558105\n    \n    \n      3\n      110003\n      Norte\n      RO\n      11\n      RONDONIA\n      Cabixi\n      CABIXI\n      N\n      S\n      S\n      1190\n      1103\n      11900\n      -13.492000\n      -60.544998\n      230.0\n      1314.354980\n    \n    \n      4\n      110004\n      Norte\n      RO\n      11\n      RONDONIA\n      Cacoal\n      CACOAL\n      N\n      N\n      S\n      1190\n      1102\n      11900\n      -11.438000\n      -61.448002\n      200.0\n      3792.637939\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      4789\n      522200\n      Centro-Oeste\n      GO\n      52\n      GOIAS\n      Vianópolis\n      VIANOPOLIS\n      N\n      N\n      N\n      5201\n      5202\n      52900\n      -16.742001\n      -48.515999\n      1002.0\n      954.278992\n    \n    \n      4790\n      522205\n      Centro-Oeste\n      GO\n      52\n      GOIAS\n      Vicentinópolis\n      VICENTINOPOLIS\n      N\n      N\n      N\n      5201\n      5202\n      52900\n      -17.735001\n      -49.806000\n      646.0\n      737.250977\n    \n    \n      4791\n      522220\n      Centro-Oeste\n      GO\n      52\n      GOIAS\n      Vila Boa\n      VILA BOA\n      N\n      N\n      N\n      5202\n      5206\n      52900\n      -15.038000\n      -47.058998\n      0.0\n      1060.170044\n    \n    \n      4792\n      522230\n      Centro-Oeste\n      GO\n      52\n      GOIAS\n      Vila Propício\n      VILA PROPICIO\n      N\n      N\n      N\n      5203\n      5212\n      52900\n      -15.457000\n      -48.889000\n      744.0\n      2181.574951\n    \n    \n      4793\n      530010\n      Centro-Oeste\n      DF\n      53\n      DISTRITO FEDERAL\n      Brasília\n      BRASILIA\n      S\n      N\n      N\n      5301\n      5301\n      53001\n      -15.780000\n      -47.930000\n      1171.0\n      5801.937012\n    \n  \n\n4794 rows × 17 columns\n\n\n\n\ndf_mun.loc[:, 'capital'] = df_mun['capital'].map({'S': True, 'N': False})\ndf_mun.loc[:, 'fronteira'] = df_mun['fronteira'].map({'S': True, 'N': False})\ndf_mun.loc[:, 'amazonia'] = df_mun['amazonia'].map({'S': True, 'N': False})\ndf_mun\n\n\n\n\n\n  \n    \n      \n      cod_igbe\n      regiao\n      uf\n      cod_uf\n      nome_uf\n      municipio\n      nome\n      capital\n      fronteira\n      amazonia\n      macroregiao_saude\n      regiao_saude\n      microregiao_saude\n      latitude\n      longitude\n      altitude\n      area\n    \n  \n  \n    \n      0\n      110000\n      Norte\n      RO\n      11\n      RONDONIA\n      Município ignorado - RO\n      MUNICIPIO IGNORADO - RO\n      False\n      False\n      False\n      1100\n      1100\n      11000\n      0.000000\n      0.000000\n      0.0\n      0.000000\n    \n    \n      1\n      110001\n      Norte\n      RO\n      11\n      RONDONIA\n      Alta Floresta D'Oeste\n      ALTA FLORESTA D'OESTE\n      False\n      True\n      True\n      1190\n      1102\n      11900\n      -11.929000\n      -61.995998\n      350.0\n      7066.702148\n    \n    \n      2\n      110002\n      Norte\n      RO\n      11\n      RONDONIA\n      Ariquemes\n      ARIQUEMES\n      False\n      False\n      True\n      1190\n      1104\n      11900\n      -9.913000\n      -63.041000\n      142.0\n      4426.558105\n    \n    \n      3\n      110003\n      Norte\n      RO\n      11\n      RONDONIA\n      Cabixi\n      CABIXI\n      False\n      True\n      True\n      1190\n      1103\n      11900\n      -13.492000\n      -60.544998\n      230.0\n      1314.354980\n    \n    \n      4\n      110004\n      Norte\n      RO\n      11\n      RONDONIA\n      Cacoal\n      CACOAL\n      False\n      False\n      True\n      1190\n      1102\n      11900\n      -11.438000\n      -61.448002\n      200.0\n      3792.637939\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      4789\n      522200\n      Centro-Oeste\n      GO\n      52\n      GOIAS\n      Vianópolis\n      VIANOPOLIS\n      False\n      False\n      False\n      5201\n      5202\n      52900\n      -16.742001\n      -48.515999\n      1002.0\n      954.278992\n    \n    \n      4790\n      522205\n      Centro-Oeste\n      GO\n      52\n      GOIAS\n      Vicentinópolis\n      VICENTINOPOLIS\n      False\n      False\n      False\n      5201\n      5202\n      52900\n      -17.735001\n      -49.806000\n      646.0\n      737.250977\n    \n    \n      4791\n      522220\n      Centro-Oeste\n      GO\n      52\n      GOIAS\n      Vila Boa\n      VILA BOA\n      False\n      False\n      False\n      5202\n      5206\n      52900\n      -15.038000\n      -47.058998\n      0.0\n      1060.170044\n    \n    \n      4792\n      522230\n      Centro-Oeste\n      GO\n      52\n      GOIAS\n      Vila Propício\n      VILA PROPICIO\n      False\n      False\n      False\n      5203\n      5212\n      52900\n      -15.457000\n      -48.889000\n      744.0\n      2181.574951\n    \n    \n      4793\n      530010\n      Centro-Oeste\n      DF\n      53\n      DISTRITO FEDERAL\n      Brasília\n      BRASILIA\n      True\n      False\n      False\n      5301\n      5301\n      53001\n      -15.780000\n      -47.930000\n      1171.0\n      5801.937012\n    \n  \n\n4794 rows × 17 columns\n\n\n\n\npath_muns = f'{Path.home()}/Databases/MUNICIPIOS/municipios.csv.gzip'\ndf_mun.to_csv(path_muns, index=False)"
  },
  {
    "objectID": "data_load.html#sih",
    "href": "data_load.html#sih",
    "title": "Coleta dos Dados",
    "section": "SIH",
    "text": "SIH\n\nDescrição\nDados do Sistema de Informações Hospitalares do SUS (SIHSUS) reunidos pela Plataforma de Ciência de Dados aplicada à Saúde (PCDaS). Os dados foram obtidos junto ao DATASUS (Ministério da Saúde), tratados e enriquecidos seguindo uma metodologia própria de ETL (processo de extração, transformação e carga dos dados) da PCDaS, resultando em um dataset mensal com todos os registros de internações hospitalares contidos no SIHSUS à partir de janeiro de 2008.\nA atualização dos dados é realizada pelo DATASUS e a PCDaS extrai os registros mensais referentes aos arquivos RD_UF_ANO_MÊS.dbc (Reduzidos de AIH) assim que disponibilizados. As colunas com nomes em MAIÚSCULO representam dados originais advindos do DATASUS e colunas com nomes iniciando em minúsculo representam dados resultantes de transformação ou enriquecimento.\n\n\nSelecionar\n\nColunas\n\ncols_sih = {\n  'ano_internacao': 'ano',\n  'CNES': 'cnes',\n  'int_codigo_adotado': 'hosp_municipio',\n  'res_codigo_adotado': 'res_municipio',\n  'int_RSAUDCOD': 'hosp_regiao_saude',\n  'res_RSAUDCOD': 'res_regiao_saude',\n  'PROC_REA': 'tipo_parto',\n  'def_idade_anos': 'idade',\n}\n\n\n\nLinhas\n\ndef filter_sih(df):\n  cols = list(cols_sinasc.values())[:-1]\n  cols = [c for c in cols if c in df.names]\n  df_filtered = df[\n    (\n      (f['ano'] > 2009) & (f['ano'] < 2020)\n    ) & (\n      (f['idade'] > 9) & (f['idade'] < 50)\n    ) & (\n      (f['tipo_parto'] == 310010039) | (f['tipo_parto'] == 411010034)\n    ) & (\n      (f['cnes'] != None)\n    ) & (\n      (f['res_regiao_saude'] != 5301) # DF\n    ) & (\n      (f['res_regiao_saude'] != None)\n    ) & (\n      (f['hosp_regiao_saude'] != None)\n    ) & (\n      (f['res_municipio'] != None)\n    ), cols]\n  return df_filtered\n\n\n\n\nCarregar dados\n\npath_zip_sih = '/Volumes/SanDisk/SIHSUS.zip'\noutput_sih = f'{Path.home()}/Databases/SIHSUS/SIHSUS.csv.gzip'\n# df_sih = data_load(path_zip_sih, cols_sih, filter_sih)\n# df_sih.to_csv(output_sih)\ndf_sih = dt.fread(output_sih)\ndf_sih\n\n\n\n  \n  \n    anocneshosp_municipiores_municipiohosp_regiao_sauderes_regiao_saudetipo_partoidade\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    0201020010201200051200051202120231001003923\n    1201020007331200401200401201120131001003928\n    2201020007331200401200401201120131001003938\n    3201020007331200401200401201120131001003916\n    4201020007331200401200401201120131001003926\n    5201020007331200401200401201120131001003926\n    6201020007331200401200401201120131001003927\n    7201020010201200051200051202120231001003931\n    8201020007331200401200401201120131001003930\n    9201020007331200401200401201120131001003918\n    10201020010201200051200051202120231001003928\n    11201020007331200401200381201120131001003932\n    12201020007331200401200401201120131001003930\n    13201020007331200401200011201120131001003926\n    14201020007331200401200401201120131001003926\n    ⋮⋮⋮⋮⋮⋮⋮⋮⋮\n    16,816,986201927656401709301718401704170441101003424\n    16,816,987201927656401709301716701704170441101003427\n    16,816,988201927656401709301716701704170441101003422\n    16,816,989201927656401709301709301704170441101003425\n    16,816,990201927551491716101712501708170841101003421\n  \n  \n  \n    16,816,991 rows × 8 columns\n  \n\n\n\n100%|██████████| 4400/4400 [24:46<00:00, 2.96it/s]"
  },
  {
    "objectID": "cnes.html",
    "href": "cnes.html",
    "title": "Inspeção CNES",
    "section": "",
    "text": "import os\nimport sqlite3\nimport pandas as pd\nfrom tqdm import tqdm\nfrom pathlib import Path\nfrom zipfile import ZipFile\nfrom datatable import dt, f, by\nimport matplotlib.pyplot as plt\nfrom matplotlib_venn import venn2, venn3\nfrom plotly import express as px, io as pio\n\npd.options.plotting.backend = 'plotly'\npio.renderers.default = 'plotly_mimetype+notebook_connected'"
  },
  {
    "objectID": "cnes.html#cnes",
    "href": "cnes.html#cnes",
    "title": "Inspeção CNES",
    "section": "CNES",
    "text": "CNES\n\npath_zip_cnes = f'{Path.home()}/Databases/CNES/CNES.csv.gzip'\noutput_cnes = path_zip_cnes.replace('CNES.', 'cnes_count.')\ndf_cnes = dt.fread(path_zip_cnes)\ndf_cnes = df_cnes[:, dt.count(), by('cnes')].sort(-f.count).to_pandas()\ndf_cnes.to_csv(output_cnes, index=False)\nn_cnes = df_cnes.shape[0]\ndf_cnes\n\n\n\n\n\n  \n    \n      \n      cnes\n      count\n    \n  \n  \n    \n      0\n      27863\n      10\n    \n    \n      1\n      2421534\n      10\n    \n    \n      2\n      2750643\n      9\n    \n    \n      3\n      19445\n      8\n    \n    \n      4\n      2025361\n      8\n    \n    \n      ...\n      ...\n      ...\n    \n    \n      130269\n      9715541\n      1\n    \n    \n      130270\n      9715568\n      1\n    \n    \n      130271\n      9715576\n      1\n    \n    \n      130272\n      9715584\n      1\n    \n    \n      130273\n      9715606\n      1\n    \n  \n\n130274 rows × 2 columns"
  },
  {
    "objectID": "cnes.html#sinasc",
    "href": "cnes.html#sinasc",
    "title": "Inspeção CNES",
    "section": "SINASC",
    "text": "SINASC\n\npath_zip_sinasc = f'{Path.home()}/Databases/SINASC/SINASC.csv.gzip'\noutput_sinasc = path_zip_sinasc.replace('SINASC.', 'sinasc_count.')\ndf_cnes_sinasc = dt.fread(path_zip_sinasc)\ndf_cnes_sinasc = df_cnes_sinasc[:, dt.count(), by('cnes')].sort(-f.count).to_pandas()\ndf_cnes_sinasc.to_csv(output_sinasc, index=False)\nn_sinasc = df_cnes_sinasc.shape[0]\ndf_cnes_sinasc\n\n\n\n\n\n  \n    \n      \n      cnes\n      count\n    \n  \n  \n    \n      0\n      2079542\n      145885\n    \n    \n      1\n      3037274\n      115195\n    \n    \n      2\n      2232\n      104344\n    \n    \n      3\n      26794\n      103932\n    \n    \n      4\n      2323397\n      101349\n    \n    \n      ...\n      ...\n      ...\n    \n    \n      8204\n      9491252\n      1\n    \n    \n      8205\n      9505253\n      1\n    \n    \n      8206\n      9569723\n      1\n    \n    \n      8207\n      9619488\n      1\n    \n    \n      8208\n      9728317\n      1\n    \n  \n\n8209 rows × 2 columns"
  },
  {
    "objectID": "cnes.html#sih",
    "href": "cnes.html#sih",
    "title": "Inspeção CNES",
    "section": "SIH",
    "text": "SIH\n\npath_zip_sih = f'{Path.home()}/Databases/SIHSUS/SIHSUS.csv.gzip'\noutput_sih = path_zip_sih.replace('SIHSUS.', 'sih_count.')\ndf_cnes_sih = dt.fread(path_zip_sih)\ndf_cnes_sih = df_cnes_sih[:, dt.count(), by('cnes')].sort(-f.count).to_pandas()\ndf_cnes_sih.to_csv(output_sih, index=False)\nn_sih = df_cnes_sih.shape[0]\ndf_cnes_sih\n\n\n\n\n\n  \n    \n      \n      cnes\n      count\n    \n  \n  \n    \n      0\n      2232\n      101955\n    \n    \n      1\n      3151794\n      75209\n    \n    \n      2\n      2323397\n      74712\n    \n    \n      3\n      2311682\n      64833\n    \n    \n      4\n      26794\n      63700\n    \n    \n      ...\n      ...\n      ...\n    \n    \n      4144\n      7320175\n      1\n    \n    \n      4145\n      7603029\n      1\n    \n    \n      4146\n      7621442\n      1\n    \n    \n      4147\n      7704364\n      1\n    \n    \n      4148\n      7743068\n      1\n    \n  \n\n4149 rows × 2 columns"
  },
  {
    "objectID": "cnes.html#sinasc-sih",
    "href": "cnes.html#sinasc-sih",
    "title": "Inspeção CNES",
    "section": "SINASC & SIH",
    "text": "SINASC & SIH\n\nLista dos CNES\n\nsinasc_sih = df_cnes_sinasc.merge(df_cnes_sih, on='cnes', how='inner', suffixes=('_sinasc', '_sih'))\nn_sinasc_sih = sinasc_sih.shape[0]\nsinasc_sih\n\n\n\n\n\n  \n    \n      \n      cnes\n      count_sinasc\n      count_sih\n    \n  \n  \n    \n      0\n      2232\n      104344\n      101955\n    \n    \n      1\n      26794\n      103932\n      63700\n    \n    \n      2\n      2323397\n      101349\n      74712\n    \n    \n      3\n      2022621\n      99602\n      28260\n    \n    \n      4\n      2311682\n      87673\n      64833\n    \n    \n      ...\n      ...\n      ...\n      ...\n    \n    \n      4087\n      2796597\n      1\n      63\n    \n    \n      4088\n      5590663\n      1\n      13\n    \n    \n      4089\n      6452302\n      1\n      98\n    \n    \n      4090\n      6559379\n      1\n      2\n    \n    \n      4091\n      7006438\n      1\n      18\n    \n  \n\n4092 rows × 3 columns\n\n\n\n\n\nVenn\n\nc = venn2(\n  subsets = (\n    n_sinasc - n_sinasc_sih,\n    n_sih - n_sinasc_sih,\n    n_sinasc_sih,\n  ), set_labels = ('SINASC', 'SIH'),\n  set_colors=('blue', 'yellow'))\nc.get_patch_by_id('11').set_color('green')\nc.get_patch_by_id('11').set_edgecolor('none')\nc.get_patch_by_id('11').set_alpha(0.4)\nplt.show()"
  },
  {
    "objectID": "cnes.html#sinasc-cnes",
    "href": "cnes.html#sinasc-cnes",
    "title": "Inspeção CNES",
    "section": "SINASC & CNES",
    "text": "SINASC & CNES\n\nLista dos CNES\n\nsinasc_cnes = df_cnes_sinasc.merge(df_cnes, on='cnes', how='inner', suffixes=('_sinasc', '_cnes'))\nn_sinasc_cnes = sinasc_cnes.shape[0]\nsinasc_cnes\n\n\n\n\n\n  \n    \n      \n      cnes\n      count_sinasc\n      count_cnes\n    \n  \n  \n    \n      0\n      2232\n      104344\n      2\n    \n    \n      1\n      26794\n      103932\n      3\n    \n    \n      2\n      2323397\n      101349\n      2\n    \n    \n      3\n      2022621\n      99602\n      2\n    \n    \n      4\n      2311682\n      87673\n      4\n    \n    \n      ...\n      ...\n      ...\n      ...\n    \n    \n      7013\n      9208968\n      1\n      1\n    \n    \n      7014\n      9322825\n      1\n      1\n    \n    \n      7015\n      9491112\n      1\n      1\n    \n    \n      7016\n      9491252\n      1\n      1\n    \n    \n      7017\n      9619488\n      1\n      1\n    \n  \n\n7018 rows × 3 columns\n\n\n\n\nsinasc_cnes['count_sinasc'].sum()\n\n24494524\n\n\n\n\nVenn\n\nc = venn2(\n  subsets = (\n    n_sinasc - n_sinasc_cnes,\n    n_cnes - n_sinasc_cnes,\n    n_sinasc_cnes,\n  ), set_labels = ('SINASC', 'CNES'),\n  set_colors=('blue', 'yellow'))\nc.get_patch_by_id('11').set_color('green')\nc.get_patch_by_id('11').set_edgecolor('none')\nc.get_patch_by_id('11').set_alpha(0.4)\nplt.show()\n\n\n\n\n\n4117-1191\n\n2926\n\n\n\nsinasc_not_in_cnes_sus = df_cnes_sinasc[~df_cnes_sinasc['cnes'].isin(set(sinasc_cnes['cnes']))]\nsinasc_not_in_cnes_sus\n\n\n\n\n\n  \n    \n      \n      cnes\n      count\n    \n  \n  \n    \n      0\n      2079542\n      145885\n    \n    \n      1\n      3037274\n      115195\n    \n    \n      19\n      27871\n      62163\n    \n    \n      33\n      2688611\n      53114\n    \n    \n      37\n      3000907\n      51681\n    \n    \n      ...\n      ...\n      ...\n    \n    \n      8201\n      9373314\n      1\n    \n    \n      8202\n      9465219\n      1\n    \n    \n      8205\n      9505253\n      1\n    \n    \n      8206\n      9569723\n      1\n    \n    \n      8208\n      9728317\n      1\n    \n  \n\n1191 rows × 2 columns\n\n\n\n\nsinasc_not_in_cnes_sus['count'].sum()\n\n3702640"
  },
  {
    "objectID": "cnes.html#sih-cnes",
    "href": "cnes.html#sih-cnes",
    "title": "Inspeção CNES",
    "section": "SIH & CNES",
    "text": "SIH & CNES\n\nLista dos CNES\n\nsih_cnes = df_cnes_sih.merge(df_cnes, on='cnes', how='inner', suffixes=('_sih', '_cnes'))\nn_sih_cnes = sih_cnes.shape[0]\nsih_cnes\n\n\n\n\n\n  \n    \n      \n      cnes\n      count_sih\n      count_cnes\n    \n  \n  \n    \n      0\n      2232\n      101955\n      2\n    \n    \n      1\n      3151794\n      75209\n      3\n    \n    \n      2\n      2323397\n      74712\n      2\n    \n    \n      3\n      2311682\n      64833\n      4\n    \n    \n      4\n      26794\n      63700\n      3\n    \n    \n      ...\n      ...\n      ...\n      ...\n    \n    \n      4141\n      7320175\n      1\n      3\n    \n    \n      4142\n      7603029\n      1\n      2\n    \n    \n      4143\n      7621442\n      1\n      2\n    \n    \n      4144\n      7704364\n      1\n      2\n    \n    \n      4145\n      7743068\n      1\n      2\n    \n  \n\n4146 rows × 3 columns\n\n\n\n\nsih_cnes['count_sih'].sum()\n\n16816117\n\n\n\n\nVenn\n\nc = venn2(\n  subsets = (\n    n_sih - n_sih_cnes,\n    n_cnes - n_sih_cnes,\n    n_sih_cnes,\n  ), set_labels = ('SIH', 'CNES'),\n  set_colors=('blue', 'yellow'))\nc.get_patch_by_id('11').set_color('green')\nc.get_patch_by_id('11').set_edgecolor('none')\nc.get_patch_by_id('11').set_alpha(0.4)\nplt.show()"
  },
  {
    "objectID": "cnes.html#sinasc-cnes-not-in-sih",
    "href": "cnes.html#sinasc-cnes-not-in-sih",
    "title": "Inspeção CNES",
    "section": "(SINASC & CNES) not in SIH",
    "text": "(SINASC & CNES) not in SIH\n\ndf_info_cnes = pd.read_csv(path_zip_cnes)\nsinasc_cnes_sih = sinasc_cnes.merge(df_cnes_sih, on='cnes', how='inner', suffixes=('_sinasc_cnes', '_sih'))\ns_cnes = set(sinasc_cnes_sih['cnes'])\ns_cnes = set(sinasc_cnes[~sinasc_cnes['cnes'].isin(s_cnes)]['cnes'])\nprint(len(s_cnes))\ninpect_cnes = df_info_cnes[df_info_cnes['cnes'].isin(s_cnes)]\ninpect_cnes = inpect_cnes.sort_values(by=['cnes'], ignore_index=True)\ninpect_cnes['cnes'] = inpect_cnes['cnes'].apply(lambda x: ('0' * 7 + str(x))[-7:])\ninpect_cnes\n\n2928\n\n\n\n\n\n\n  \n    \n      \n      cnes\n      uf\n      cod_mun\n      esfera_adm\n      retencao_tributos\n      tipo_retenção\n      natureza\n    \n  \n  \n    \n      0\n      0000035\n      PE\n      260290.0\n      NaN\n      NaN\n      NaN\n      NaN\n    \n    \n      1\n      0000035\n      PE\n      260290.0\n      MUNICIPAL\n      Estabelecimento PUBLICO\n      Estabelecimento PUBLICO\n      Administração Direta da Saúde (MS, SES, e SMS)\n    \n    \n      2\n      0000183\n      PE\n      260290.0\n      PRIVADA\n      Estabelecimento PRIVADO LUCRATIVA\n      NaN\n      Empresa Privada\n    \n    \n      3\n      0000221\n      PE\n      260290.0\n      PRIVADA\n      Estabelecimento PRIVADO LUCRATIVA\n      NaN\n      Empresa Privada\n    \n    \n      4\n      0000426\n      PE\n      261160.0\n      ESTADUAL\n      Estabelecimento PUBLICO\n      Estabelecimento PUBLICO\n      Administração Direta da Saúde (MS, SES, e SMS)\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      5728\n      9541004\n      GO\n      521020.0\n      NaN\n      NaN\n      NaN\n      NaN\n    \n    \n      5729\n      9546146\n      RJ\n      330630.0\n      NaN\n      NaN\n      NaN\n      NaN\n    \n    \n      5730\n      9548149\n      GO\n      520450.0\n      NaN\n      NaN\n      NaN\n      NaN\n    \n    \n      5731\n      9551476\n      PE\n      261060.0\n      NaN\n      NaN\n      NaN\n      NaN\n    \n    \n      5732\n      9619488\n      AP\n      160027.0\n      NaN\n      NaN\n      NaN\n      NaN\n    \n  \n\n5733 rows × 7 columns\n\n\n\n\n# inpect_cnes.to_excel('inspect_cnes.xlsx')\n\n\nRepetidos\n\ninpect_cnes['cnes'].value_counts().hist()"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Introdução",
    "section": "",
    "text": "No Brasil, 98% dos partos ocorrem em ambiente hospitalar, e 77% no Sistema Único de Saúde (SUS). O acesso oportuno aos serviços obstétricos de internação para o parto é fundamental para garantir a segurança do cuidado materno e neonatal. Entretanto, há “vazios assistenciais” na oferta de serviços hospitalares pelo SUS que fazem com que grande parte das parturientes precise se deslocar de um município a outro para ser assistida.\nO retardo na atenção obstétrica no momento do parto está associado à desfechos maternos adversos, e o deslocamento de grandes distâncias tem sido associado a níveis elevados de mortalidade infantil e neonatal, além de maior risco de morbimortalidade materna. Assim, a análise da distância percorrida pelas parturientes de sua residência até o hospital é um indicador útil e sensível para avaliar a dificuldade em acessar cuidados maternos e neonatais no SUS.\nA análise da acessibilidade geográfica é um componente importante da avaliação de serviços de saúde e reflete aspectos da distribuição espacial da oferta de serviços que dificultam ou promovem sua utilização. A metodologia de análise de redes sociais (ARS) tem sido utilizada nesse contexto, incluindo a internação para o parto, e também como ferramenta para gestão em saúde.\nEste projeto tem o objetivo de analisar a acessibilidade geográfica ao parto hospitalar realizado no SUS nos últimos 10 anos, em todo Brasil, aplicando a ARS como uma nova ferramenta para a gestão de serviços de saúde. Serão utilizados dados do Departamento de Informática do SUS (DATASUS) para a construção das redes de deslocamento das gestantes em busca de internação para o parto, levando-se em conta as distâncias percorridas, mapeando fluxos preferenciais e identificando lacunas geográficas de atendimento e polos de atração de maior demanda, como medida de inequidade no acesso aos serviços. O projeto avança no processo de avaliação do sistema de saúde ao desenvolver novos indicadores de acesso à serviços obstétricos, baseados em uma metodologia inovadora, e com abrangência nacional e aplicabilidade a outras áreas de saúde pública.\nEspera-se, com este estudo, gerar evidências que permitam um melhor entendimento da organização e das fragilidades do SUS na assistência à saúde da mulher no ciclo gravídico-puerperal, contribuindo para o planejamento da atenção obstétrica e para o fortalecimento de políticas públicas voltadas para melhoria do acesso aos serviços de saúde."
  },
  {
    "objectID": "data_compare.html",
    "href": "data_compare.html",
    "title": "Comparação",
    "section": "",
    "text": "import os\nimport sqlite3\nimport pandas as pd\nfrom tqdm import tqdm\nfrom pathlib import Path\nfrom zipfile import ZipFile\nfrom datatable import dt, f, by\nimport matplotlib.pyplot as plt\nfrom matplotlib_venn import venn2, venn3\nfrom plotly import express as px, io as pio\n\npd.options.plotting.backend = 'plotly'\npio.renderers.default = 'plotly_mimetype+notebook_connected'"
  },
  {
    "objectID": "data_compare.html#contagem",
    "href": "data_compare.html#contagem",
    "title": "Comparação",
    "section": "Contagem",
    "text": "Contagem\n\nall_: Base original sem mudanças\nflt_: Base com filtros básicos\nsus_: Base filtrada e com CNES de VINC_SUS=1\n\n\nall_sih = 157033546\nall_sinasc = 74398079\nflt_sih = 16816991 # dt.fread(path_zip_sihsus).shape[0]\nflt_sinasc = 28197164 # dt.fread(path_zip_sinasc).shape[0]\nsus_sih = 16816117\nsus_sinasc = 24494524"
  },
  {
    "objectID": "data_compare.html#barplot",
    "href": "data_compare.html#barplot",
    "title": "Comparação",
    "section": "Barplot",
    "text": "Barplot\n\ndf_filter = pd.DataFrame([\n    ['SIH', 'all', all_sih],\n    ['SINASC', 'all', all_sinasc],\n    ['SIH', 'filter', flt_sih],\n    ['SINASC', 'filter', flt_sinasc],\n    ['SIH', 'sus', sus_sih],\n    ['SINASC', 'sus', sus_sinasc],\n], columns=['database', 'selection', 'records'])\nfig = px.bar(df_filter, x='database', y='records', color='selection', barmode='overlay')\nfig.show()\n\n\n                                                \n\n\n\nflt_sinasc - sus_sinasc == 3702640\n\nTrue\n\n\n\n3702640 / flt_sinasc * 100\n\n13.131249653333931"
  },
  {
    "objectID": "data_compare.html#sinasc-com-cnes-do-sih",
    "href": "data_compare.html#sinasc-com-cnes-do-sih",
    "title": "Comparação",
    "section": "SINASC com CNES do SIH",
    "text": "SINASC com CNES do SIH\n\ndf_filter = pd.DataFrame([\n    ['SINASC_SIH', 'all', all_sinasc],\n    ['SINASC_CNES', 'all', all_sinasc],\n    ['SINASC_SIH', 'filter', flt_sinasc],\n    ['SINASC_CNES', 'filter', flt_sinasc],\n    ['SINASC_SIH', 'sus', 22773582],\n    ['SINASC_CNES', 'sus', sus_sinasc],\n], columns=['database', 'selection', 'records'])\nfig = px.bar(df_filter, x='database', y='records', color='selection', barmode='overlay')\nfig.show()"
  },
  {
    "objectID": "data_selection.html",
    "href": "data_selection.html",
    "title": "Seleção dos Dados",
    "section": "",
    "text": "import os\nimport numpy as np\nimport pandas as pd\nfrom tqdm import tqdm\nfrom pathlib import Path\nfrom zipfile import ZipFile\nfrom datatable import dt, f, by\nimport matplotlib.pyplot as plt\nfrom matplotlib_venn import venn2, venn3\nfrom plotly import express as px, io as pio\n\npd.options.plotting.backend = 'plotly'\npio.renderers.default = 'plotly_mimetype+notebook_connected'"
  },
  {
    "objectID": "data_selection.html#sinasc-com-filtros-básicos",
    "href": "data_selection.html#sinasc-com-filtros-básicos",
    "title": "Seleção dos Dados",
    "section": "SINASC com filtros básicos",
    "text": "SINASC com filtros básicos\n\npath_zip_sinasc = f'{Path.home()}/Databases/SINASC/SINASC.csv.gzip'\ndf_sinasc = pd.read_csv(path_zip_sinasc)\ndf_sinasc\n\n\n\n\n\n  \n    \n      \n      ano\n      cnes\n      hosp_municipio\n      res_municipio\n      hosp_regiao_saude\n      res_regiao_saude\n      tipo_parto\n      n_gestados\n      n_pre_natal\n      idade\n      nivel_escolaridade\n      raca_cor\n      nasc_raca_cor\n      nasc_sexo\n      nasc_peso\n      nasc_apgar1\n      nasc_apgar5\n    \n  \n  \n    \n      0\n      2010\n      2515598\n      110002\n      120040\n      1104\n      1201\n      Cesáreo\n      1\n      4\n      24\n      4\n      NaN\n      Branca\n      Masculino\n      3400.0\n      9.0\n      10.0\n    \n    \n      1\n      2010\n      3792595\n      110011\n      120040\n      1101\n      1201\n      Cesáreo\n      1\n      3\n      22\n      4\n      NaN\n      Parda\n      Masculino\n      3950.0\n      8.0\n      9.0\n    \n    \n      2\n      2010\n      2798484\n      110030\n      120040\n      1103\n      1201\n      Vaginal\n      1\n      4\n      20\n      3\n      NaN\n      Branca\n      Masculino\n      3550.0\n      8.0\n      9.0\n    \n    \n      3\n      2010\n      5701929\n      120001\n      120001\n      1201\n      1201\n      Vaginal\n      1\n      3\n      21\n      4\n      NaN\n      Parda\n      Feminino\n      3000.0\n      9.0\n      10.0\n    \n    \n      4\n      2010\n      5701929\n      120001\n      120001\n      1201\n      1201\n      Vaginal\n      1\n      3\n      31\n      3\n      NaN\n      Parda\n      Feminino\n      3000.0\n      9.0\n      10.0\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      28197159\n      2019\n      3427633\n      520870\n      170950\n      5201\n      1707\n      Cesáreo\n      1\n      4\n      29\n      5\n      4.0\n      Parda\n      Feminino\n      1700.0\n      7.0\n      8.0\n    \n    \n      28197160\n      2019\n      10537\n      530010\n      170240\n      5301\n      1709\n      Cesáreo\n      1\n      3\n      36\n      5\n      NaN\n      Ignorado\n      Ignorado\n      2870.0\n      8.0\n      9.0\n    \n    \n      28197161\n      2019\n      5717515\n      530010\n      170610\n      5301\n      1710\n      Cesáreo\n      1\n      3\n      21\n      4\n      4.0\n      Parda\n      Masculino\n      2554.0\n      8.0\n      9.0\n    \n    \n      28197162\n      2019\n      5717515\n      530010\n      172100\n      5301\n      1705\n      Vaginal\n      1\n      4\n      21\n      4\n      4.0\n      Parda\n      Feminino\n      2610.0\n      8.0\n      9.0\n    \n    \n      28197163\n      2019\n      3019608\n      530010\n      170240\n      5301\n      1709\n      Vaginal\n      1\n      4\n      30\n      5\n      4.0\n      Parda\n      Masculino\n      2975.0\n      9.0\n      10.0\n    \n  \n\n28197164 rows × 17 columns"
  },
  {
    "objectID": "data_selection.html#cnes-da-base-sih",
    "href": "data_selection.html#cnes-da-base-sih",
    "title": "Seleção dos Dados",
    "section": "CNES da base SIH",
    "text": "CNES da base SIH\n\npath_zip_sih = f'{Path.home()}/Databases/SIHSUS/sih_count.csv.gzip'\ndf_cnes_sih = pd.read_csv(path_zip_sih)\ndf_cnes_sih\n\n\n\n\n\n  \n    \n      \n      cnes\n      count\n    \n  \n  \n    \n      0\n      2232\n      101955\n    \n    \n      1\n      3151794\n      75209\n    \n    \n      2\n      2323397\n      74712\n    \n    \n      3\n      2311682\n      64833\n    \n    \n      4\n      26794\n      63700\n    \n    \n      ...\n      ...\n      ...\n    \n    \n      4144\n      7320175\n      1\n    \n    \n      4145\n      7603029\n      1\n    \n    \n      4146\n      7621442\n      1\n    \n    \n      4147\n      7704364\n      1\n    \n    \n      4148\n      7743068\n      1\n    \n  \n\n4149 rows × 2 columns"
  },
  {
    "objectID": "data_selection.html#filtro-sus",
    "href": "data_selection.html#filtro-sus",
    "title": "Seleção dos Dados",
    "section": "Filtro SUS",
    "text": "Filtro SUS\n\ndf_sinasc_sus = df_sinasc.loc[\n  df_sinasc['cnes'].isin(df_cnes_sih['cnes'])].copy()\ndf_sinasc_sus\n\n\n\n\n\n  \n    \n      \n      ano\n      cnes\n      hosp_municipio\n      res_municipio\n      hosp_regiao_saude\n      res_regiao_saude\n      tipo_parto\n      n_gestados\n      n_pre_natal\n      idade\n      nivel_escolaridade\n      raca_cor\n      nasc_raca_cor\n      nasc_sexo\n      nasc_peso\n      nasc_apgar1\n      nasc_apgar5\n    \n  \n  \n    \n      2\n      2010\n      2798484\n      110030\n      120040\n      1103\n      1201\n      Vaginal\n      1\n      4\n      20\n      3\n      NaN\n      Branca\n      Masculino\n      3550.0\n      8.0\n      9.0\n    \n    \n      3\n      2010\n      5701929\n      120001\n      120001\n      1201\n      1201\n      Vaginal\n      1\n      3\n      21\n      4\n      NaN\n      Parda\n      Feminino\n      3000.0\n      9.0\n      10.0\n    \n    \n      4\n      2010\n      5701929\n      120001\n      120001\n      1201\n      1201\n      Vaginal\n      1\n      3\n      31\n      3\n      NaN\n      Parda\n      Feminino\n      3000.0\n      9.0\n      10.0\n    \n    \n      5\n      2010\n      5701929\n      120001\n      120001\n      1201\n      1201\n      Vaginal\n      1\n      4\n      23\n      3\n      NaN\n      Parda\n      Masculino\n      3900.0\n      7.0\n      9.0\n    \n    \n      6\n      2010\n      5701929\n      120001\n      120001\n      1201\n      1201\n      Vaginal\n      1\n      4\n      26\n      4\n      NaN\n      Parda\n      Feminino\n      3250.0\n      7.0\n      10.0\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      28197146\n      2019\n      2361787\n      520110\n      170730\n      5211\n      1710\n      Cesáreo\n      1\n      3\n      18\n      3\n      4.0\n      Parda\n      Feminino\n      2840.0\n      8.0\n      9.0\n    \n    \n      28197149\n      2019\n      2338564\n      520870\n      171110\n      5201\n      1704\n      Cesáreo\n      1\n      4\n      27\n      4\n      4.0\n      Parda\n      Feminino\n      3082.0\n      8.0\n      9.0\n    \n    \n      28197160\n      2019\n      10537\n      530010\n      170240\n      5301\n      1709\n      Cesáreo\n      1\n      3\n      36\n      5\n      NaN\n      Ignorado\n      Ignorado\n      2870.0\n      8.0\n      9.0\n    \n    \n      28197161\n      2019\n      5717515\n      530010\n      170610\n      5301\n      1710\n      Cesáreo\n      1\n      3\n      21\n      4\n      4.0\n      Parda\n      Masculino\n      2554.0\n      8.0\n      9.0\n    \n    \n      28197162\n      2019\n      5717515\n      530010\n      172100\n      5301\n      1705\n      Vaginal\n      1\n      4\n      21\n      4\n      4.0\n      Parda\n      Feminino\n      2610.0\n      8.0\n      9.0\n    \n  \n\n22773582 rows × 17 columns\n\n\n\n\n28197164 - 22773582\n\n5423582\n\n\n\n5423582 / 28197164\n\n0.1923449464634103"
  },
  {
    "objectID": "data_selection.html#editar-variáveis",
    "href": "data_selection.html#editar-variáveis",
    "title": "Seleção dos Dados",
    "section": "Editar variáveis",
    "text": "Editar variáveis\n\ndf_sinasc_sus.info()\n\n<class 'pandas.core.frame.DataFrame'>\nInt64Index: 22773582 entries, 2 to 28197162\nData columns (total 17 columns):\n #   Column              Dtype  \n---  ------              -----  \n 0   ano                 int64  \n 1   cnes                int64  \n 2   hosp_municipio      int64  \n 3   res_municipio       int64  \n 4   hosp_regiao_saude   int64  \n 5   res_regiao_saude    int64  \n 6   tipo_parto          object \n 7   n_gestados          int64  \n 8   n_pre_natal         int64  \n 9   idade               int64  \n 10  nivel_escolaridade  int64  \n 11  raca_cor            float64\n 12  nasc_raca_cor       object \n 13  nasc_sexo           object \n 14  nasc_peso           float64\n 15  nasc_apgar1         float64\n 16  nasc_apgar5         float64\ndtypes: float64(4), int64(10), object(3)\nmemory usage: 3.1+ GB\n\n\n\ntipo_parto\n\ndf_sinasc_sus['tipo_parto'].value_counts()\n\nVaginal    11563626\nCesáreo    11209956\nName: tipo_parto, dtype: int64\n\n\n\nparto_normal = {\n  'Vaginal': True, 'Cesáreo': False}\n\n\ndf_sinasc_sus.loc[:, 'tipo_parto'] = df_sinasc_sus['tipo_parto'].map(parto_normal)\ndf_sinasc_sus = df_sinasc_sus.rename(columns={'tipo_parto': 'parto_normal'})\n\n\n\nraca_cor\n\ndf_sinasc_sus['raca_cor'].value_counts()\n\n4.0    11625628\n1.0     5830464\n2.0     1122356\n5.0      137716\n3.0       61727\n9.0       15388\nName: raca_cor, dtype: int64\n\n\n\nraca_cor = {\n  1: 'Branca',\n  2: 'Preta',\n  3: 'Amarela',\n  4: 'Parda',\n  5: 'Indígena',\n  9: np.nan\n}\n\n\ndf_sinasc_sus.loc[:, 'raca_cor'] = df_sinasc_sus['raca_cor'].map(raca_cor)\n\n\n\nnasc_sexo\n\ndf_sinasc_sus['nasc_sexo'].value_counts()\n\nMasculino    11666829\nFeminino     11102679\nIgnorado         4074\nName: nasc_sexo, dtype: int64\n\n\n\nsexo_nasc = {\n  'Feminino': True, 'Masculino': False, 'Ignorado': np.nan}\n\n\ndf_sinasc_sus.loc[:, 'nasc_sexo'] = df_sinasc_sus['nasc_sexo'].map(sexo_nasc)\ndf_sinasc_sus = df_sinasc_sus.rename(columns={'nasc_sexo': 'sexo_fem'})\n\n\n\nnasc_peso\n\ndf_sinasc_sus.loc[:, 'nasc_peso'] = df_sinasc_sus['nasc_peso'].astype('Int64')\n\n\n\nnasc_apgar1\n\ndf_sinasc_sus.loc[:, 'nasc_apgar1'] = df_sinasc_sus['nasc_apgar1'].astype('Int64').replace(99, np.nan)\n\n\ndf_sinasc_sus['nasc_apgar1'].value_counts()\n\n9     11111390\n8      7312028\n7      1557666\n10      834776\n6       577964\n5       325601\n4       197379\n3       133466\n2        96165\n1        69305\n0        23272\nName: nasc_apgar1, dtype: Int64\n\n\n\n\nnasc_apgar5\n\ndf_sinasc_sus.loc[:, 'nasc_apgar5'] = df_sinasc_sus['nasc_apgar5'].astype('Int64').replace(99, np.nan)\n\n\ndf_sinasc_sus['nasc_apgar5'].value_counts()\n\n10    10244119\n9     10074459\n8      1357308\n7       291837\n6       102954\n5        56333\n1        31028\n4        28884\n2        18684\n3        18642\n0        14524\nName: nasc_apgar5, dtype: Int64\n\n\n\n\nperiodo\n\ndf_sinasc_sus.loc[:, 'periodo'] = df_sinasc_sus['ano'].apply(\n  lambda x: 'antes' if (x == 2010) | (x == 2011) else ('depois' if (x == 2018) | (x == 2019) else 'durante')\n)\n\n\ndf_sinasc_sus['periodo'].value_counts()\n\ndurante    13682037\ndepois      4573711\nantes       4517834\nName: periodo, dtype: int64"
  },
  {
    "objectID": "data_selection.html#dataset-final",
    "href": "data_selection.html#dataset-final",
    "title": "Seleção dos Dados",
    "section": "Dataset final",
    "text": "Dataset final\n\ndf_sinasc_sus\n\n\n\n\n\n  \n    \n      \n      ano\n      cnes\n      hosp_municipio\n      res_municipio\n      hosp_regiao_saude\n      res_regiao_saude\n      parto_normal\n      n_gestados\n      n_pre_natal\n      idade\n      nivel_escolaridade\n      raca_cor\n      nasc_raca_cor\n      sexo_fem\n      nasc_peso\n      nasc_apgar1\n      nasc_apgar5\n      periodo\n    \n  \n  \n    \n      2\n      2010\n      2798484\n      110030\n      120040\n      1103\n      1201\n      True\n      1\n      4\n      20\n      3\n      NaN\n      Branca\n      False\n      3550\n      8\n      9\n      antes\n    \n    \n      3\n      2010\n      5701929\n      120001\n      120001\n      1201\n      1201\n      True\n      1\n      3\n      21\n      4\n      NaN\n      Parda\n      True\n      3000\n      9\n      10\n      antes\n    \n    \n      4\n      2010\n      5701929\n      120001\n      120001\n      1201\n      1201\n      True\n      1\n      3\n      31\n      3\n      NaN\n      Parda\n      True\n      3000\n      9\n      10\n      antes\n    \n    \n      5\n      2010\n      5701929\n      120001\n      120001\n      1201\n      1201\n      True\n      1\n      4\n      23\n      3\n      NaN\n      Parda\n      False\n      3900\n      7\n      9\n      antes\n    \n    \n      6\n      2010\n      5701929\n      120001\n      120001\n      1201\n      1201\n      True\n      1\n      4\n      26\n      4\n      NaN\n      Parda\n      True\n      3250\n      7\n      10\n      antes\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      28197146\n      2019\n      2361787\n      520110\n      170730\n      5211\n      1710\n      False\n      1\n      3\n      18\n      3\n      Parda\n      Parda\n      True\n      2840\n      8\n      9\n      depois\n    \n    \n      28197149\n      2019\n      2338564\n      520870\n      171110\n      5201\n      1704\n      False\n      1\n      4\n      27\n      4\n      Parda\n      Parda\n      True\n      3082\n      8\n      9\n      depois\n    \n    \n      28197160\n      2019\n      10537\n      530010\n      170240\n      5301\n      1709\n      False\n      1\n      3\n      36\n      5\n      NaN\n      Ignorado\n      NaN\n      2870\n      8\n      9\n      depois\n    \n    \n      28197161\n      2019\n      5717515\n      530010\n      170610\n      5301\n      1710\n      False\n      1\n      3\n      21\n      4\n      Parda\n      Parda\n      False\n      2554\n      8\n      9\n      depois\n    \n    \n      28197162\n      2019\n      5717515\n      530010\n      172100\n      5301\n      1705\n      True\n      1\n      4\n      21\n      4\n      Parda\n      Parda\n      True\n      2610\n      8\n      9\n      depois\n    \n  \n\n22773582 rows × 18 columns\n\n\n\n\npath_sinasc_sus = f'{Path.home()}/Databases/SINASC/sinasc_sus.csv.gzip'\ndf_sinasc_sus.to_csv(path_sinasc_sus, index=False)"
  },
  {
    "objectID": "network.html",
    "href": "network.html",
    "title": "Rede de Deslocamento",
    "section": "",
    "text": "import os\nimport numpy as np\nimport pandas as pd\nfrom tqdm import tqdm\nfrom pathlib import Path\nfrom zipfile import ZipFile\nfrom datatable import dt, f, by\nimport matplotlib.pyplot as plt\nfrom matplotlib_venn import venn2, venn3\nfrom plotly import express as px, io as pio\n\npd.options.plotting.backend = 'plotly'\npio.renderers.default = 'plotly_mimetype+notebook_connected'"
  },
  {
    "objectID": "network.html#sinasc",
    "href": "network.html#sinasc",
    "title": "Rede de Deslocamento",
    "section": "SINASC",
    "text": "SINASC\n\npath_sinasc_sus = f'{Path.home()}/Databases/SINASC/sinasc_sus.csv.gzip'\ndf_sinasc = pd.read_csv(path_sinasc_sus, low_memory=False)\ndf_sinasc\n\n\n\n\n\n  \n    \n      \n      ano\n      cnes\n      hosp_municipio\n      res_municipio\n      hosp_regiao_saude\n      res_regiao_saude\n      parto_normal\n      n_gestados\n      n_pre_natal\n      idade\n      nivel_escolaridade\n      raca_cor\n      nasc_raca_cor\n      sexo_fem\n      nasc_peso\n      nasc_apgar1\n      nasc_apgar5\n      periodo\n    \n  \n  \n    \n      0\n      2010\n      2798484\n      110030\n      120040\n      1103\n      1201\n      True\n      1\n      4\n      20\n      3\n      NaN\n      Branca\n      False\n      3550.0\n      8.0\n      9.0\n      antes\n    \n    \n      1\n      2010\n      5701929\n      120001\n      120001\n      1201\n      1201\n      True\n      1\n      3\n      21\n      4\n      NaN\n      Parda\n      True\n      3000.0\n      9.0\n      10.0\n      antes\n    \n    \n      2\n      2010\n      5701929\n      120001\n      120001\n      1201\n      1201\n      True\n      1\n      3\n      31\n      3\n      NaN\n      Parda\n      True\n      3000.0\n      9.0\n      10.0\n      antes\n    \n    \n      3\n      2010\n      5701929\n      120001\n      120001\n      1201\n      1201\n      True\n      1\n      4\n      23\n      3\n      NaN\n      Parda\n      False\n      3900.0\n      7.0\n      9.0\n      antes\n    \n    \n      4\n      2010\n      5701929\n      120001\n      120001\n      1201\n      1201\n      True\n      1\n      4\n      26\n      4\n      NaN\n      Parda\n      True\n      3250.0\n      7.0\n      10.0\n      antes\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      22773577\n      2019\n      2361787\n      520110\n      170730\n      5211\n      1710\n      False\n      1\n      3\n      18\n      3\n      Parda\n      Parda\n      True\n      2840.0\n      8.0\n      9.0\n      depois\n    \n    \n      22773578\n      2019\n      2338564\n      520870\n      171110\n      5201\n      1704\n      False\n      1\n      4\n      27\n      4\n      Parda\n      Parda\n      True\n      3082.0\n      8.0\n      9.0\n      depois\n    \n    \n      22773579\n      2019\n      10537\n      530010\n      170240\n      5301\n      1709\n      False\n      1\n      3\n      36\n      5\n      NaN\n      Ignorado\n      NaN\n      2870.0\n      8.0\n      9.0\n      depois\n    \n    \n      22773580\n      2019\n      5717515\n      530010\n      170610\n      5301\n      1710\n      False\n      1\n      3\n      21\n      4\n      Parda\n      Parda\n      False\n      2554.0\n      8.0\n      9.0\n      depois\n    \n    \n      22773581\n      2019\n      5717515\n      530010\n      172100\n      5301\n      1705\n      True\n      1\n      4\n      21\n      4\n      Parda\n      Parda\n      True\n      2610.0\n      8.0\n      9.0\n      depois\n    \n  \n\n22773582 rows × 18 columns\n\n\n\n\ndf_sinasc.info()\n\n<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 22773582 entries, 0 to 22773581\nData columns (total 18 columns):\n #   Column              Dtype  \n---  ------              -----  \n 0   ano                 int64  \n 1   cnes                int64  \n 2   hosp_municipio      int64  \n 3   res_municipio       int64  \n 4   hosp_regiao_saude   int64  \n 5   res_regiao_saude    int64  \n 6   parto_normal        bool   \n 7   n_gestados          int64  \n 8   n_pre_natal         int64  \n 9   idade               int64  \n 10  nivel_escolaridade  int64  \n 11  raca_cor            object \n 12  nasc_raca_cor       object \n 13  sexo_fem            object \n 14  nasc_peso           float64\n 15  nasc_apgar1         float64\n 16  nasc_apgar5         float64\n 17  periodo             object \ndtypes: bool(1), float64(3), int64(10), object(4)\nmemory usage: 2.9+ GB"
  },
  {
    "objectID": "network.html#municípios",
    "href": "network.html#municípios",
    "title": "Rede de Deslocamento",
    "section": "Municípios",
    "text": "Municípios\n\npath_muns = f'{Path.home()}/Databases/MUNICIPIOS/municipios.csv.gzip'\ndf_muns = pd.read_csv(path_muns)\ndf_muns\n\n\n\n\n\n  \n    \n      \n      cod_ibge\n      regiao\n      uf\n      cod_uf\n      nome_uf\n      municipio\n      nome\n      capital\n      fronteira\n      amazonia\n      macroregiao_saude\n      regiao_saude\n      microregiao_saude\n      latitude\n      longitude\n      altitude\n      area\n    \n  \n  \n    \n      0\n      110000\n      Norte\n      RO\n      11\n      RONDONIA\n      Município ignorado - RO\n      MUNICIPIO IGNORADO - RO\n      False\n      False\n      False\n      1100\n      1100\n      11000\n      0.000000\n      0.000000\n      0.0\n      0.000000\n    \n    \n      1\n      110001\n      Norte\n      RO\n      11\n      RONDONIA\n      Alta Floresta D'Oeste\n      ALTA FLORESTA D'OESTE\n      False\n      True\n      True\n      1190\n      1102\n      11900\n      -11.929000\n      -61.995998\n      350.0\n      7066.702148\n    \n    \n      2\n      110002\n      Norte\n      RO\n      11\n      RONDONIA\n      Ariquemes\n      ARIQUEMES\n      False\n      False\n      True\n      1190\n      1104\n      11900\n      -9.913000\n      -63.041000\n      142.0\n      4426.558105\n    \n    \n      3\n      110003\n      Norte\n      RO\n      11\n      RONDONIA\n      Cabixi\n      CABIXI\n      False\n      True\n      True\n      1190\n      1103\n      11900\n      -13.492000\n      -60.544998\n      230.0\n      1314.354980\n    \n    \n      4\n      110004\n      Norte\n      RO\n      11\n      RONDONIA\n      Cacoal\n      CACOAL\n      False\n      False\n      True\n      1190\n      1102\n      11900\n      -11.438000\n      -61.448002\n      200.0\n      3792.637939\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      4789\n      522200\n      Centro-Oeste\n      GO\n      52\n      GOIAS\n      Vianópolis\n      VIANOPOLIS\n      False\n      False\n      False\n      5201\n      5202\n      52900\n      -16.742001\n      -48.515999\n      1002.0\n      954.278992\n    \n    \n      4790\n      522205\n      Centro-Oeste\n      GO\n      52\n      GOIAS\n      Vicentinópolis\n      VICENTINOPOLIS\n      False\n      False\n      False\n      5201\n      5202\n      52900\n      -17.735001\n      -49.806000\n      646.0\n      737.250977\n    \n    \n      4791\n      522220\n      Centro-Oeste\n      GO\n      52\n      GOIAS\n      Vila Boa\n      VILA BOA\n      False\n      False\n      False\n      5202\n      5206\n      52900\n      -15.038000\n      -47.058998\n      0.0\n      1060.170044\n    \n    \n      4792\n      522230\n      Centro-Oeste\n      GO\n      52\n      GOIAS\n      Vila Propício\n      VILA PROPICIO\n      False\n      False\n      False\n      5203\n      5212\n      52900\n      -15.457000\n      -48.889000\n      744.0\n      2181.574951\n    \n    \n      4793\n      530010\n      Centro-Oeste\n      DF\n      53\n      DISTRITO FEDERAL\n      Brasília\n      BRASILIA\n      True\n      False\n      False\n      5301\n      5301\n      53001\n      -15.780000\n      -47.930000\n      1171.0\n      5801.937012\n    \n  \n\n4794 rows × 17 columns\n\n\n\n\ndf_muns.info()\n\n<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 4794 entries, 0 to 4793\nData columns (total 17 columns):\n #   Column             Non-Null Count  Dtype  \n---  ------             --------------  -----  \n 0   cod_ibge           4794 non-null   int64  \n 1   regiao             4794 non-null   object \n 2   uf                 4794 non-null   object \n 3   cod_uf             4794 non-null   int64  \n 4   nome_uf            4794 non-null   object \n 5   municipio          4794 non-null   object \n 6   nome               4794 non-null   object \n 7   capital            4794 non-null   bool   \n 8   fronteira          4794 non-null   bool   \n 9   amazonia           4794 non-null   bool   \n 10  macroregiao_saude  4794 non-null   int64  \n 11  regiao_saude       4794 non-null   int64  \n 12  microregiao_saude  4794 non-null   int64  \n 13  latitude           4790 non-null   float64\n 14  longitude          4790 non-null   float64\n 15  altitude           4790 non-null   float64\n 16  area               4790 non-null   float64\ndtypes: bool(3), float64(4), int64(5), object(5)\nmemory usage: 538.5+ KB"
  },
  {
    "objectID": "network.html#distâncias",
    "href": "network.html#distâncias",
    "title": "Rede de Deslocamento",
    "section": "Distâncias",
    "text": "Distâncias\n\npath_dist = f'{Path.home()}/Databases/DISTANCIAS/matriz_distancias.zip'\ndf_dist = pd.read_csv(path_dist, low_memory=False)\ndf_dist\n\n\n\n\n\n  \n    \n      \n      origem\n      destino\n      distancia\n      tempo\n    \n  \n  \n    \n      0\n      110001\n      110001\n      0.000000\n      0.000000\n    \n    \n      1\n      110001\n      110002\n      309.050000\n      6.169056\n    \n    \n      2\n      110001\n      110003\n      399.499700\n      6.289056\n    \n    \n      3\n      110001\n      110004\n      81.201103\n      1.917750\n    \n    \n      4\n      110001\n      110005\n      391.704300\n      6.136361\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      31024895\n      530010\n      522200\n      161.728900\n      2.356000\n    \n    \n      31024896\n      530010\n      522205\n      382.708800\n      5.479556\n    \n    \n      31024897\n      530010\n      522220\n      161.603400\n      2.248944\n    \n    \n      31024898\n      530010\n      522230\n      190.000900\n      3.216083\n    \n    \n      31024899\n      530010\n      530010\n      0.000000\n      0.000000\n    \n  \n\n31024900 rows × 4 columns\n\n\n\n\ndf_dist.info()\n\n<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 31024900 entries, 0 to 31024899\nData columns (total 4 columns):\n #   Column     Dtype  \n---  ------     -----  \n 0   origem     int64  \n 1   destino    int64  \n 2   distancia  float64\n 3   tempo      float64\ndtypes: float64(2), int64(2)\nmemory usage: 946.8 MB"
  },
  {
    "objectID": "network.html#indicador-socioeconômico",
    "href": "network.html#indicador-socioeconômico",
    "title": "Rede de Deslocamento",
    "section": "Indicador SocioEconômico",
    "text": "Indicador SocioEconômico\n\npath_socioeco = f'{Path.home()}/Databases/HEALTH/health_regions.csv'\ndf_socioeco = pd.read_csv(path_socioeco)\ndf_socioeco\n\n\n\n\n\n  \n    \n      \n      UF\n      Município\n      Cód IBGE\n      Cód Região de Saúde\n      Nome da Região de Saúde\n      Grupo\n    \n  \n  \n    \n      0\n      AC\n      Acrelândia\n      120001\n      12002\n      Baixo Acre e Purus\n      2\n    \n    \n      1\n      AC\n      Assis Brasil\n      120005\n      12001\n      Alto Acre\n      1\n    \n    \n      2\n      AC\n      Brasiléia\n      120010\n      12001\n      Alto Acre\n      1\n    \n    \n      3\n      AC\n      Bujari\n      120013\n      12002\n      Baixo Acre e Purus\n      2\n    \n    \n      4\n      AC\n      Capixaba\n      120017\n      12002\n      Baixo Acre e Purus\n      2\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      5566\n      TO\n      Tocantinópolis\n      172120\n      17002\n      Bico do Papagaio\n      1\n    \n    \n      5567\n      TO\n      Tupirama\n      172125\n      17004\n      Cerrado Tocantins Araguaia\n      2\n    \n    \n      5568\n      TO\n      Tupiratins\n      172130\n      17004\n      Cerrado Tocantins Araguaia\n      2\n    \n    \n      5569\n      TO\n      Wanderlândia\n      172208\n      17001\n      Médio Norte Araguaia\n      3\n    \n    \n      5570\n      TO\n      Xambioá\n      172210\n      17001\n      Médio Norte Araguaia\n      3\n    \n  \n\n5571 rows × 6 columns"
  },
  {
    "objectID": "network.html#tabela-final",
    "href": "network.html#tabela-final",
    "title": "Rede de Deslocamento",
    "section": "Tabela Final",
    "text": "Tabela Final\n\npath_deslc = f'{Path.home()}/Databases/GESTANTES/deslocamento.csv.gzip'\ndf_deslc.to_csv(path_deslc, index=False)\n\n\npd.read_csv(path_deslc)\n\n\n\n\n\n  \n    \n      \n      periodo\n      res_municipio\n      hosp_municipio\n      res_regiao_saude\n      hosp_regiao_saude\n      cnes\n      nascimentos\n      mun_diff\n      regsau_diff\n      regiao\n      uf\n      capital\n      fronteira\n      amazonia\n      res_latitude\n      res_longitude\n      hosp_latitude\n      hosp_longitude\n      distancia\n      tempo\n    \n  \n  \n    \n      0\n      antes\n      130260\n      130260\n      1301\n      1301\n      3151794\n      16810\n      False\n      False\n      Norte\n      AM\n      True\n      False\n      True\n      -3.102000\n      -60.025002\n      -3.102000\n      -60.025002\n      0.0000\n      0.000000\n    \n    \n      1\n      depois\n      140010\n      140010\n      1401\n      1401\n      2566168\n      15461\n      False\n      False\n      Norte\n      RR\n      True\n      True\n      True\n      2.820000\n      -60.673000\n      2.820000\n      -60.673000\n      0.0000\n      0.000000\n    \n    \n      2\n      depois\n      500270\n      500270\n      5011\n      5011\n      9768\n      14811\n      False\n      False\n      Centro-Oeste\n      MS\n      True\n      False\n      False\n      -20.443001\n      -54.646000\n      -20.443001\n      -54.646000\n      0.0000\n      0.000000\n    \n    \n      3\n      depois\n      350950\n      350950\n      3512\n      3512\n      2022621\n      14690\n      False\n      False\n      Sudeste\n      SP\n      False\n      False\n      False\n      -22.906000\n      -47.061001\n      -22.906000\n      -47.061001\n      0.0000\n      0.000000\n    \n    \n      4\n      antes\n      292740\n      292740\n      2901\n      2901\n      3956369\n      14540\n      False\n      False\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      0.0000\n      0.000000\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      115863\n      antes\n      520815\n      520870\n      5211\n      5201\n      2339196\n      1\n      True\n      True\n      Centro-Oeste\n      GO\n      False\n      False\n      False\n      -16.464001\n      -48.669998\n      -16.679001\n      -49.254002\n      86.2261\n      1.310972\n    \n    \n      115864\n      antes\n      520830\n      170240\n      5208\n      1709\n      2792451\n      1\n      True\n      True\n      Centro-Oeste\n      GO\n      False\n      False\n      False\n      -13.295000\n      -46.393002\n      -12.931000\n      -46.938000\n      94.2209\n      1.658667\n    \n    \n      115865\n      antes\n      520830\n      520800\n      5208\n      5206\n      2361477\n      1\n      True\n      True\n      Centro-Oeste\n      GO\n      False\n      False\n      False\n      -13.295000\n      -46.393002\n      -15.537000\n      -47.334000\n      373.9899\n      4.629361\n    \n    \n      115866\n      antes\n      520830\n      520870\n      5208\n      5201\n      2338424\n      1\n      True\n      True\n      Centro-Oeste\n      GO\n      False\n      False\n      False\n      -13.295000\n      -46.393002\n      -16.679001\n      -49.254002\n      648.9102\n      8.660694\n    \n    \n      115867\n      depois\n      522230\n      530010\n      5212\n      5301\n      10545\n      1\n      True\n      True\n      Centro-Oeste\n      GO\n      False\n      False\n      False\n      -15.457000\n      -48.889000\n      -15.780000\n      -47.930000\n      190.0009\n      3.216083\n    \n  \n\n115868 rows × 20 columns\n\n\n\n\ndf_deslc.to_excel(path_deslc.replace('csv.gzip', 'xlsx'))"
  },
  {
    "objectID": "network.html#rj",
    "href": "network.html#rj",
    "title": "Rede de Deslocamento",
    "section": "RJ",
    "text": "RJ\n\ndf_deslc_rj = df_deslc[df_deslc['uf'] == 'RJ']\ndf_deslc_rj\n\n\n\n\n\n  \n    \n      \n      periodo\n      res_municipio\n      hosp_municipio\n      res_regiao_saude\n      hosp_regiao_saude\n      cnes\n      nascimentos\n      mun_diff\n      regsau_diff\n      regiao\n      uf\n      capital\n      fronteira\n      amazonia\n      res_latitude\n      res_longitude\n      hosp_latitude\n      hosp_longitude\n      distancia\n      tempo\n    \n  \n  \n    \n      15\n      antes\n      330455\n      330455\n      3305\n      3305\n      2280248\n      11631\n      False\n      False\n      Sudeste\n      RJ\n      True\n      False\n      False\n      -22.903000\n      -43.208000\n      -22.903000\n      -43.208000\n      0.0000\n      0.000000\n    \n    \n      17\n      depois\n      330455\n      330455\n      3305\n      3305\n      2270609\n      11216\n      False\n      False\n      Sudeste\n      RJ\n      True\n      False\n      False\n      -22.903000\n      -43.208000\n      -22.903000\n      -43.208000\n      0.0000\n      0.000000\n    \n    \n      18\n      antes\n      330455\n      330455\n      3305\n      3305\n      2295407\n      11028\n      False\n      False\n      Sudeste\n      RJ\n      True\n      False\n      False\n      -22.903000\n      -43.208000\n      -22.903000\n      -43.208000\n      0.0000\n      0.000000\n    \n    \n      25\n      depois\n      330455\n      330455\n      3305\n      3305\n      2280248\n      10342\n      False\n      False\n      Sudeste\n      RJ\n      True\n      False\n      False\n      -22.903000\n      -43.208000\n      -22.903000\n      -43.208000\n      0.0000\n      0.000000\n    \n    \n      29\n      antes\n      330455\n      330455\n      3305\n      3305\n      2270609\n      10070\n      False\n      False\n      Sudeste\n      RJ\n      True\n      False\n      False\n      -22.903000\n      -43.208000\n      -22.903000\n      -43.208000\n      0.0000\n      0.000000\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      92621\n      antes\n      330070\n      330490\n      3302\n      3305\n      2292157\n      1\n      True\n      True\n      Sudeste\n      RJ\n      False\n      False\n      False\n      -22.879000\n      -42.019001\n      -22.827000\n      -43.054001\n      128.7856\n      1.643194\n    \n    \n      92622\n      antes\n      330070\n      330570\n      3302\n      3308\n      2268051\n      1\n      True\n      True\n      Sudeste\n      RJ\n      False\n      False\n      False\n      -22.879000\n      -42.019001\n      -22.049999\n      -42.674999\n      190.6239\n      3.129167\n    \n    \n      92623\n      antes\n      330070\n      330580\n      3302\n      3308\n      2292386\n      1\n      True\n      True\n      Sudeste\n      RJ\n      False\n      False\n      False\n      -22.879000\n      -42.019001\n      -22.412001\n      -42.966000\n      168.7798\n      2.469361\n    \n    \n      92624\n      antes\n      330070\n      330630\n      3302\n      3304\n      25135\n      1\n      True\n      True\n      Sudeste\n      RJ\n      False\n      False\n      False\n      -22.879000\n      -42.019001\n      -22.523001\n      -44.104000\n      273.5160\n      3.704111\n    \n    \n      92625\n      antes\n      330080\n      320340\n      3302\n      3202\n      2448173\n      1\n      True\n      True\n      Sudeste\n      RJ\n      False\n      False\n      False\n      -22.462999\n      -42.653000\n      -21.063999\n      -41.366001\n      285.7113\n      4.956417\n    \n  \n\n3499 rows × 20 columns\n\n\n\n\ndf_deslc_rj.to_excel(path_deslc.replace('.csv.gzip', '_rj.xlsx'), index=False)\n\n\ndf_deslc_rj['periodo'].value_counts()\n\nantes     1781\ndepois    1718\nName: periodo, dtype: int64"
  }
]