[
  {
    "objectID": "README.html",
    "href": "README.html",
    "title": "Introdução",
    "section": "",
    "text": "Contexto\nNo Brasil, 98% dos partos ocorrem em ambiente hospitalar, e 77% no Sistema Único de Saúde (SUS). O acesso oportuno aos serviços obstétricos de internação para o parto é fundamental para garantir a segurança do cuidado materno e neonatal. Entretanto, há “vazios assistenciais” na oferta de serviços hospitalares pelo SUS que fazem com que grande parte das parturientes precise se deslocar de um município a outro para ser assistida.\nO retardo na atenção obstétrica no momento do parto está associado à desfechos maternos adversos, e o deslocamento de grandes distâncias tem sido associado a níveis elevados de mortalidade infantil e neonatal, além de maior risco de morbimortalidade materna. Assim, a análise da distância percorrida pelas parturientes de sua residência até o hospital é um indicador útil e sensível para avaliar a dificuldade em acessar cuidados maternos e neonatais no SUS.\nA análise da acessibilidade geográfica é um componente importante da avaliação de serviços de saúde e reflete aspectos da distribuição espacial da oferta de serviços que dificultam ou promovem sua utilização. A metodologia de análise de redes sociais (ARS) tem sido utilizada nesse contexto, incluindo a internação para o parto, e também como ferramenta para gestão em saúde.\nEste projeto tem o objetivo de analisar a acessibilidade geográfica ao parto hospitalar realizado no SUS nos últimos 10 anos, em todo Brasil, aplicando a ARS como uma nova ferramenta para a gestão de serviços de saúde. Serão utilizados dados do Departamento de Informática do SUS (DATASUS) para a construção das redes de deslocamento das gestantes em busca de internação para o parto, levando-se em conta as distâncias percorridas, mapeando fluxos preferenciais e identificando lacunas geográficas de atendimento e polos de atração de maior demanda, como medida de inequidade no acesso aos serviços. O projeto avança no processo de avaliação do sistema de saúde ao desenvolver novos indicadores de acesso à serviços obstétricos, baseados em uma metodologia inovadora, e com abrangência nacional e aplicabilidade a outras áreas de saúde pública.\nEspera-se, com este estudo, gerar evidências que permitam um melhor entendimento da organização e das fragilidades do SUS na assistência à saúde da mulher no ciclo gravídico-puerperal, contribuindo para o planejamento da atenção obstétrica e para o fortalecimento de políticas públicas voltadas para melhoria do acesso aos serviços de saúde."
  },
  {
    "objectID": "sections/database_dists.html",
    "href": "sections/database_dists.html",
    "title": "Distâncias",
    "section": "",
    "text": "import pandas as pd\nfrom utils import get_path, data_load\nfrom datatable import dt, f"
  },
  {
    "objectID": "sections/database_dists.html#carregando-tabela",
    "href": "sections/database_dists.html#carregando-tabela",
    "title": "Distâncias",
    "section": "Carregando tabela",
    "text": "Carregando tabela\n\nurl_dist = 'https://www.dropbox.com/sh/1gx8xwdddrwz2gt/AAA115SmiZ0LtTsgzrJIhrb6a/matriz_distancias.zip?dl=1'\n\n\ndf_dist = pd.read_csv(url_dist, compression='zip')\ndf_dist = dt.Frame(df_dist)\ndf_dist\n\n\n\n  \n  \n    origemdestinodistanciatempo\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    011000111000100\n    1110001110002309.056.16906\n    2110001110003399.56.28906\n    311000111000481.20111.91775\n    4110001110005391.7046.13636\n    5110001110006353.4175.53989\n    6110001110007313.5926.18117\n    7110001110008326.9835.34175\n    8110001110009145.6782.346\n    9110001110010649.54513.405\n    10110001110011214.1253.83481\n    11110001110012130.772.54781\n    12110001110013357.5117.13067\n    1311000111001460.21031.02275\n    14110001110015172.9263.18425\n    ⋮⋮⋮⋮⋮\n    31,024,895530010522200161.7292.356\n    31,024,896530010522205382.7095.47956\n    31,024,897530010522220161.6032.24894\n    31,024,898530010522230190.0013.21608\n    31,024,89953001053001000\n  \n  \n  \n    31,024,900 rows × 4 columns\n  \n\n\n\n~30 seconds to download"
  },
  {
    "objectID": "sections/database_indicadores.html",
    "href": "sections/database_indicadores.html",
    "title": "Indicadores",
    "section": "",
    "text": "import numpy as np\nimport pandas as pd\nfrom tqdm import tqdm\nfrom os import listdir\nfrom datatable import dt, f, by\nfrom selenium import webdriver\nfrom selenium.webdriver.common.by import By\nfrom selenium.webdriver.common.keys import Keys\nfrom utils import get_path, data_load"
  },
  {
    "objectID": "sections/database_indicadores.html#shape-de-cada-tabela",
    "href": "sections/database_indicadores.html#shape-de-cada-tabela",
    "title": "Indicadores",
    "section": "Shape de cada tabela",
    "text": "Shape de cada tabela\n(Linhas, Colunas)\n\npath_dir = get_path('INDICADORES', '')\nfiles = [path_dir+pth for pth in listdir(path_dir) if pth[-3:] == 'csv']\ndfs = [pd.read_csv(fl, encoding='latin1', sep=';') for fl in files]\nfor df in dfs: print(df.shape)\n\n(524, 184)\n(595, 184)\n(673, 184)\n(511, 184)\n(645, 184)\n(516, 184)\n(528, 184)\n(695, 184)\n(734, 184)\n(587, 184)"
  },
  {
    "objectID": "sections/database_indicadores.html#concatenando-tabelas",
    "href": "sections/database_indicadores.html#concatenando-tabelas",
    "title": "Indicadores",
    "section": "Concatenando tabelas",
    "text": "Concatenando tabelas\nConcatenação das tabelas em uma\n\ndf_indc = pd.concat(dfs)\ndf_indc\n\n\n\n\n\n  \n    \n      \n      CÓDIGO\n      Tipo Localidade\n      UF\n      CIR\n      Município\n      Número de municípios na Região de Saúde\n      Município de capital\n      Municípios que fazem parte da zona de fronteira - IBGE\n      Municípios que fazem parte da faixa de fronteira - IBGE\n      Municípios que fazem parte da fronteira estadual\n      ...\n      Porcentual de Despesas com Investimentos pelo Total de Despesas em Saúde (2014)\n      Porcentual de Tranferências SUS pelo Total de Despesas em Saúde (2014)\n      Porcentual de Recursos Próprios em Saúde - EC29 (2014)\n      Recursos de Transferências SUS por habitante (2014)\n      Despesas com Recursos Próprios em Saúde por habitante (2014)\n      Cobertura populacional estimada pelas equipes de Atenção Básica (2014)\n      % de população beneficiária de planos de saúde (Setembro/2015)\n      Porcentual de famílias beneficiárias do Programa Bolsa Família (2014)\n      Porcentual de população beneficiária do Programa Bolsa Família (2014)\n      Unnamed: 183\n    \n  \n  \n    \n      0\n      15.001\n      REGSAU\n      -\n      Araguaia\n      -\n      15\n      0\n      0\n      0\n      7\n      ...\n      8,53\n      54,61\n      18,83\n      213,11\n      161,66\n      63,90\n      5,15\n      34,43\n      31,59\n      NaN\n    \n    \n      1\n      15.002\n      REGSAU\n      -\n      Baixo Amazonas\n      -\n      14\n      0\n      3\n      5\n      5\n      ...\n      10,61\n      50,82\n      20,77\n      204,22\n      159,30\n      42,20\n      6,18\n      49,15\n      52,45\n      NaN\n    \n    \n      2\n      15.003\n      REGSAU\n      -\n      Carajás\n      -\n      17\n      0\n      0\n      0\n      9\n      ...\n      9,44\n      26,16\n      23,79\n      177,49\n      455,16\n      52,23\n      22,06\n      34,18\n      35,01\n      NaN\n    \n    \n      3\n      15.004\n      REGSAU\n      -\n      Lago de Tucuruí\n      -\n      6\n      0\n      0\n      0\n      0\n      ...\n      8,08\n      53,90\n      20,08\n      208,23\n      166,48\n      49,99\n      3,07\n      45,30\n      39,86\n      NaN\n    \n    \n      4\n      15.013\n      REGSAU\n      -\n      Marajó I\n      -\n      9\n      0\n      0\n      0\n      0\n      ...\n      20,06\n      51,15\n      17,21\n      158,85\n      111,80\n      24,19\n      1,02\n      60,93\n      61,59\n      NaN\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      582\n      171.780\n      MUNIC\n      Tocantins\n      Sudeste\n      Ponte Alta do Bom Jesus\n      15\n      Não\n      Não\n      Não\n      Sim\n      ...\n      8,43\n      34,79\n      28,54\n      199,83\n      369,45\n      100\n      2,02\n      51,97\n      46,93\n      NaN\n    \n    \n      583\n      171.800\n      MUNIC\n      Tocantins\n      Sudeste\n      Porto Alegre do Tocantins\n      15\n      Não\n      Não\n      Não\n      Não\n      ...\n      10,52\n      35,89\n      19,05\n      220,42\n      386,41\n      100\n      1,15\n      52,65\n      48,82\n      NaN\n    \n    \n      584\n      171.865\n      MUNIC\n      Tocantins\n      Sudeste\n      Rio da Conceição\n      15\n      Não\n      Não\n      Não\n      Sim\n      ...\n      13,86\n      20,14\n      15,52\n      162,11\n      538,36\n      100\n      0,81\n      47,84\n      48,19\n      NaN\n    \n    \n      585\n      172.090\n      MUNIC\n      Tocantins\n      Sudeste\n      Taguatinga\n      15\n      Não\n      Não\n      Não\n      Sim\n      ...\n      0,25\n      44,17\n      33,13\n      187,31\n      292,60\n      78,25\n      26,20\n      37,30\n      41,23\n      NaN\n    \n    \n      586\n      172.093\n      MUNIC\n      Tocantins\n      Sudeste\n      Taipas do Tocantins\n      15\n      Não\n      Não\n      Não\n      Não\n      ...\n      1,73\n      13,75\n      17,79\n      80,78\n      514,21\n      100\n      0,38\n      48,24\n      56,10\n      NaN\n    \n  \n\n6008 rows × 184 columns"
  },
  {
    "objectID": "sections/database_municipios.html",
    "href": "sections/database_municipios.html",
    "title": "Municípios",
    "section": "",
    "text": "import pandas as pd\nfrom utils import get_path"
  },
  {
    "objectID": "sections/database_municipios.html#municípios",
    "href": "sections/database_municipios.html#municípios",
    "title": "Municípios",
    "section": "Municípios",
    "text": "Municípios\nFonte Municípios\n\nCarregando tabela\n\nurl_muns = 'https://raw.githubusercontent.com/kelvins/Municipios-Brasileiros/main/csv/municipios.csv'\ndf_muns = pd.read_csv(url_muns)\ndf_muns\n\n\n\n\n\n  \n    \n      \n      codigo_ibge\n      nome\n      latitude\n      longitude\n      capital\n      codigo_uf\n      siafi_id\n      ddd\n      fuso_horario\n    \n  \n  \n    \n      0\n      5200050\n      Abadia de Goiás\n      -16.75730\n      -49.4412\n      0\n      52\n      1050\n      62\n      America/Sao_Paulo\n    \n    \n      1\n      3100104\n      Abadia dos Dourados\n      -18.48310\n      -47.3916\n      0\n      31\n      4001\n      34\n      America/Sao_Paulo\n    \n    \n      2\n      5200100\n      Abadiânia\n      -16.19700\n      -48.7057\n      0\n      52\n      9201\n      62\n      America/Sao_Paulo\n    \n    \n      3\n      3100203\n      Abaeté\n      -19.15510\n      -45.4444\n      0\n      31\n      4003\n      37\n      America/Sao_Paulo\n    \n    \n      4\n      1500107\n      Abaetetuba\n      -1.72183\n      -48.8788\n      0\n      15\n      401\n      91\n      America/Sao_Paulo\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      5565\n      2933604\n      Xique-Xique\n      -10.82300\n      -42.7245\n      0\n      29\n      3971\n      74\n      America/Sao_Paulo\n    \n    \n      5566\n      2517407\n      Zabelê\n      -8.07901\n      -37.1057\n      0\n      25\n      542\n      83\n      America/Sao_Paulo\n    \n    \n      5567\n      3557154\n      Zacarias\n      -21.05060\n      -50.0552\n      0\n      35\n      2973\n      18\n      America/Sao_Paulo\n    \n    \n      5568\n      2114007\n      Zé Doca\n      -3.27014\n      -45.6553\n      0\n      21\n      1287\n      98\n      America/Sao_Paulo\n    \n    \n      5569\n      4219853\n      Zortéa\n      -27.45210\n      -51.5520\n      0\n      42\n      950\n      49\n      America/Sao_Paulo\n    \n  \n\n5570 rows × 9 columns\n\n\n\n\n\nSelecionando colunas\n\ncols_muns = [\n  'codigo_ibge',\n  'nome',\n  'capital',\n  'codigo_uf',\n  'latitude',\n  'longitude',\n]\n\n\ndf_muns = df_muns[cols_muns]\ndf_muns\n\n\n\n\n\n  \n    \n      \n      codigo_ibge\n      nome\n      capital\n      codigo_uf\n      latitude\n      longitude\n    \n  \n  \n    \n      0\n      5200050\n      Abadia de Goiás\n      0\n      52\n      -16.75730\n      -49.4412\n    \n    \n      1\n      3100104\n      Abadia dos Dourados\n      0\n      31\n      -18.48310\n      -47.3916\n    \n    \n      2\n      5200100\n      Abadiânia\n      0\n      52\n      -16.19700\n      -48.7057\n    \n    \n      3\n      3100203\n      Abaeté\n      0\n      31\n      -19.15510\n      -45.4444\n    \n    \n      4\n      1500107\n      Abaetetuba\n      0\n      15\n      -1.72183\n      -48.8788\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      5565\n      2933604\n      Xique-Xique\n      0\n      29\n      -10.82300\n      -42.7245\n    \n    \n      5566\n      2517407\n      Zabelê\n      0\n      25\n      -8.07901\n      -37.1057\n    \n    \n      5567\n      3557154\n      Zacarias\n      0\n      35\n      -21.05060\n      -50.0552\n    \n    \n      5568\n      2114007\n      Zé Doca\n      0\n      21\n      -3.27014\n      -45.6553\n    \n    \n      5569\n      4219853\n      Zortéa\n      0\n      42\n      -27.45210\n      -51.5520\n    \n  \n\n5570 rows × 6 columns"
  },
  {
    "objectID": "sections/database_municipios.html#unidades-federativas",
    "href": "sections/database_municipios.html#unidades-federativas",
    "title": "Municípios",
    "section": "Unidades Federativas",
    "text": "Unidades Federativas\nFonte Unidades Federativas\n\nCarregando tabela\n\nurl_ufs = 'https://sistemasweb.agricultura.gov.br/manuais/Manual_PGA_WS/322CodigoIBGESigladaUnidadeFeder.html'\ndf_ufs = pd.read_html(url_ufs)[0]\ndf_ufs.columns = ['codigo_uf', 'Sigla']\ndf_ufs\n\n\n\n\n\n  \n    \n      \n      codigo_uf\n      Sigla\n    \n  \n  \n    \n      0\n      11\n      RO\n    \n    \n      1\n      12\n      AC\n    \n    \n      2\n      13\n      AM\n    \n    \n      3\n      14\n      RR\n    \n    \n      4\n      15\n      PA\n    \n    \n      5\n      16\n      AP\n    \n    \n      6\n      17\n      TO\n    \n    \n      7\n      21\n      MA\n    \n    \n      8\n      22\n      PI\n    \n    \n      9\n      23\n      CE\n    \n    \n      10\n      24\n      RN\n    \n    \n      11\n      25\n      PB\n    \n    \n      12\n      26\n      PE\n    \n    \n      13\n      27\n      AL\n    \n    \n      14\n      28\n      SE\n    \n    \n      15\n      29\n      BA\n    \n    \n      16\n      31\n      MG\n    \n    \n      17\n      32\n      ES\n    \n    \n      18\n      33\n      RJ\n    \n    \n      19\n      35\n      SP\n    \n    \n      20\n      41\n      PR\n    \n    \n      21\n      42\n      SC\n    \n    \n      22\n      43\n      RS\n    \n    \n      23\n      50\n      MS\n    \n    \n      24\n      51\n      MT\n    \n    \n      25\n      52\n      GO\n    \n    \n      26\n      53\n      DF\n    \n    \n      27\n      99\n      BR"
  },
  {
    "objectID": "sections/database_municipios.html#regiões-do-brasil",
    "href": "sections/database_municipios.html#regiões-do-brasil",
    "title": "Municípios",
    "section": "Regiões do Brasil",
    "text": "Regiões do Brasil\nFonte Regiões do Brasil\n\nCarregando tabela\n\nurl_regs = 'https://www.estadosecapitaisdobrasil.com/'\ndf_regs = pd.read_html(url_regs)[0]\ndf_regs\n\n\n\n\n\n  \n    \n      \n      Bandeira\n      Estado\n      Sigla\n      Capital\n      Região\n    \n  \n  \n    \n      0\n      NaN\n      Acre\n      AC\n      Rio Branco\n      Norte\n    \n    \n      1\n      NaN\n      Alagoas\n      AL\n      Maceió\n      Nordeste\n    \n    \n      2\n      NaN\n      Amapá\n      AP\n      Macapá\n      Norte\n    \n    \n      3\n      NaN\n      Amazonas\n      AM\n      Manaus\n      Norte\n    \n    \n      4\n      NaN\n      Bahia\n      BA\n      Salvador\n      Nordeste\n    \n    \n      5\n      NaN\n      Ceará\n      CE\n      Fortaleza\n      Nordeste\n    \n    \n      6\n      NaN\n      Distrito Federal\n      DF\n      Brasília\n      Centro-Oeste\n    \n    \n      7\n      NaN\n      Espírito Santo\n      ES\n      Vitória\n      Sudeste\n    \n    \n      8\n      NaN\n      Goiás\n      GO\n      Goiânia\n      Centro-Oeste\n    \n    \n      9\n      NaN\n      Maranhão\n      MA\n      São Luís\n      Nordeste\n    \n    \n      10\n      NaN\n      Mato Grosso\n      MT\n      Cuiabá\n      Centro-Oeste\n    \n    \n      11\n      NaN\n      Mato Grosso do Sul\n      MS\n      Campo Grande\n      Centro-Oeste\n    \n    \n      12\n      NaN\n      Minas Gerais\n      MG\n      Belo Horizonte\n      Sudeste\n    \n    \n      13\n      NaN\n      Pará\n      PA\n      Belém\n      Norte\n    \n    \n      14\n      NaN\n      Paraíba\n      PB\n      João Pessoa\n      Nordeste\n    \n    \n      15\n      NaN\n      Paraná\n      PR\n      Curitiba\n      Sul\n    \n    \n      16\n      NaN\n      Pernambuco\n      PE\n      Recife\n      Nordeste\n    \n    \n      17\n      NaN\n      Piauí\n      PI\n      Teresina\n      Nordeste\n    \n    \n      18\n      NaN\n      Rio de Janeiro\n      RJ\n      Rio de Janeiro\n      Sudeste\n    \n    \n      19\n      NaN\n      Rio Grande do Norte\n      RN\n      Natal\n      Nordeste\n    \n    \n      20\n      NaN\n      Rio Grande do Sul\n      RS\n      Porto Alegre\n      Sul\n    \n    \n      21\n      NaN\n      Rondônia\n      RO\n      Porto Velho\n      Norte\n    \n    \n      22\n      NaN\n      Roraima\n      RR\n      Boa Vista\n      Norte\n    \n    \n      23\n      NaN\n      Santa Catarina\n      SC\n      Florianópolis\n      Sul\n    \n    \n      24\n      NaN\n      São Paulo\n      SP\n      São Paulo\n      Sudeste\n    \n    \n      25\n      NaN\n      Sergipe\n      SE\n      Aracaju\n      Nordeste\n    \n    \n      26\n      NaN\n      Tocantins\n      TO\n      Palmas\n      Norte\n    \n  \n\n\n\n\n\n\nSelecionando colunas\n\ncols_regs = [\n  'Sigla',\n  'Estado',\n  'Região',\n]\n\n\ndf_regs = df_regs[cols_regs]\ndf_regs\n\n\n\n\n\n  \n    \n      \n      Sigla\n      Estado\n      Região\n    \n  \n  \n    \n      0\n      AC\n      Acre\n      Norte\n    \n    \n      1\n      AL\n      Alagoas\n      Nordeste\n    \n    \n      2\n      AP\n      Amapá\n      Norte\n    \n    \n      3\n      AM\n      Amazonas\n      Norte\n    \n    \n      4\n      BA\n      Bahia\n      Nordeste\n    \n    \n      5\n      CE\n      Ceará\n      Nordeste\n    \n    \n      6\n      DF\n      Distrito Federal\n      Centro-Oeste\n    \n    \n      7\n      ES\n      Espírito Santo\n      Sudeste\n    \n    \n      8\n      GO\n      Goiás\n      Centro-Oeste\n    \n    \n      9\n      MA\n      Maranhão\n      Nordeste\n    \n    \n      10\n      MT\n      Mato Grosso\n      Centro-Oeste\n    \n    \n      11\n      MS\n      Mato Grosso do Sul\n      Centro-Oeste\n    \n    \n      12\n      MG\n      Minas Gerais\n      Sudeste\n    \n    \n      13\n      PA\n      Pará\n      Norte\n    \n    \n      14\n      PB\n      Paraíba\n      Nordeste\n    \n    \n      15\n      PR\n      Paraná\n      Sul\n    \n    \n      16\n      PE\n      Pernambuco\n      Nordeste\n    \n    \n      17\n      PI\n      Piauí\n      Nordeste\n    \n    \n      18\n      RJ\n      Rio de Janeiro\n      Sudeste\n    \n    \n      19\n      RN\n      Rio Grande do Norte\n      Nordeste\n    \n    \n      20\n      RS\n      Rio Grande do Sul\n      Sul\n    \n    \n      21\n      RO\n      Rondônia\n      Norte\n    \n    \n      22\n      RR\n      Roraima\n      Norte\n    \n    \n      23\n      SC\n      Santa Catarina\n      Sul\n    \n    \n      24\n      SP\n      São Paulo\n      Sudeste\n    \n    \n      25\n      SE\n      Sergipe\n      Nordeste\n    \n    \n      26\n      TO\n      Tocantins\n      Norte"
  },
  {
    "objectID": "sections/database_municipios.html#unindo-tabelas",
    "href": "sections/database_municipios.html#unindo-tabelas",
    "title": "Municípios",
    "section": "Unindo tabelas",
    "text": "Unindo tabelas\nMerge\n\ndf_munic = df_muns.copy()\ndf_munic['codigo_ibge'] = df_munic['codigo_ibge'].apply(lambda x: int(str(x)[:6]))\ndf_munic = df_munic.merge(df_ufs, how='left', on='codigo_uf')\ndf_munic = df_munic.merge(df_regs, how='left', on='Sigla')\ndf_munic\n\n\n\n\n\n  \n    \n      \n      codigo_ibge\n      nome\n      capital\n      codigo_uf\n      latitude\n      longitude\n      Sigla\n      Estado\n      Região\n    \n  \n  \n    \n      0\n      520005\n      Abadia de Goiás\n      0\n      52\n      -16.75730\n      -49.4412\n      GO\n      Goiás\n      Centro-Oeste\n    \n    \n      1\n      310010\n      Abadia dos Dourados\n      0\n      31\n      -18.48310\n      -47.3916\n      MG\n      Minas Gerais\n      Sudeste\n    \n    \n      2\n      520010\n      Abadiânia\n      0\n      52\n      -16.19700\n      -48.7057\n      GO\n      Goiás\n      Centro-Oeste\n    \n    \n      3\n      310020\n      Abaeté\n      0\n      31\n      -19.15510\n      -45.4444\n      MG\n      Minas Gerais\n      Sudeste\n    \n    \n      4\n      150010\n      Abaetetuba\n      0\n      15\n      -1.72183\n      -48.8788\n      PA\n      Pará\n      Norte\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      5565\n      293360\n      Xique-Xique\n      0\n      29\n      -10.82300\n      -42.7245\n      BA\n      Bahia\n      Nordeste\n    \n    \n      5566\n      251740\n      Zabelê\n      0\n      25\n      -8.07901\n      -37.1057\n      PB\n      Paraíba\n      Nordeste\n    \n    \n      5567\n      355715\n      Zacarias\n      0\n      35\n      -21.05060\n      -50.0552\n      SP\n      São Paulo\n      Sudeste\n    \n    \n      5568\n      211400\n      Zé Doca\n      0\n      21\n      -3.27014\n      -45.6553\n      MA\n      Maranhão\n      Nordeste\n    \n    \n      5569\n      421985\n      Zortéa\n      0\n      42\n      -27.45210\n      -51.5520\n      SC\n      Santa Catarina\n      Sul\n    \n  \n\n5570 rows × 9 columns"
  },
  {
    "objectID": "sections/database_municipios.html#ajustando-colunas",
    "href": "sections/database_municipios.html#ajustando-colunas",
    "title": "Municípios",
    "section": "Ajustando Colunas",
    "text": "Ajustando Colunas\n\ncols_munic = {\n  'codigo_ibge': 'cod_municipio',\n  'nome': 'nome_municipio',\n  'capital': 'capital',\n  'Sigla': 'uf',\n  'codigo_uf': 'cod_uf',\n  'Estado': 'nome_uf',\n  'Região': 'regiao',\n  'latitude': 'latitude',\n  'longitude': 'longitude',\n}\n\n\ndf_munic = df_munic[list(cols_munic)]\ndf_munic = df_munic.rename(columns=cols_munic)\ndf_munic\n\n\n\n\n\n  \n    \n      \n      cod_municipio\n      nome_municipio\n      capital\n      uf\n      cod_uf\n      nome_uf\n      regiao\n      latitude\n      longitude\n    \n  \n  \n    \n      0\n      520005\n      Abadia de Goiás\n      0\n      GO\n      52\n      Goiás\n      Centro-Oeste\n      -16.75730\n      -49.4412\n    \n    \n      1\n      310010\n      Abadia dos Dourados\n      0\n      MG\n      31\n      Minas Gerais\n      Sudeste\n      -18.48310\n      -47.3916\n    \n    \n      2\n      520010\n      Abadiânia\n      0\n      GO\n      52\n      Goiás\n      Centro-Oeste\n      -16.19700\n      -48.7057\n    \n    \n      3\n      310020\n      Abaeté\n      0\n      MG\n      31\n      Minas Gerais\n      Sudeste\n      -19.15510\n      -45.4444\n    \n    \n      4\n      150010\n      Abaetetuba\n      0\n      PA\n      15\n      Pará\n      Norte\n      -1.72183\n      -48.8788\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      5565\n      293360\n      Xique-Xique\n      0\n      BA\n      29\n      Bahia\n      Nordeste\n      -10.82300\n      -42.7245\n    \n    \n      5566\n      251740\n      Zabelê\n      0\n      PB\n      25\n      Paraíba\n      Nordeste\n      -8.07901\n      -37.1057\n    \n    \n      5567\n      355715\n      Zacarias\n      0\n      SP\n      35\n      São Paulo\n      Sudeste\n      -21.05060\n      -50.0552\n    \n    \n      5568\n      211400\n      Zé Doca\n      0\n      MA\n      21\n      Maranhão\n      Nordeste\n      -3.27014\n      -45.6553\n    \n    \n      5569\n      421985\n      Zortéa\n      0\n      SC\n      42\n      Santa Catarina\n      Sul\n      -27.45210\n      -51.5520\n    \n  \n\n5570 rows × 9 columns"
  },
  {
    "objectID": "sections/database_sih.html",
    "href": "sections/database_sih.html",
    "title": "SIH",
    "section": "",
    "text": "from utils import data_load\nfrom datatable import dt, f"
  },
  {
    "objectID": "sections/database_sih.html#filtro-de-colunas",
    "href": "sections/database_sih.html#filtro-de-colunas",
    "title": "SIH",
    "section": "Filtro de Colunas",
    "text": "Filtro de Colunas\n\ncols_sih = {\n  'ano_internacao': 'ano',\n  'PROC_REA': 'parto_normal',\n  'CNES': 'cnes',\n  'def_idade_anos': 'idade',\n  'int_codigo_adotado': 'hosp_cod_municipio',\n  'res_codigo_adotado': 'cod_municipio',\n}"
  },
  {
    "objectID": "sections/database_sih.html#filtro-de-linhas",
    "href": "sections/database_sih.html#filtro-de-linhas",
    "title": "SIH",
    "section": "Filtro de Linhas",
    "text": "Filtro de Linhas\n\ndef filter_sih(df, cols):\n  cols = list(cols.values())[:-1]\n  cols = [c for c in cols if c in df.names]\n  df_filtered = df[\n    (\n      (f['ano'] > 2009) & (f['ano'] < 2020)\n    ) & (\n      (f['idade'] > 9) & (f['idade'] < 50)\n    ) & (\n      (f['parto_normal'] == 310010039) | (f['parto_normal'] == 411010034)\n    ) & (\n      ((f['hosp_cod_municipio'] != None) & (f['cod_municipio'] != None))\n    ) & (\n      (f['cnes'] != None)\n    ), cols]\n  return df_filtered"
  },
  {
    "objectID": "sections/database_sih.html#carregando-tabela",
    "href": "sections/database_sih.html#carregando-tabela",
    "title": "SIH",
    "section": "Carregando tabela",
    "text": "Carregando tabela\n\n# path_zip_sih = '/Volumes/SanDisk/Databases/SIH/SIHSUS.zip'\npath_zip_sih = input('Qual o caminho para o arquivo zip da base de dados SIHSUS?')\n\n\ndf_sih = data_load(path_zip_sih, cols_sih, filter_sih)\ndf_sih\n\n100%|██████████| 4400/4400 [20:32<00:00,  3.57it/s]\n\n\n\n\n  \n  \n    anoparto_normalcnesidadehosp_cod_municipiocod_municipio\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    02010310010039200102023120005120005\n    12010310010039200073328120040120040\n    22010310010039200073338120040120040\n    32010310010039200073316120040120040\n    42010310010039200073326120040120040\n    52010310010039200073326120040120040\n    62010310010039200073327120040120040\n    72010310010039200102031120005120005\n    82010310010039200073330120040120040\n    92010310010039200073318120040120040\n    102010310010039200102028120005120005\n    112010310010039200073332120040120038\n    122010310010039200073330120040120040\n    132010310010039200073326120040120001\n    142010310010039200073326120040120040\n    ⋮⋮⋮⋮⋮⋮⋮\n    17,106,3962019411010034276564024170930171840\n    17,106,3972019411010034276564027170930171670\n    17,106,3982019411010034276564022170930171670\n    17,106,3992019411010034276564025170930170930\n    17,106,4002019411010034275514921171610171250\n  \n  \n  \n    17,106,401 rows × 6 columns\n  \n\n\n\n100%|██████████| 4400/4400 [20:32<00:00, 3.57it/s]"
  },
  {
    "objectID": "sections/deslc_uf.html",
    "href": "sections/deslc_uf.html",
    "title": "Deslocamento de Gestantes",
    "section": "",
    "text": "output_deslc = get_path('GESTANTES', 'deslocamentos.csv.gzip')\ndf_deslc = pd.read_csv(output_deslc)\ndf_deslc\n\n\n\n\n\n  \n    \n      \n      bienio\n      parto_normal\n      origem\n      destino\n      mun_diff\n      regsau_diff\n      distancia\n      tempo\n      regiao\n      uf\n      ...\n      capital\n      socioecon\n      latitude\n      longitude\n      hosp_latitude\n      hosp_longitude\n      hosp_cnes\n      hosp_regiao_saude\n      hosp_uf\n      count\n    \n  \n  \n    \n      0\n      0\n      1\n      355030\n      355030\n      0\n      0\n      0.0000\n      0.000000\n      SD\n      SP\n      ...\n      1\n      5\n      -23.548\n      -46.636\n      -23.548\n      -46.636\n      2077701\n      3501\n      SP\n      76\n    \n    \n      1\n      0\n      1\n      130260\n      130260\n      0\n      0\n      0.0000\n      0.000000\n      NT\n      AM\n      ...\n      1\n      4\n      -3.102\n      -60.025\n      -3.102\n      -60.025\n      3004104\n      1301\n      AM\n      74\n    \n    \n      2\n      0\n      1\n      120040\n      120040\n      0\n      0\n      0.0000\n      0.000000\n      NT\n      AC\n      ...\n      1\n      2\n      -9.975\n      -67.810\n      -9.975\n      -67.810\n      2000733\n      1201\n      AC\n      73\n    \n    \n      3\n      0\n      1\n      160030\n      160030\n      0\n      0\n      0.0000\n      0.000000\n      NT\n      AP\n      ...\n      1\n      2\n      0.039\n      -51.066\n      0.039\n      -51.066\n      2020068\n      1601\n      AP\n      73\n    \n    \n      4\n      0\n      1\n      150180\n      150180\n      0\n      0\n      0.0000\n      0.000000\n      NT\n      PA\n      ...\n      0\n      1\n      -1.682\n      -50.480\n      -1.682\n      -50.480\n      2418657\n      1508\n      PA\n      73\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      123865\n      1\n      1\n      315980\n      270430\n      1\n      1\n      2275.6718\n      28.283556\n      SD\n      MG\n      ...\n      0\n      5\n      -18.839\n      -50.121\n      -9.666\n      -35.735\n      9923837\n      2701\n      AL\n      1\n    \n    \n      123866\n      1\n      1\n      350400\n      270430\n      1\n      1\n      2599.6191\n      31.918583\n      SD\n      SP\n      ...\n      0\n      4\n      -22.662\n      -50.412\n      -9.666\n      -35.735\n      9923837\n      2701\n      AL\n      1\n    \n    \n      123867\n      1\n      1\n      351880\n      270430\n      1\n      1\n      2404.7096\n      29.901278\n      SD\n      SP\n      ...\n      0\n      4\n      -23.463\n      -46.533\n      -9.666\n      -35.735\n      9923837\n      2701\n      AL\n      1\n    \n    \n      123868\n      1\n      1\n      354100\n      270430\n      1\n      1\n      2490.4019\n      31.241472\n      SD\n      SP\n      ...\n      0\n      4\n      -24.006\n      -46.403\n      -9.666\n      -35.735\n      9923837\n      2701\n      AL\n      1\n    \n    \n      123869\n      1\n      1\n      510623\n      270430\n      1\n      1\n      3217.7273\n      39.940667\n      CO\n      MT\n      ...\n      0\n      2\n      -14.797\n      -57.288\n      -9.666\n      -35.735\n      9923837\n      2701\n      AL\n      1\n    \n  \n\n123870 rows × 21 columns\n\n\n\n\ndf_deslc.to_excel(output_deslc.replace('csv.gzip', 'xlsx'), index=False)\n\n\ndf_deslc.info()\n\n<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 97665 entries, 0 to 97664\nData columns (total 19 columns):\n #   Column             Non-Null Count  Dtype  \n---  ------             --------------  -----  \n 0   bienio             97665 non-null  int64  \n 1   parto_normal       97665 non-null  int64  \n 2   origem             97665 non-null  int64  \n 3   destino            97665 non-null  int64  \n 4   mun_diff           97665 non-null  int64  \n 5   regsau_diff        97665 non-null  int64  \n 6   distancia          97665 non-null  float64\n 7   tempo              97665 non-null  float64\n 8   regiao             97665 non-null  object \n 9   uf                 97665 non-null  object \n 10  regiao_saude       97665 non-null  int64  \n 11  capital            97665 non-null  int64  \n 12  socioecon          97665 non-null  int64  \n 13  latitude           97665 non-null  float64\n 14  longitude          97665 non-null  float64\n 15  hosp_latitude      97665 non-null  float64\n 16  hosp_longitude     97665 non-null  float64\n 17  hosp_regiao_saude  97665 non-null  int64  \n 18  count              97665 non-null  int64  \ndtypes: float64(6), int64(11), object(2)\nmemory usage: 14.2+ MB\n\n\n\ndf_deslc['count'].sum()\n\n1350318\n\n\n\nregioes = df_deslc['regiao'].unique()\nregioes\n\narray(['Sudeste', 'Nordeste', 'Norte', 'Centro-Oeste', 'Sul'],\n      dtype=object)\n\n\n\ndesc_regiao = dict()\nfor regiao in regioes:\n  desc_regiao[regiao] = df_deslc[df_deslc['regiao'] == regiao]\n\n\ndesc_regiao[regioes[0]]\n\n\n\n\n\n  \n    \n      \n      bienio\n      parto_normal\n      origem\n      destino\n      mun_diff\n      regsau_diff\n      distancia\n      tempo\n      regiao\n      uf\n      regiao_saude\n      capital\n      socioecon\n      latitude\n      longitude\n      hosp_latitude\n      hosp_longitude\n      hosp_regiao_saude\n      count\n    \n  \n  \n    \n      0\n      0\n      1\n      355030\n      355030\n      0\n      0\n      0.0000\n      0.000000\n      Sudeste\n      SP\n      3501\n      1\n      5\n      -23.548\n      -46.636\n      -23.548\n      -46.636\n      3501\n      2368\n    \n    \n      1\n      0\n      0\n      355030\n      355030\n      0\n      0\n      0.0000\n      0.000000\n      Sudeste\n      SP\n      3501\n      1\n      5\n      -23.548\n      -46.636\n      -23.548\n      -46.636\n      3501\n      2020\n    \n    \n      2\n      0\n      1\n      330455\n      330455\n      0\n      0\n      0.0000\n      0.000000\n      Sudeste\n      RJ\n      3305\n      1\n      5\n      -22.903\n      -43.208\n      -22.903\n      -43.208\n      3305\n      1210\n    \n    \n      3\n      0\n      0\n      330455\n      330455\n      0\n      0\n      0.0000\n      0.000000\n      Sudeste\n      RJ\n      3305\n      1\n      5\n      -22.903\n      -43.208\n      -22.903\n      -43.208\n      3305\n      872\n    \n    \n      14\n      0\n      1\n      310620\n      310620\n      0\n      0\n      0.0000\n      0.000000\n      Sudeste\n      MG\n      3101\n      1\n      1\n      -19.817\n      -43.956\n      -19.817\n      -43.956\n      3101\n      466\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      97494\n      1\n      1\n      313440\n      521150\n      1\n      1\n      274.7725\n      3.272722\n      Sudeste\n      MG\n      3113\n      0\n      3\n      -19.728\n      -50.196\n      -18.420\n      -49.218\n      5216\n      1\n    \n    \n      97552\n      1\n      1\n      330100\n      521760\n      1\n      1\n      1232.6051\n      15.700639\n      Sudeste\n      RJ\n      3307\n      0\n      5\n      -21.754\n      -41.324\n      -15.453\n      -47.614\n      5206\n      1\n    \n    \n      97625\n      1\n      1\n      353730\n      522040\n      1\n      1\n      356.4371\n      5.702722\n      Sudeste\n      SP\n      3506\n      0\n      3\n      -21.420\n      -50.078\n      -18.991\n      -50.544\n      5213\n      1\n    \n    \n      97626\n      1\n      1\n      354340\n      522040\n      1\n      1\n      449.7193\n      6.066944\n      Sudeste\n      SP\n      3518\n      0\n      5\n      -21.178\n      -47.810\n      -18.991\n      -50.544\n      5213\n      1\n    \n    \n      97640\n      1\n      1\n      312950\n      522045\n      1\n      1\n      598.9450\n      7.536861\n      Sudeste\n      MG\n      3113\n      0\n      3\n      -19.478\n      -46.539\n      -16.708\n      -49.093\n      5202\n      1\n    \n  \n\n26527 rows × 19 columns\n\n\n\n\ndesc_regiao[regioes[0]].info()\n\n<class 'pandas.core.frame.DataFrame'>\nInt64Index: 26527 entries, 0 to 97640\nData columns (total 19 columns):\n #   Column             Non-Null Count  Dtype  \n---  ------             --------------  -----  \n 0   bienio             26527 non-null  int64  \n 1   parto_normal       26527 non-null  int64  \n 2   origem             26527 non-null  int64  \n 3   destino            26527 non-null  int64  \n 4   mun_diff           26527 non-null  int64  \n 5   regsau_diff        26527 non-null  int64  \n 6   distancia          26527 non-null  float64\n 7   tempo              26527 non-null  float64\n 8   regiao             26527 non-null  object \n 9   uf                 26527 non-null  object \n 10  regiao_saude       26527 non-null  int64  \n 11  capital            26527 non-null  int64  \n 12  socioecon          26527 non-null  int64  \n 13  latitude           26527 non-null  float64\n 14  longitude          26527 non-null  float64\n 15  hosp_latitude      26527 non-null  float64\n 16  hosp_longitude     26527 non-null  float64\n 17  hosp_regiao_saude  26527 non-null  int64  \n 18  count              26527 non-null  int64  \ndtypes: float64(6), int64(11), object(2)\nmemory usage: 4.0+ MB\n\n\n\ndf_deslc['uf'].value_counts()\n\nMG    11715\nSP    10539\nBA     9845\nPE     7320\nRS     6471\nMA     5352\nPR     5322\nSC     4266\nPA     4134\nPB     3667\nCE     3581\nGO     3478\nPI     3225\nRN     3098\nRJ     2485\nMT     2161\nTO     2146\nAL     1886\nES     1788\nSE     1262\nMS     1261\nRO     1141\nAM      832\nAC      291\nAP      228\nRR      171\nName: uf, dtype: int64\n\n\n\ndf_deslc[df_deslc['uf'] == 'MG'].info()\n\n<class 'pandas.core.frame.DataFrame'>\nInt64Index: 11715 entries, 14 to 97640\nData columns (total 19 columns):\n #   Column             Non-Null Count  Dtype  \n---  ------             --------------  -----  \n 0   bienio             11715 non-null  int64  \n 1   parto_normal       11715 non-null  int64  \n 2   origem             11715 non-null  int64  \n 3   destino            11715 non-null  int64  \n 4   mun_diff           11715 non-null  int64  \n 5   regsau_diff        11715 non-null  int64  \n 6   distancia          11715 non-null  float64\n 7   tempo              11715 non-null  float64\n 8   regiao             11715 non-null  object \n 9   uf                 11715 non-null  object \n 10  regiao_saude       11715 non-null  int64  \n 11  capital            11715 non-null  int64  \n 12  socioecon          11715 non-null  int64  \n 13  latitude           11715 non-null  float64\n 14  longitude          11715 non-null  float64\n 15  hosp_latitude      11715 non-null  float64\n 16  hosp_longitude     11715 non-null  float64\n 17  hosp_regiao_saude  11715 non-null  int64  \n 18  count              11715 non-null  int64  \ndtypes: float64(6), int64(11), object(2)\nmemory usage: 1.8+ MB\n\n\n\n# df_deslc.to_pandas().to_excel(output_deslc.replace('csv.gzip', 'xlsx'), index=False)"
  },
  {
    "objectID": "sections/table_deslc.html",
    "href": "sections/table_deslc.html",
    "title": "Deslocamento",
    "section": "",
    "text": "import pandas as pd\nfrom utils import get_path, group_cols\nfrom datatable import dt, f, by"
  },
  {
    "objectID": "sections/table_deslc.html#tabela-procedimentos",
    "href": "sections/table_deslc.html#tabela-procedimentos",
    "title": "Deslocamento",
    "section": "Tabela Procedimentos",
    "text": "Tabela Procedimentos\n\nColunas da tabela\n\n\nLinhas da tabela\n\ndef filter_deslc(df):\n  df_filtered = df[\n    (\n      f.ano == 2010\n    ) | (\n      f.ano == 2011\n    ) | (\n      f.ano == 2018\n    ) | (\n      f.ano == 2019\n    ), :]\n  return df_filtered\n\n\n\nCarregando tabela\n\npath_proc = get_path('GESTANTES', 'procs_ano.csv.gzip')\ndf_proc = dt.fread(path_proc)\ndf_proc = filter_deslc(df_proc)\ndf_proc\n\n\n\n  \n  \n    anoparto_normalorigemdestinodistancia (km)tempo (min)criticidadecapitaissocioeconorigem_latitudeorigem_longitudedestino_latitudedestino_longitudecount\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    020100NT/RO/11005/110001NT/RO/11005/110001/26794770000_01_1−11.9283−61.9953−11.9283−61.995349\n    120100NT/RO/11005/110001NT/RO/11003/110012/2495279130.77152.86820_01_2−11.9283−61.9953−10.8777−61.93222\n    220100NT/RO/11005/110001NT/RO/11001/110013/2808617357.511427.8420_01_1−11.9283−61.9953−9.44363−61.98181\n    320100NT/RO/11005/110001NT/RO/11002/110018/2496534114.061112.28320_01_3−11.9283−61.9953−11.672−61.1981\n    420100NT/RO/11005/110001NT/RO/11005/110028/249522848.609950.1410_01_1−11.9283−61.9953−11.7271−61.77144\n    520100NT/RO/11005/110001SD/SP/35151/351110/20893272196.351852.4140_01_3−11.9283−61.9953−21.1314−48.9771\n    620100NT/RO/11001/110002NT/RO/11001/110002/24942990000_01_1−9.90571−63.0325−9.90571−63.0325375\n    720100NT/RO/11001/110002NT/RO/11003/110011/280860995.4727140.3320_01_2−9.90571−63.0325−10.4318−62.47884\n    820100NT/RO/11001/110002NT/RO/11004/110020/4001303203.582188.31520_11_3−9.90571−63.0325−8.76077−63.89991\n    920100NT/RO/11006/110003NT/RO/11006/110003/28085280000_02_2−13.4945−60.552−13.4945−60.55251\n    1020100NT/RO/11002/110004NT/RO/11002/110004/24960460000_03_3−11.4343−61.4562−11.4343−61.4562199\n    1120100NT/RO/11002/110004NT/RO/11003/110012/2495279104.964100.0320_03_2−11.4343−61.4562−10.8777−61.93222\n    1220100NT/RO/11002/110004NT/RO/11002/110018/249653441.426640.333310_03_3−11.4343−61.4562−11.672−61.1981\n    1320100NT/RO/11002/110004NT/RO/11004/110020/4001303480.05497.0720_13_3−11.4343−61.4562−8.76077−63.89992\n    1420100NT/RO/11002/110004NT/RO/11005/110028/249522847.789966.301720_03_1−11.4343−61.4562−11.7271−61.77142\n    ⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮\n    187,46620191CO/DF/53001/530010CO/DF/53001/530010/00105450001_15_5−15.7795−47.9297−15.7795−47.9297479\n    187,46720191CO/DF/53001/530010CO/DF/53001/530010/26451570001_15_5−15.7795−47.9297−15.7795−47.92971373\n    187,46820191CO/DF/53001/530010CO/DF/53001/530010/26503550001_15_5−15.7795−47.9297−15.7795−47.92975\n    187,46920191CO/DF/53001/530010CO/DF/53001/530010/26721970001_15_5−15.7795−47.9297−15.7795−47.92972483\n    187,47020191CO/DF/53001/530010CO/DF/53001/530010/57175150001_15_5−15.7795−47.9297−15.7795−47.92971086\n  \n  \n  \n    187,471 rows × 14 columns\n  \n\n\n\n\n\nAtualizando variável ano (biênio)\nValor da variável bienio:\n\n0 (False) = 2010/11\n1 (True) = 2018/19\n\n\ndf_proc[:, dt.update(ano = (f.ano == 2018) | (f.ano == 2019))]\ndf_proc.names = {'ano': 'bienio'}\ndf_proc\n\n\n\n  \n  \n    bienioparto_normalorigemdestinodistancia (km)tempo (min)criticidadecapitaissocioeconorigem_latitudeorigem_longitudedestino_latitudedestino_longitudecount\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    000NT/RO/11005/110001NT/RO/11005/110001/26794770000_01_1−11.9283−61.9953−11.9283−61.995349\n    100NT/RO/11005/110001NT/RO/11003/110012/2495279130.77152.86820_01_2−11.9283−61.9953−10.8777−61.93222\n    200NT/RO/11005/110001NT/RO/11001/110013/2808617357.511427.8420_01_1−11.9283−61.9953−9.44363−61.98181\n    300NT/RO/11005/110001NT/RO/11002/110018/2496534114.061112.28320_01_3−11.9283−61.9953−11.672−61.1981\n    400NT/RO/11005/110001NT/RO/11005/110028/249522848.609950.1410_01_1−11.9283−61.9953−11.7271−61.77144\n    500NT/RO/11005/110001SD/SP/35151/351110/20893272196.351852.4140_01_3−11.9283−61.9953−21.1314−48.9771\n    600NT/RO/11001/110002NT/RO/11001/110002/24942990000_01_1−9.90571−63.0325−9.90571−63.0325375\n    700NT/RO/11001/110002NT/RO/11003/110011/280860995.4727140.3320_01_2−9.90571−63.0325−10.4318−62.47884\n    800NT/RO/11001/110002NT/RO/11004/110020/4001303203.582188.31520_11_3−9.90571−63.0325−8.76077−63.89991\n    900NT/RO/11006/110003NT/RO/11006/110003/28085280000_02_2−13.4945−60.552−13.4945−60.55251\n    1000NT/RO/11002/110004NT/RO/11002/110004/24960460000_03_3−11.4343−61.4562−11.4343−61.4562199\n    1100NT/RO/11002/110004NT/RO/11003/110012/2495279104.964100.0320_03_2−11.4343−61.4562−10.8777−61.93222\n    1200NT/RO/11002/110004NT/RO/11002/110018/249653441.426640.333310_03_3−11.4343−61.4562−11.672−61.1981\n    1300NT/RO/11002/110004NT/RO/11004/110020/4001303480.05497.0720_13_3−11.4343−61.4562−8.76077−63.89992\n    1400NT/RO/11002/110004NT/RO/11005/110028/249522847.789966.301720_03_1−11.4343−61.4562−11.7271−61.77142\n    ⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮\n    187,46611CO/DF/53001/530010CO/DF/53001/530010/00105450001_15_5−15.7795−47.9297−15.7795−47.9297479\n    187,46711CO/DF/53001/530010CO/DF/53001/530010/26451570001_15_5−15.7795−47.9297−15.7795−47.92971373\n    187,46811CO/DF/53001/530010CO/DF/53001/530010/26503550001_15_5−15.7795−47.9297−15.7795−47.92975\n    187,46911CO/DF/53001/530010CO/DF/53001/530010/26721970001_15_5−15.7795−47.9297−15.7795−47.92972483\n    187,47011CO/DF/53001/530010CO/DF/53001/530010/57175150001_15_5−15.7795−47.9297−15.7795−47.92971086\n  \n  \n  \n    187,471 rows × 14 columns\n  \n\n\n\n\n\nTabela agrupada\n\ndf_proc = df_proc[:, dt.sum(f.count), by(df_proc.names[:-1])]\ndf_proc\n\n\n\n  \n  \n    bienioparto_normalorigemdestinodistancia (km)tempo (min)criticidadecapitaissocioeconorigem_latitudeorigem_longitudedestino_latitudedestino_longitudecount\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    000CO/DF/53001/530010CO/DF/53001/530010/00104640001_15_5−15.7795−47.9297−15.7795−47.9297260\n    100CO/DF/53001/530010CO/DF/53001/530010/00104720001_15_5−15.7795−47.9297−15.7795−47.9297282\n    200CO/DF/53001/530010CO/DF/53001/530010/00104800001_15_5−15.7795−47.9297−15.7795−47.92973323\n    300CO/DF/53001/530010CO/DF/53001/530010/00104990001_15_5−15.7795−47.9297−15.7795−47.92973368\n    400CO/DF/53001/530010CO/DF/53001/530010/00105020001_15_5−15.7795−47.9297−15.7795−47.9297964\n    500CO/DF/53001/530010CO/DF/53001/530010/00105100001_15_5−15.7795−47.9297−15.7795−47.9297832\n    600CO/DF/53001/530010CO/DF/53001/530010/00105290001_15_5−15.7795−47.9297−15.7795−47.92971831\n    700CO/DF/53001/530010CO/DF/53001/530010/00105370001_15_5−15.7795−47.9297−15.7795−47.92973707\n    800CO/DF/53001/530010CO/DF/53001/530010/00105450001_15_5−15.7795−47.9297−15.7795−47.9297728\n    900CO/DF/53001/530010CO/DF/53001/530010/00105610001_15_5−15.7795−47.9297−15.7795−47.92971\n    1000CO/DF/53001/530010CO/DF/53001/530010/26451570001_15_5−15.7795−47.9297−15.7795−47.92972251\n    1100CO/DF/53001/530010CO/DF/53001/530010/26721970001_15_5−15.7795−47.9297−15.7795−47.92971561\n    1200CO/DF/53001/530010CO/DF/53001/530010/57175150001_15_5−15.7795−47.9297−15.7795−47.92971798\n    1300CO/DF/53001/530010CO/GO/52011/520110/2361787152.625132.72331_05_3−15.7795−47.9297−16.3281−48.9534\n    1400CO/DF/53001/530010ND/BA/29002/290320/3972925630.949466.70541_05_2−15.7795−47.9297−12.1439−44.99681\n    ⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮\n    124,98011SL/SC/42016/421870SL/SC/42007/420540/3157245138.477104.9420_13_5−28.4713−49.0144−27.5945−48.54771\n    124,98111SL/SC/42016/421870SL/SC/42015/420460/259427754.62149.316720_03_4−28.4713−49.0144−28.6723−49.37291\n    124,98211SL/SC/42016/421870SL/SC/42016/420280/266588335.543937.493310_03_3−28.4713−49.0144−28.2681−49.17012\n    124,98311SL/SC/42016/421870SL/SC/42016/420730/238588053.96145.353310_03_3−28.4713−49.0144−28.2284−48.66591\n    124,98411SL/SC/42016/421870SL/SC/42016/421870/24917100000_03_3−28.4713−49.0144−28.4713−49.0144441\n  \n  \n  \n    124,985 rows × 14 columns"
  },
  {
    "objectID": "sections/table_deslc.html#ordenando-linhas",
    "href": "sections/table_deslc.html#ordenando-linhas",
    "title": "Deslocamento",
    "section": "Ordenando linhas",
    "text": "Ordenando linhas\n\ndf_proc = df_proc.sort(f.bienio, f.parto_normal, f.origem, f.destino)\ndf_proc\n\n\n\n  \n  \n    bienioparto_normalorigemdestinodistancia (km)tempo (min)criticidadecapitaissocioeconorigem_latitudeorigem_longitudedestino_latitudedestino_longitudecount\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    000CO/DF/53001/530010CO/DF/53001/530010/00104640001_15_5−15.7795−47.9297−15.7795−47.9297260\n    100CO/DF/53001/530010CO/DF/53001/530010/00104720001_15_5−15.7795−47.9297−15.7795−47.9297282\n    200CO/DF/53001/530010CO/DF/53001/530010/00104800001_15_5−15.7795−47.9297−15.7795−47.92973323\n    300CO/DF/53001/530010CO/DF/53001/530010/00104990001_15_5−15.7795−47.9297−15.7795−47.92973368\n    400CO/DF/53001/530010CO/DF/53001/530010/00105020001_15_5−15.7795−47.9297−15.7795−47.9297964\n    500CO/DF/53001/530010CO/DF/53001/530010/00105100001_15_5−15.7795−47.9297−15.7795−47.9297832\n    600CO/DF/53001/530010CO/DF/53001/530010/00105290001_15_5−15.7795−47.9297−15.7795−47.92971831\n    700CO/DF/53001/530010CO/DF/53001/530010/00105370001_15_5−15.7795−47.9297−15.7795−47.92973707\n    800CO/DF/53001/530010CO/DF/53001/530010/00105450001_15_5−15.7795−47.9297−15.7795−47.9297728\n    900CO/DF/53001/530010CO/DF/53001/530010/00105610001_15_5−15.7795−47.9297−15.7795−47.92971\n    1000CO/DF/53001/530010CO/DF/53001/530010/26451570001_15_5−15.7795−47.9297−15.7795−47.92972251\n    1100CO/DF/53001/530010CO/DF/53001/530010/26721970001_15_5−15.7795−47.9297−15.7795−47.92971561\n    1200CO/DF/53001/530010CO/DF/53001/530010/57175150001_15_5−15.7795−47.9297−15.7795−47.92971798\n    1300CO/DF/53001/530010CO/GO/52011/520110/2361787152.625132.72331_05_3−15.7795−47.9297−16.3281−48.9534\n    1400CO/DF/53001/530010ND/BA/29002/290320/3972925630.949466.70541_05_2−15.7795−47.9297−12.1439−44.99681\n    ⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮\n    124,98011SL/SC/42016/421870SL/SC/42007/420540/3157245138.477104.9420_13_5−28.4713−49.0144−27.5945−48.54771\n    124,98111SL/SC/42016/421870SL/SC/42015/420460/259427754.62149.316720_03_4−28.4713−49.0144−28.6723−49.37291\n    124,98211SL/SC/42016/421870SL/SC/42016/420280/266588335.543937.493310_03_3−28.4713−49.0144−28.2681−49.17012\n    124,98311SL/SC/42016/421870SL/SC/42016/420730/238588053.96145.353310_03_3−28.4713−49.0144−28.2284−48.66591\n    124,98411SL/SC/42016/421870SL/SC/42016/421870/24917100000_03_3−28.4713−49.0144−28.4713−49.0144441\n  \n  \n  \n    124,985 rows × 14 columns"
  },
  {
    "objectID": "sections/table_deslc.html#tabela-referência",
    "href": "sections/table_deslc.html#tabela-referência",
    "title": "Deslocamento",
    "section": "Tabela referência",
    "text": "Tabela referência\n\n# df_deslc = dt.fread(output_deslc)"
  },
  {
    "objectID": "sections/table_deslc.html#brasil-sem-cnes",
    "href": "sections/table_deslc.html#brasil-sem-cnes",
    "title": "Deslocamento",
    "section": "Brasil (sem CNES)",
    "text": "Brasil (sem CNES)\n\n# df_deslc_brasil = df_deslc[:, f[:].remove(f.hosp_cnes)]\n# df_deslc_brasil = df_deslc_brasil[:, dt.sum(f.count), dt.by(df_deslc_brasil.names[:-1])]\n# df_deslc_brasil\n\n\n# output_deslc_brasil = get_path('GESTANTES', 'deslocamentos_brasil.csv.gzip') # xlsx\n# df_deslc_brasil.to_csv(output_deslc_brasil)\n# pd.read_csv(output_deslc_brasil).to_excel(output_deslc_brasil.replace('csv.gzip', 'xlsx'), index=False)\n# # df_deslc_brasil.to_pandas().to_excel(output_deslc_brasil, index=False)"
  },
  {
    "objectID": "sections/table_deslc.html#rj",
    "href": "sections/table_deslc.html#rj",
    "title": "Deslocamento",
    "section": "RJ",
    "text": "RJ\n\nCom CNES\n\n# df_deslc_rj_cnes = df_deslc[(f.uf == 'RJ'), :]\n# df_deslc_rj_cnes\n\n\n# output_rj_cnes = get_path('GESTANTES', 'deslocamentos_rj_cnes.csv.gzip') # xlsx\n# df_deslc_rj_cnes.to_csv(output_rj_cnes)\n# pd.read_csv(output_rj_cnes).to_excel(output_rj_cnes.replace('csv.gzip', 'xlsx'), index=False)\n# # df_deslc_rj_cnes.to_pandas().to_excel(output_rj_cnes, index=False)\n\n\n\nSem CNES\n\n# df_deslc_rj = df_deslc_rj_cnes[:, f[:].remove(f.hosp_cnes)]\n# df_deslc_rj = df_deslc_rj[:, dt.sum(f.count), dt.by(df_deslc_rj.names[:-1])]\n# df_deslc_rj\n\n\n# output_rj = get_path('GESTANTES', 'deslocamentos_rj.csv.gzip') # xlsx\n# df_deslc_rj.to_csv(output_rj)\n# pd.read_csv(output_rj).to_excel(output_rj.replace('csv.gzip', 'xlsx'), index=False)\n# # df_deslc_rj.to_pandas().to_excel(output_rj, index=False)"
  },
  {
    "objectID": "sections/table_dists.html",
    "href": "sections/table_dists.html",
    "title": "Distâncias",
    "section": "",
    "text": "from utils import get_path, group_cols\nfrom datatable import dt, f"
  },
  {
    "objectID": "sections/table_dists.html#tabela-distâncias",
    "href": "sections/table_dists.html#tabela-distâncias",
    "title": "Distâncias",
    "section": "Tabela Distâncias",
    "text": "Tabela Distâncias\n\nColunas\n\n\nCarregando tabela\n\npath_dist = get_path('DISTANCIAS', 'distancias.jay')\ndf_dist = dt.fread(path_dist)\ndf_dist\n\n\n\n  \n  \n    origemdestinodistanciatempo\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    011000111000100\n    1110001110002309.056.16906\n    2110001110003399.56.28906\n    311000111000481.20111.91775\n    4110001110005391.7046.13636\n    5110001110006353.4175.53989\n    6110001110007313.5926.18117\n    7110001110008326.9835.34175\n    8110001110009145.6782.346\n    9110001110010649.54513.405\n    10110001110011214.1253.83481\n    11110001110012130.772.54781\n    12110001110013357.5117.13067\n    1311000111001460.21031.02275\n    14110001110015172.9263.18425\n    ⋮⋮⋮⋮⋮\n    31,024,895530010522200161.7292.356\n    31,024,896530010522205382.7095.47956\n    31,024,897530010522220161.6032.24894\n    31,024,898530010522230190.0013.21608\n    31,024,89953001053001000\n  \n  \n  \n    31,024,900 rows × 4 columns\n  \n\n\n\n\n\nConvertendo pra minutos\n\ndf_dist[:, dt.update(tempo = f.tempo * 60)]\ndf_dist\n\n\n\n  \n  \n    origemdestinodistanciatempo\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    011000111000100\n    1110001110002309.05370.143\n    2110001110003399.5377.343\n    311000111000481.2011115.065\n    4110001110005391.704368.182\n    5110001110006353.417332.393\n    6110001110007313.592370.87\n    7110001110008326.983320.505\n    8110001110009145.678140.76\n    9110001110010649.545804.3\n    10110001110011214.125230.088\n    11110001110012130.77152.868\n    12110001110013357.511427.84\n    1311000111001460.210361.365\n    14110001110015172.926191.055\n    ⋮⋮⋮⋮⋮\n    31,024,895530010522200161.729141.36\n    31,024,896530010522205382.709328.773\n    31,024,897530010522220161.603134.937\n    31,024,898530010522230190.001192.965\n    31,024,89953001053001000\n  \n  \n  \n    31,024,900 rows × 4 columns\n  \n\n\n\n\n\nRenomeando colunas\n\ndf_dist.names = {\n  'distancia': 'distancia (km)',\n  'tempo': 'tempo (min)'}\ndf_dist\n\n\n\n  \n  \n    origemdestinodistancia (km)tempo (min)\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    011000111000100\n    1110001110002309.05370.143\n    2110001110003399.5377.343\n    311000111000481.2011115.065\n    4110001110005391.704368.182\n    5110001110006353.417332.393\n    6110001110007313.592370.87\n    7110001110008326.983320.505\n    8110001110009145.678140.76\n    9110001110010649.545804.3\n    10110001110011214.125230.088\n    11110001110012130.77152.868\n    12110001110013357.511427.84\n    1311000111001460.210361.365\n    14110001110015172.926191.055\n    ⋮⋮⋮⋮⋮\n    31,024,895530010522200161.729141.36\n    31,024,896530010522205382.709328.773\n    31,024,897530010522220161.603134.937\n    31,024,898530010522230190.001192.965\n    31,024,89953001053001000\n  \n  \n  \n    31,024,900 rows × 4 columns"
  },
  {
    "objectID": "sections/table_dists.html#tabela-procedimentos",
    "href": "sections/table_dists.html#tabela-procedimentos",
    "title": "Distâncias",
    "section": "Tabela Procedimentos",
    "text": "Tabela Procedimentos\n\nColunas da tabela\n\ncols_sih = {\n  'cod_municipio': 'origem',\n  'hosp_cod_municipio': 'destino',\n}\n\n\n\nCarregando tabela\n\npath_sih = get_path('SIH', 'sih.jay')\ndf_sih = dt.fread(path_sih)\ndf_sih = df_sih[:, list(cols_sih)]\ndf_sih.names = cols_sih\ndf_sih\n\n\n\n  \n  \n    origemdestino\n    ▪▪▪▪▪▪▪▪\n  \n  \n    0120005120005\n    1120040120040\n    2120040120040\n    3120040120040\n    4120040120040\n    5120040120040\n    6120040120040\n    7120005120005\n    8120040120040\n    9120040120040\n    10120005120005\n    11120038120040\n    12120040120040\n    13120001120040\n    14120040120040\n    ⋮⋮⋮\n    17,106,396171840170930\n    17,106,397171670170930\n    17,106,398171670170930\n    17,106,399170930170930\n    17,106,400171250171610\n  \n  \n  \n    17,106,401 rows × 2 columns\n  \n\n\n\n\n\nTabela agrupada\n\ndf_sih = group_cols(df_sih, list(cols_sih.values()))\ndf_sih = df_sih.sort(-f.count)\ndf_sih\n\n\n\n  \n  \n    origemdestinocount\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    0355030355030789070\n    1330455330455358134\n    2130260130260296660\n    3530010530010288921\n    4230440230440196047\n    5292740292740165828\n    6310620310620123927\n    7150140150140120647\n    8431490431490104714\n    9410690410690100193\n    1027043027043093156\n    1152087052087088967\n    1235188035188088678\n    1322110022110085833\n    1450027050027084315\n    ⋮⋮⋮⋮\n    71,8335300105213081\n    71,8345300105217701\n    71,8355300105220001\n    71,8365300105220201\n    71,8375300105220451\n  \n  \n  \n    71,838 rows × 3 columns"
  },
  {
    "objectID": "sections/table_locs.html",
    "href": "sections/table_locs.html",
    "title": "Localidades",
    "section": "",
    "text": "from utils import get_path\nfrom datatable import dt, f as dtf, by, as_type"
  },
  {
    "objectID": "sections/table_locs.html#municípios",
    "href": "sections/table_locs.html#municípios",
    "title": "Localidades",
    "section": "Municípios",
    "text": "Municípios\n\nColunas da tabela\n\npath_munic = get_path('LOCALIDADES', 'municipios.csv.gzip')\ndf_munic = dt.fread(path_munic)\ndf_munic\n\n\n\n  \n  \n    cod_municipionome_municipiocapitalufcod_ufnome_ufregiaolatitudelongitude\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    0520005Abadia de Goiás0GO52GoiásCentro-Oeste−16.7573−49.4412\n    1310010Abadia dos Dourados0MG31Minas GeraisSudeste−18.4831−47.3916\n    2520010Abadiânia0GO52GoiásCentro-Oeste−16.197−48.7057\n    3310020Abaeté0MG31Minas GeraisSudeste−19.1551−45.4444\n    4150010Abaetetuba0PA15ParáNorte−1.72183−48.8788\n    5230010Abaiara0CE23CearáNordeste−7.34588−39.0416\n    6290010Abaíra0BA29BahiaNordeste−13.2488−41.6619\n    7290020Abaré0BA29BahiaNordeste−8.72073−39.1162\n    8410010Abatiá0PR41ParanáSul−23.3049−50.3133\n    9420005Abdon Batista0SC42Santa CatarinaSul−27.6126−51.0233\n    10150013Abel Figueiredo0PA15ParáNorte−4.95333−48.3933\n    11420010Abelardo Luz0SC42Santa CatarinaSul−26.5716−52.3229\n    12310030Abre Campo0MG31Minas GeraisSudeste−20.2996−42.4743\n    13260005Abreu e Lima0PE26PernambucoNordeste−7.90072−34.8984\n    14170025Abreulândia0TO17TocantinsNorte−9.62101−49.1518\n    ⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮\n    5565293360Xique-Xique0BA29BahiaNordeste−10.823−42.7245\n    5566251740Zabelê0PB25ParaíbaNordeste−8.07901−37.1057\n    5567355715Zacarias0SP35São PauloSudeste−21.0506−50.0552\n    5568211400Zé Doca0MA21MaranhãoNordeste−3.27014−45.6553\n    5569421985Zortéa0SC42Santa CatarinaSul−27.4521−51.552\n  \n  \n  \n    5570 rows × 9 columns"
  },
  {
    "objectID": "sections/table_locs.html#indicadores",
    "href": "sections/table_locs.html#indicadores",
    "title": "Localidades",
    "section": "Indicadores",
    "text": "Indicadores\n\nColunas da tabela\n\ncols_indc = {\n  'CÓDIGO': 'codigo',\n  'Tipo Localidade': 'tipo',\n  'CIR': 'nome_regiao_saude',\n  'Grupos de Regiões de Saúde segundo Condições Socioeconômicas e de Saúde - 2016': 'socioecon',\n  ...: None\n}\n\n\npath_indc = path_indc = get_path('INDICADORES', 'indicadores.csv.gzip')\ndf_indc = dt.fread(path_indc, columns=cols_indc)\ndf_indc = df_indc.to_pandas()\ndf_indc\n\n\n\n\n\n  \n    \n      \n      codigo\n      tipo\n      nome_regiao_saude\n      socioecon\n    \n  \n  \n    \n      0\n      15.001\n      REGSAU\n      Araguaia\n      1\n    \n    \n      1\n      15.002\n      REGSAU\n      Baixo Amazonas\n      1\n    \n    \n      2\n      15.003\n      REGSAU\n      Carajás\n      2\n    \n    \n      3\n      15.004\n      REGSAU\n      Lago de Tucuruí\n      1\n    \n    \n      4\n      15.013\n      REGSAU\n      Marajó I\n      1\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      6003\n      171.780\n      MUNIC\n      Sudeste\n      1\n    \n    \n      6004\n      171.800\n      MUNIC\n      Sudeste\n      1\n    \n    \n      6005\n      171.865\n      MUNIC\n      Sudeste\n      1\n    \n    \n      6006\n      172.090\n      MUNIC\n      Sudeste\n      1\n    \n    \n      6007\n      172.093\n      MUNIC\n      Sudeste\n      1\n    \n  \n\n6008 rows × 4 columns\n\n\n\n\n\nIndicadores por município\n\ndf_mun = df_indc.loc[df_indc['tipo'] == 'MUNIC'].copy()\ndf_mun.drop(columns=['tipo'], inplace=True)\ndf_mun['codigo'] = df_mun['codigo'].apply(lambda x: (str(x).replace('.', '') + '00')[:6])\ndf_mun['prefix'] = df_mun['codigo'].apply(lambda x: str(x)[:2])\ndf_mun = df_mun.rename(columns={'codigo': 'cod_municipio'})\ndf_mun\n\n\n\n\n\n  \n    \n      \n      cod_municipio\n      nome_regiao_saude\n      socioecon\n      prefix\n    \n  \n  \n    \n      13\n      310600\n      João Monlevade\n      3\n      31\n    \n    \n      14\n      313620\n      João Monlevade\n      3\n      31\n    \n    \n      15\n      314470\n      João Monlevade\n      3\n      31\n    \n    \n      16\n      315570\n      João Monlevade\n      3\n      31\n    \n    \n      17\n      316100\n      João Monlevade\n      3\n      31\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      6003\n      171780\n      Sudeste\n      1\n      17\n    \n    \n      6004\n      171800\n      Sudeste\n      1\n      17\n    \n    \n      6005\n      171865\n      Sudeste\n      1\n      17\n    \n    \n      6006\n      172090\n      Sudeste\n      1\n      17\n    \n    \n      6007\n      172093\n      Sudeste\n      1\n      17\n    \n  \n\n5570 rows × 4 columns\n\n\n\n\n\nIndicadores por Região de Saúde\n\ndf_regsau = df_indc[df_indc['tipo'] == 'REGSAU'].copy()\ndf_regsau.drop(columns=['tipo', 'socioecon'], inplace=True)\ndf_regsau['codigo'] = df_regsau['codigo'].apply(lambda x: (str(x).replace('.', '') + '0')[:5])\ndf_regsau['prefix'] = df_regsau['codigo'].apply(lambda x: str(x)[:2])\ndf_regsau = df_regsau.rename(columns={'codigo': 'cod_regiao_saude'})\ndf_regsau\n\n\n\n\n\n  \n    \n      \n      cod_regiao_saude\n      nome_regiao_saude\n      prefix\n    \n  \n  \n    \n      0\n      15001\n      Araguaia\n      15\n    \n    \n      1\n      15002\n      Baixo Amazonas\n      15\n    \n    \n      2\n      15003\n      Carajás\n      15\n    \n    \n      3\n      15004\n      Lago de Tucuruí\n      15\n    \n    \n      4\n      15013\n      Marajó I\n      15\n    \n    \n      ...\n      ...\n      ...\n      ...\n    \n    \n      5431\n      17001\n      Médio Norte Araguaia\n      17\n    \n    \n      5432\n      28005\n      Nossa Senhora da Glória\n      28\n    \n    \n      5433\n      28006\n      Nossa Senhora do Socorro\n      28\n    \n    \n      5434\n      28007\n      Propriá\n      28\n    \n    \n      5435\n      17003\n      Sudeste\n      17\n    \n  \n\n438 rows × 3 columns\n\n\n\n\n\nMerge\n\ndf_indc = df_mun.merge(df_regsau, how='left', left_on=['prefix', 'nome_regiao_saude'], right_on=['prefix', 'nome_regiao_saude'])\ndf_indc = dt.Frame(df_indc)\ndf_indc[:, 'cod_municipio'] = df_indc[:, dt.as_type(dtf.cod_municipio, int)]\ndf_indc\n\n\n\n  \n  \n    cod_municipionome_regiao_saudesocioeconprefixcod_regiao_saude\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    0310600João Monlevade33131035\n    1313620João Monlevade33131035\n    2314470João Monlevade33131035\n    3315570João Monlevade33131035\n    4316100João Monlevade33131035\n    5310855João Pinheiro23131036\n    6313630João Pinheiro23131036\n    7313753João Pinheiro23131036\n    8310280Juiz de Fora Lima Duarte Bom Jardim Min53131037\n    9310360Juiz de Fora Lima Duarte Bom Jardim Min53131037\n    10310610Juiz de Fora Lima Duarte Bom Jardim Min53131037\n    11310680Juiz de Fora Lima Duarte Bom Jardim Min53131037\n    12310720Juiz de Fora Lima Duarte Bom Jardim Min53131037\n    13310750Juiz de Fora Lima Duarte Bom Jardim Min53131037\n    14311590Juiz de Fora Lima Duarte Bom Jardim Min53131037\n    ⋮⋮⋮⋮⋮⋮\n    5565171780Sudeste11717003\n    5566171800Sudeste11717003\n    5567171865Sudeste11717003\n    5568172090Sudeste11717003\n    5569172093Sudeste11717003\n  \n  \n  \n    5570 rows × 5 columns"
  },
  {
    "objectID": "sections/table_locs.html#juntando-com-outras",
    "href": "sections/table_locs.html#juntando-com-outras",
    "title": "Localidades",
    "section": "Juntando com outras",
    "text": "Juntando com outras\n\nJuntando com Indicadores\n\ndf_indc.key = 'cod_municipio'\ndf_locs = df_munic[:, :, dt.join(df_indc)]\ndf_locs\n\n\n\n  \n  \n    cod_municipionome_municipiocapitalufcod_ufnome_ufregiaolatitudelongitudenome_regiao_saudesocioeconprefixcod_regiao_saude\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    0520005Abadia de Goiás0GO52GoiásCentro-Oeste−16.7573−49.4412Central55252001\n    1310010Abadia dos Dourados0MG31Minas GeraisSudeste−18.4831−47.3916Patrocínio Monte Carmelo23131052\n    2520010Abadiânia0GO52GoiásCentro-Oeste−16.197−48.7057Pirineus35252011\n    3310020Abaeté0MG31Minas GeraisSudeste−19.1551−45.4444Sete Lagoas33131067\n    4150010Abaetetuba0PA15ParáNorte−1.72183−48.8788Tocantins11515011\n    5230010Abaiara0CE23CearáNordeste−7.34588−39.041619ª Região Brejo Santo12323019\n    6290010Abaíra0BA29BahiaNordeste−13.2488−41.6619Seabra12929023\n    7290020Abaré0BA29BahiaNordeste−8.72073−39.1162Paulo Afonso12929017\n    8410010Abatiá0PR41ParanáSul−23.3049−50.313318ª RS Cornélio Procópio34141018\n    9420005Abdon Batista0SC42Santa CatarinaSul−27.6126−51.0233Meio Oeste34242008\n    10150013Abel Figueiredo0PA15ParáNorte−4.95333−48.3933Carajás21515003\n    11420010Abelardo Luz0SC42Santa CatarinaSul−26.5716−52.3229Xanxerê34242003\n    12310030Abre Campo0MG31Minas GeraisSudeste−20.2996−42.4743Manhuaçu13131041\n    13260005Abreu e Lima0PE26PernambucoNordeste−7.90072−34.8984Recife52626010\n    14170025Abreulândia0TO17TocantinsNorte−9.62101−49.1518Cantão21717007\n    ⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮\n    5565293360Xique-Xique0BA29BahiaNordeste−10.823−42.7245Irecê12929010\n    5566251740Zabelê0PB25ParaíbaNordeste−8.07901−37.10575ª Região12525005\n    5567355715Zacarias0SP35São PauloSudeste−21.0506−50.0552José Bonifácio33535156\n    5568211400Zé Doca0MA21MaranhãoNordeste−3.27014−45.6553Zé Doca12121019\n    5569421985Zortéa0SC42Santa CatarinaSul−27.4521−51.552Meio Oeste34242008\n  \n  \n  \n    5570 rows × 13 columns"
  },
  {
    "objectID": "sections/table_locs.html#sigla-região",
    "href": "sections/table_locs.html#sigla-região",
    "title": "Localidades",
    "section": "Sigla Região",
    "text": "Sigla Região\n\nsigla_regioes = {\n  'Norte': 'NT',\n  'Nordeste': 'ND',\n  'Centro-Oeste': 'CO',\n  'Sudeste': 'SD',\n  'Sul': 'SL',\n}\n\n\nsiglas_regs = df_locs[:, 'regiao'].to_pandas()['regiao'].map(sigla_regioes)\ndf_locs[:, 'sigla_regiao'] = siglas_regs\ndf_locs\n\n\n\n  \n  \n    cod_municipionome_municipiocapitalufcod_ufnome_ufregiaolatitudelongitudenome_regiao_saudesocioeconprefixcod_regiao_saudesigla_regiao\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    0520005Abadia de Goiás0GO52GoiásCentro-Oeste−16.7573−49.4412Central55252001CO\n    1310010Abadia dos Dourados0MG31Minas GeraisSudeste−18.4831−47.3916Patrocínio Monte Carmelo23131052SD\n    2520010Abadiânia0GO52GoiásCentro-Oeste−16.197−48.7057Pirineus35252011CO\n    3310020Abaeté0MG31Minas GeraisSudeste−19.1551−45.4444Sete Lagoas33131067SD\n    4150010Abaetetuba0PA15ParáNorte−1.72183−48.8788Tocantins11515011NT\n    5230010Abaiara0CE23CearáNordeste−7.34588−39.041619ª Região Brejo Santo12323019ND\n    6290010Abaíra0BA29BahiaNordeste−13.2488−41.6619Seabra12929023ND\n    7290020Abaré0BA29BahiaNordeste−8.72073−39.1162Paulo Afonso12929017ND\n    8410010Abatiá0PR41ParanáSul−23.3049−50.313318ª RS Cornélio Procópio34141018SL\n    9420005Abdon Batista0SC42Santa CatarinaSul−27.6126−51.0233Meio Oeste34242008SL\n    10150013Abel Figueiredo0PA15ParáNorte−4.95333−48.3933Carajás21515003NT\n    11420010Abelardo Luz0SC42Santa CatarinaSul−26.5716−52.3229Xanxerê34242003SL\n    12310030Abre Campo0MG31Minas GeraisSudeste−20.2996−42.4743Manhuaçu13131041SD\n    13260005Abreu e Lima0PE26PernambucoNordeste−7.90072−34.8984Recife52626010ND\n    14170025Abreulândia0TO17TocantinsNorte−9.62101−49.1518Cantão21717007NT\n    ⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮\n    5565293360Xique-Xique0BA29BahiaNordeste−10.823−42.7245Irecê12929010ND\n    5566251740Zabelê0PB25ParaíbaNordeste−8.07901−37.10575ª Região12525005ND\n    5567355715Zacarias0SP35São PauloSudeste−21.0506−50.0552José Bonifácio33535156SD\n    5568211400Zé Doca0MA21MaranhãoNordeste−3.27014−45.6553Zé Doca12121019ND\n    5569421985Zortéa0SC42Santa CatarinaSul−27.4521−51.552Meio Oeste34242008SL\n  \n  \n  \n    5570 rows × 14 columns"
  },
  {
    "objectID": "sections/table_locs.html#criando-código-concatenado",
    "href": "sections/table_locs.html#criando-código-concatenado",
    "title": "Localidades",
    "section": "Criando código concatenado",
    "text": "Criando código concatenado\n\ncodigos = list()\ndf_locs_pd = df_locs.to_pandas()\nfor i, row in df_locs_pd.iterrows():\n  codigo = f\"{row['sigla_regiao']}/{row['uf']}/{row['cod_regiao_saude']}/{row['cod_municipio']}\"\n  codigos.append(codigo)\ndf_locs_pd['codigo'] = codigos\ndf_locs = dt.Frame(df_locs_pd)\ndf_locs\n\n\n\n  \n  \n    cod_municipionome_municipiocapitalufcod_ufnome_ufregiaolatitudelongitudenome_regiao_saudesocioeconprefixcod_regiao_saudesigla_regiaocodigo\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    0520005Abadia de Goiás0GO52GoiásCentro-Oeste−16.7573−49.4412Central55252001COCO/GO/52001/520005\n    1310010Abadia dos Dourados0MG31Minas GeraisSudeste−18.4831−47.3916Patrocínio Monte Carmelo23131052SDSD/MG/31052/310010\n    2520010Abadiânia0GO52GoiásCentro-Oeste−16.197−48.7057Pirineus35252011COCO/GO/52011/520010\n    3310020Abaeté0MG31Minas GeraisSudeste−19.1551−45.4444Sete Lagoas33131067SDSD/MG/31067/310020\n    4150010Abaetetuba0PA15ParáNorte−1.72183−48.8788Tocantins11515011NTNT/PA/15011/150010\n    5230010Abaiara0CE23CearáNordeste−7.34588−39.041619ª Região Brejo Santo12323019NDND/CE/23019/230010\n    6290010Abaíra0BA29BahiaNordeste−13.2488−41.6619Seabra12929023NDND/BA/29023/290010\n    7290020Abaré0BA29BahiaNordeste−8.72073−39.1162Paulo Afonso12929017NDND/BA/29017/290020\n    8410010Abatiá0PR41ParanáSul−23.3049−50.313318ª RS Cornélio Procópio34141018SLSL/PR/41018/410010\n    9420005Abdon Batista0SC42Santa CatarinaSul−27.6126−51.0233Meio Oeste34242008SLSL/SC/42008/420005\n    10150013Abel Figueiredo0PA15ParáNorte−4.95333−48.3933Carajás21515003NTNT/PA/15003/150013\n    11420010Abelardo Luz0SC42Santa CatarinaSul−26.5716−52.3229Xanxerê34242003SLSL/SC/42003/420010\n    12310030Abre Campo0MG31Minas GeraisSudeste−20.2996−42.4743Manhuaçu13131041SDSD/MG/31041/310030\n    13260005Abreu e Lima0PE26PernambucoNordeste−7.90072−34.8984Recife52626010NDND/PE/26010/260005\n    14170025Abreulândia0TO17TocantinsNorte−9.62101−49.1518Cantão21717007NTNT/TO/17007/170025\n    ⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮\n    5565293360Xique-Xique0BA29BahiaNordeste−10.823−42.7245Irecê12929010NDND/BA/29010/293360\n    5566251740Zabelê0PB25ParaíbaNordeste−8.07901−37.10575ª Região12525005NDND/PB/25005/251740\n    5567355715Zacarias0SP35São PauloSudeste−21.0506−50.0552José Bonifácio33535156SDSD/SP/35156/355715\n    5568211400Zé Doca0MA21MaranhãoNordeste−3.27014−45.6553Zé Doca12121019NDND/MA/21019/211400\n    5569421985Zortéa0SC42Santa CatarinaSul−27.4521−51.552Meio Oeste34242008SLSL/SC/42008/421985\n  \n  \n  \n    5570 rows × 15 columns"
  },
  {
    "objectID": "sections/table_locs.html#ajustando-colunas",
    "href": "sections/table_locs.html#ajustando-colunas",
    "title": "Localidades",
    "section": "Ajustando colunas",
    "text": "Ajustando colunas\n\ncols_order = [\n  'codigo',\n  'cod_municipio',\n  'nome_municipio',\n  'capital',\n  'cod_regiao_saude',\n  'nome_regiao_saude',\n  'cod_uf',\n  'uf',\n  'nome_uf',\n  'regiao',\n  'socioecon',\n  'latitude',\n  'longitude',\n]\n\n\ndf_locs = df_locs[:, cols_order]\ndf_locs\n\n\n\n  \n  \n    codigocod_municipionome_municipiocapitalcod_regiao_saudenome_regiao_saudecod_ufufnome_ufregiaosocioeconlatitudelongitude\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    0CO/GO/52001/520005520005Abadia de Goiás052001Central52GOGoiásCentro-Oeste5−16.7573−49.4412\n    1SD/MG/31052/310010310010Abadia dos Dourados031052Patrocínio Monte Carmelo31MGMinas GeraisSudeste2−18.4831−47.3916\n    2CO/GO/52011/520010520010Abadiânia052011Pirineus52GOGoiásCentro-Oeste3−16.197−48.7057\n    3SD/MG/31067/310020310020Abaeté031067Sete Lagoas31MGMinas GeraisSudeste3−19.1551−45.4444\n    4NT/PA/15011/150010150010Abaetetuba015011Tocantins15PAParáNorte1−1.72183−48.8788\n    5ND/CE/23019/230010230010Abaiara02301919ª Região Brejo Santo23CECearáNordeste1−7.34588−39.0416\n    6ND/BA/29023/290010290010Abaíra029023Seabra29BABahiaNordeste1−13.2488−41.6619\n    7ND/BA/29017/290020290020Abaré029017Paulo Afonso29BABahiaNordeste1−8.72073−39.1162\n    8SL/PR/41018/410010410010Abatiá04101818ª RS Cornélio Procópio41PRParanáSul3−23.3049−50.3133\n    9SL/SC/42008/420005420005Abdon Batista042008Meio Oeste42SCSanta CatarinaSul3−27.6126−51.0233\n    10NT/PA/15003/150013150013Abel Figueiredo015003Carajás15PAParáNorte2−4.95333−48.3933\n    11SL/SC/42003/420010420010Abelardo Luz042003Xanxerê42SCSanta CatarinaSul3−26.5716−52.3229\n    12SD/MG/31041/310030310030Abre Campo031041Manhuaçu31MGMinas GeraisSudeste1−20.2996−42.4743\n    13ND/PE/26010/260005260005Abreu e Lima026010Recife26PEPernambucoNordeste5−7.90072−34.8984\n    14NT/TO/17007/170025170025Abreulândia017007Cantão17TOTocantinsNorte2−9.62101−49.1518\n    ⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮\n    5565ND/BA/29010/293360293360Xique-Xique029010Irecê29BABahiaNordeste1−10.823−42.7245\n    5566ND/PB/25005/251740251740Zabelê0250055ª Região25PBParaíbaNordeste1−8.07901−37.1057\n    5567SD/SP/35156/355715355715Zacarias035156José Bonifácio35SPSão PauloSudeste3−21.0506−50.0552\n    5568ND/MA/21019/211400211400Zé Doca021019Zé Doca21MAMaranhãoNordeste1−3.27014−45.6553\n    5569SL/SC/42008/421985421985Zortéa042008Meio Oeste42SCSanta CatarinaSul3−27.4521−51.552\n  \n  \n  \n    5570 rows × 13 columns"
  },
  {
    "objectID": "sections/table_procs.html",
    "href": "sections/table_procs.html",
    "title": "Procedimentos",
    "section": "",
    "text": "from utils import get_path, group_cols\nfrom datatable import dt, f, by, as_type"
  },
  {
    "objectID": "sections/table_procs.html#localidades",
    "href": "sections/table_procs.html#localidades",
    "title": "Procedimentos",
    "section": "Localidades",
    "text": "Localidades\n\npath_locs = get_path('LOCALIDADES', 'localidades.csv.gzip')\ndf_locs = dt.fread(path_locs)\ndf_locs\n\n\n\n  \n  \n    codigocod_municipionome_municipiocapitalcod_regiao_saudenome_regiao_saudecod_ufufnome_ufregiaosocioeconlatitudelongitude\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    0CO/GO/52001/520005520005Abadia de Goiás052001Central52GOGoiásCentro-Oeste5−16.7573−49.4412\n    1SD/MG/31052/310010310010Abadia dos Dourados031052Patrocínio Monte Carmelo31MGMinas GeraisSudeste2−18.4831−47.3916\n    2CO/GO/52011/520010520010Abadiânia052011Pirineus52GOGoiásCentro-Oeste3−16.197−48.7057\n    3SD/MG/31067/310020310020Abaeté031067Sete Lagoas31MGMinas GeraisSudeste3−19.1551−45.4444\n    4NT/PA/15011/150010150010Abaetetuba015011Tocantins15PAParáNorte1−1.72183−48.8788\n    5ND/CE/23019/230010230010Abaiara02301919ª Região Brejo Santo23CECearáNordeste1−7.34588−39.0416\n    6ND/BA/29023/290010290010Abaíra029023Seabra29BABahiaNordeste1−13.2488−41.6619\n    7ND/BA/29017/290020290020Abaré029017Paulo Afonso29BABahiaNordeste1−8.72073−39.1162\n    8SL/PR/41018/410010410010Abatiá04101818ª RS Cornélio Procópio41PRParanáSul3−23.3049−50.3133\n    9SL/SC/42008/420005420005Abdon Batista042008Meio Oeste42SCSanta CatarinaSul3−27.6126−51.0233\n    10NT/PA/15003/150013150013Abel Figueiredo015003Carajás15PAParáNorte2−4.95333−48.3933\n    11SL/SC/42003/420010420010Abelardo Luz042003Xanxerê42SCSanta CatarinaSul3−26.5716−52.3229\n    12SD/MG/31041/310030310030Abre Campo031041Manhuaçu31MGMinas GeraisSudeste1−20.2996−42.4743\n    13ND/PE/26010/260005260005Abreu e Lima026010Recife26PEPernambucoNordeste5−7.90072−34.8984\n    14NT/TO/17007/170025170025Abreulândia017007Cantão17TOTocantinsNorte2−9.62101−49.1518\n    ⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮\n    5565ND/BA/29010/293360293360Xique-Xique029010Irecê29BABahiaNordeste1−10.823−42.7245\n    5566ND/PB/25005/251740251740Zabelê0250055ª Região25PBParaíbaNordeste1−8.07901−37.1057\n    5567SD/SP/35156/355715355715Zacarias035156José Bonifácio35SPSão PauloSudeste3−21.0506−50.0552\n    5568ND/MA/21019/211400211400Zé Doca021019Zé Doca21MAMaranhãoNordeste1−3.27014−45.6553\n    5569SL/SC/42008/421985421985Zortéa042008Meio Oeste42SCSanta CatarinaSul3−27.4521−51.552\n  \n  \n  \n    5570 rows × 13 columns"
  },
  {
    "objectID": "sections/table_procs.html#distâncias",
    "href": "sections/table_procs.html#distâncias",
    "title": "Procedimentos",
    "section": "Distâncias",
    "text": "Distâncias\n\ncols_dist = {\n  'origem': 'cod_municipio',\n  'destino': 'hosp_cod_municipio',\n  'distancia (km)': 'distancia (km)',\n  'tempo (min)': 'tempo (min)',\n  ...: None,\n}\n\n\npath_dist = get_path('DISTANCIAS', 'distancias.csv.gzip')\ndf_dist = dt.fread(path_dist, columns=cols_dist)\ndf_dist\n\n\n\n  \n  \n    cod_municipiohosp_cod_municipiodistancia (km)tempo (min)\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    035503035503000\n    133045533045500\n    213026013026000\n    353001053001000\n    423044023044000\n    529274029274000\n    631062031062000\n    715014015014000\n    843149043149000\n    941069041069000\n    1027043027043000\n    1152087052087000\n    1235188035188000\n    1322110022110000\n    1450027050027000\n    ⋮⋮⋮⋮⋮\n    71,833530010521308376.351360.035\n    71,834530010521770328.373283.283\n    71,835530010522000153.655146.227\n    71,836530010522020515.668411.118\n    71,837530010522045207.413183.168\n  \n  \n  \n    71,838 rows × 4 columns"
  },
  {
    "objectID": "sections/table_procs.html#sih",
    "href": "sections/table_procs.html#sih",
    "title": "Procedimentos",
    "section": "SIH",
    "text": "SIH\n\nColunas da tabela\n\ncols_proc = [\n  'ano',\n  'parto_normal',\n  'cod_municipio',\n  'hosp_cod_municipio',\n  'cnes',\n]\n\n\npath_sih = get_path('SIH', 'sih.jay')\ndf_proc = dt.fread(path_sih)\ndf_proc = df_proc[:, cols_proc]\ndf_proc\n\n\n\n  \n  \n    anoparto_normalcod_municipiohosp_cod_municipiocnes\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    020103100100391200051200052001020\n    120103100100391200401200402000733\n    220103100100391200401200402000733\n    320103100100391200401200402000733\n    420103100100391200401200402000733\n    520103100100391200401200402000733\n    620103100100391200401200402000733\n    720103100100391200051200052001020\n    820103100100391200401200402000733\n    920103100100391200401200402000733\n    1020103100100391200051200052001020\n    1120103100100391200381200402000733\n    1220103100100391200401200402000733\n    1320103100100391200011200402000733\n    1420103100100391200401200402000733\n    ⋮⋮⋮⋮⋮⋮\n    17,106,39620194110100341718401709302765640\n    17,106,39720194110100341716701709302765640\n    17,106,39820194110100341716701709302765640\n    17,106,39920194110100341709301709302765640\n    17,106,40020194110100341712501716102755149\n  \n  \n  \n    17,106,401 rows × 5 columns\n  \n\n\n\n\n\nTabela agrupada\n\ndf_proc = group_cols(df_proc, cols_proc)\ndf_proc\n\n\n\n  \n  \n    anoparto_normalcod_municipiohosp_cod_municipiocnescount\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    020103100100391100011100012679477141\n    1201031001003911000111000224942991\n    2201031001003911000111001328086172\n    3201031001003911000111002040013032\n    4201031001003911000111002824952289\n    520103100100391100021100022494299507\n    6201031001003911000211001128086095\n    7201031001003911000211001224952791\n    8201031001003911000211002039704421\n    9201031001003911000211002040013035\n    10201031001003911000235111020893271\n    11201031001003911000311000328085286\n    12201031001003911000311000628085441\n    13201031001003911000311003027984844\n    1420103100100391100041100042496046359\n    ⋮⋮⋮⋮⋮⋮⋮\n    461,8472019411010034530010530010105371015\n    461,848201941101003453001053001010545323\n    461,849201941101003453001053001026451571162\n    461,850201941101003453001053001026721971087\n    461,85120194110100345300105300105717515839\n  \n  \n  \n    461,852 rows × 6 columns\n  \n\n\n\n\n\nAtualizando variável parto normal\n\n# {310010039: 'normal', 411010034: 'cesariano'}\ndf_proc[:, dt.update(parto_normal = f.parto_normal == 310010039)]\ndf_proc\n\n\n\n  \n  \n    anoparto_normalcod_municipiohosp_cod_municipiocnescount\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    0201011100011100012679477141\n    12010111000111000224942991\n    22010111000111001328086172\n    32010111000111002040013032\n    42010111000111002824952289\n    5201011100021100022494299507\n    62010111000211001128086095\n    72010111000211001224952791\n    82010111000211002039704421\n    92010111000211002040013035\n    102010111000235111020893271\n    112010111000311000328085286\n    122010111000311000628085441\n    132010111000311003027984844\n    14201011100041100042496046359\n    ⋮⋮⋮⋮⋮⋮⋮\n    461,84720190530010530010105371015\n    461,8482019053001053001010545323\n    461,8492019053001053001026451571162\n    461,8502019053001053001026721971087\n    461,851201905300105300105717515839\n  \n  \n  \n    461,852 rows × 6 columns\n  \n\n\n\n\n\nOrdenando linhas\n\ndf_proc = df_proc.sort(\n  f.ano, f.parto_normal, f.cod_municipio, f.hosp_cod_municipio, f.cnes)\ndf_proc\n\n\n\n  \n  \n    anoparto_normalcod_municipiohosp_cod_municipiocnescount\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    020100110001110001267947749\n    12010011000111001224952792\n    22010011000111001328086171\n    32010011000111001824965341\n    42010011000111002824952284\n    52010011000135111020893271\n    6201001100021100022494299375\n    72010011000211001128086094\n    82010011000211002040013031\n    920100110003110003280852851\n    10201001100041100042496046199\n    112010011000411001224952792\n    122010011000411001824965341\n    132010011000411002040013032\n    142010011000411002824952282\n    ⋮⋮⋮⋮⋮⋮⋮\n    461,8472019153001053001010545479\n    461,8482019153001053001026451571373\n    461,8492019153001053001026503555\n    461,8502019153001053001026721972483\n    461,8512019153001053001057175151086\n  \n  \n  \n    461,852 rows × 6 columns"
  },
  {
    "objectID": "sections/table_procs.html#colunas-origem-destino",
    "href": "sections/table_procs.html#colunas-origem-destino",
    "title": "Procedimentos",
    "section": "Colunas origem & destino",
    "text": "Colunas origem & destino\n\ndef add_info_cols(df, cols, ref):\n  df_codes = df[:, cols]\n  col_key = cols[0]\n  if ref == 'destino':\n    col_key = 'hosp_' + col_key\n    df_codes.names = {cols[0]: col_key}\n  df_codes.names = {c: f'{ref}_{c}' for c in cols[2:]}\n  df_codes.names = {cols[1]: ref}\n  df_codes.key = col_key\n  return df_codes\n\n\ncols = ['cod_municipio', 'codigo', 'socioecon', 'capital', 'latitude', 'longitude']\ndf_origem = add_info_cols(df_locs, cols, 'origem')\ndf_destino = add_info_cols(df_locs, cols, 'destino')\ndf_proc = df_proc[:, :, dt.join(df_origem)]\ndf_proc = df_proc[:, :, dt.join(df_destino)]\ndf_proc\n\n\n\n  \n  \n    anoparto_normalcod_municipiohosp_cod_municipiocnescountorigemorigem_socioeconorigem_capitalorigem_latitude…destinodestino_socioecondestino_capitaldestino_latitudedestino_longitude\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    020100110001110001267947749NT/RO/11005/11000110−11.9283…NT/RO/11005/11000110−11.9283−61.9953\n    12010011000111001224952792NT/RO/11005/11000110−11.9283…NT/RO/11003/11001220−10.8777−61.9322\n    22010011000111001328086171NT/RO/11005/11000110−11.9283…NT/RO/11001/11001310−9.44363−61.9818\n    32010011000111001824965341NT/RO/11005/11000110−11.9283…NT/RO/11002/11001830−11.672−61.198\n    42010011000111002824952284NT/RO/11005/11000110−11.9283…NT/RO/11005/11002810−11.7271−61.7714\n    52010011000135111020893271NT/RO/11005/11000110−11.9283…SD/SP/35151/35111030−21.1314−48.977\n    6201001100021100022494299375NT/RO/11001/11000210−9.90571…NT/RO/11001/11000210−9.90571−63.0325\n    72010011000211001128086094NT/RO/11001/11000210−9.90571…NT/RO/11003/11001120−10.4318−62.4788\n    82010011000211002040013031NT/RO/11001/11000210−9.90571…NT/RO/11004/11002031−8.76077−63.8999\n    920100110003110003280852851NT/RO/11006/11000320−13.4945…NT/RO/11006/11000320−13.4945−60.552\n    10201001100041100042496046199NT/RO/11002/11000430−11.4343…NT/RO/11002/11000430−11.4343−61.4562\n    112010011000411001224952792NT/RO/11002/11000430−11.4343…NT/RO/11003/11001220−10.8777−61.9322\n    122010011000411001824965341NT/RO/11002/11000430−11.4343…NT/RO/11002/11001830−11.672−61.198\n    132010011000411002040013032NT/RO/11002/11000430−11.4343…NT/RO/11004/11002031−8.76077−63.8999\n    142010011000411002824952282NT/RO/11002/11000430−11.4343…NT/RO/11005/11002810−11.7271−61.7714\n    ⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋱⋮⋮⋮⋮⋮\n    461,8472019153001053001010545479CO/DF/53001/53001051−15.7795…CO/DF/53001/53001051−15.7795−47.9297\n    461,8482019153001053001026451571373CO/DF/53001/53001051−15.7795…CO/DF/53001/53001051−15.7795−47.9297\n    461,8492019153001053001026503555CO/DF/53001/53001051−15.7795…CO/DF/53001/53001051−15.7795−47.9297\n    461,8502019153001053001026721972483CO/DF/53001/53001051−15.7795…CO/DF/53001/53001051−15.7795−47.9297\n    461,8512019153001053001057175151086CO/DF/53001/53001051−15.7795…CO/DF/53001/53001051−15.7795−47.9297\n  \n  \n  \n    461,852 rows × 16 columns"
  },
  {
    "objectID": "sections/table_procs.html#cnes-concatenado-ao-destino",
    "href": "sections/table_procs.html#cnes-concatenado-ao-destino",
    "title": "Procedimentos",
    "section": "CNES concatenado ao destino",
    "text": "CNES concatenado ao destino\n\ndf_proc['cnes'] = df_proc[:, as_type(f.cnes, str)]\ndf_proc[:, dt.update(cnes= ('0000000' + f.cnes)[-7:])]\ndf_proc[:, dt.update(destino=f.destino + '/' + f.cnes)]\ndf_proc\n\n\n\n  \n  \n    anoparto_normalcod_municipiohosp_cod_municipiocnescountorigemorigem_socioeconorigem_capitalorigem_latitude…destinodestino_socioecondestino_capitaldestino_latitudedestino_longitude\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    020100110001110001267947749NT/RO/11005/11000110−11.9283…NT/RO/11005/110001/267947710−11.9283−61.9953\n    12010011000111001224952792NT/RO/11005/11000110−11.9283…NT/RO/11003/110012/249527920−10.8777−61.9322\n    22010011000111001328086171NT/RO/11005/11000110−11.9283…NT/RO/11001/110013/280861710−9.44363−61.9818\n    32010011000111001824965341NT/RO/11005/11000110−11.9283…NT/RO/11002/110018/249653430−11.672−61.198\n    42010011000111002824952284NT/RO/11005/11000110−11.9283…NT/RO/11005/110028/249522810−11.7271−61.7714\n    52010011000135111020893271NT/RO/11005/11000110−11.9283…SD/SP/35151/351110/208932730−21.1314−48.977\n    6201001100021100022494299375NT/RO/11001/11000210−9.90571…NT/RO/11001/110002/249429910−9.90571−63.0325\n    72010011000211001128086094NT/RO/11001/11000210−9.90571…NT/RO/11003/110011/280860920−10.4318−62.4788\n    82010011000211002040013031NT/RO/11001/11000210−9.90571…NT/RO/11004/110020/400130331−8.76077−63.8999\n    920100110003110003280852851NT/RO/11006/11000320−13.4945…NT/RO/11006/110003/280852820−13.4945−60.552\n    10201001100041100042496046199NT/RO/11002/11000430−11.4343…NT/RO/11002/110004/249604630−11.4343−61.4562\n    112010011000411001224952792NT/RO/11002/11000430−11.4343…NT/RO/11003/110012/249527920−10.8777−61.9322\n    122010011000411001824965341NT/RO/11002/11000430−11.4343…NT/RO/11002/110018/249653430−11.672−61.198\n    132010011000411002040013032NT/RO/11002/11000430−11.4343…NT/RO/11004/110020/400130331−8.76077−63.8999\n    142010011000411002824952282NT/RO/11002/11000430−11.4343…NT/RO/11005/110028/249522810−11.7271−61.7714\n    ⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋱⋮⋮⋮⋮⋮\n    461,847201915300105300100010545479CO/DF/53001/53001051−15.7795…CO/DF/53001/530010/001054551−15.7795−47.9297\n    461,8482019153001053001026451571373CO/DF/53001/53001051−15.7795…CO/DF/53001/530010/264515751−15.7795−47.9297\n    461,8492019153001053001026503555CO/DF/53001/53001051−15.7795…CO/DF/53001/530010/265035551−15.7795−47.9297\n    461,8502019153001053001026721972483CO/DF/53001/53001051−15.7795…CO/DF/53001/530010/267219751−15.7795−47.9297\n    461,8512019153001053001057175151086CO/DF/53001/53001051−15.7795…CO/DF/53001/530010/571751551−15.7795−47.9297\n  \n  \n  \n    461,852 rows × 16 columns"
  },
  {
    "objectID": "sections/table_procs.html#colunas-de-distância-e-tempo",
    "href": "sections/table_procs.html#colunas-de-distância-e-tempo",
    "title": "Procedimentos",
    "section": "Colunas de distância e tempo",
    "text": "Colunas de distância e tempo\n\ndf_dist.key = ['cod_municipio', 'hosp_cod_municipio']\ndf_proc = df_proc[:, :, dt.join(df_dist)]\ndf_proc\n\n\n\n  \n  \n    anoparto_normalcod_municipiohosp_cod_municipiocnescountorigemorigem_socioeconorigem_capitalorigem_latitude…destino_capitaldestino_latitudedestino_longitudedistancia (km)tempo (min)\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    020100110001110001267947749NT/RO/11005/11000110−11.9283…0−11.9283−61.995300\n    12010011000111001224952792NT/RO/11005/11000110−11.9283…0−10.8777−61.9322130.77152.868\n    22010011000111001328086171NT/RO/11005/11000110−11.9283…0−9.44363−61.9818357.511427.84\n    32010011000111001824965341NT/RO/11005/11000110−11.9283…0−11.672−61.198114.061112.283\n    42010011000111002824952284NT/RO/11005/11000110−11.9283…0−11.7271−61.771448.609950.14\n    52010011000135111020893271NT/RO/11005/11000110−11.9283…0−21.1314−48.9772196.351852.41\n    6201001100021100022494299375NT/RO/11001/11000210−9.90571…0−9.90571−63.032500\n    72010011000211001128086094NT/RO/11001/11000210−9.90571…0−10.4318−62.478895.4727140.33\n    82010011000211002040013031NT/RO/11001/11000210−9.90571…1−8.76077−63.8999203.582188.315\n    920100110003110003280852851NT/RO/11006/11000320−13.4945…0−13.4945−60.55200\n    10201001100041100042496046199NT/RO/11002/11000430−11.4343…0−11.4343−61.456200\n    112010011000411001224952792NT/RO/11002/11000430−11.4343…0−10.8777−61.9322104.964100.03\n    122010011000411001824965341NT/RO/11002/11000430−11.4343…0−11.672−61.19841.426640.3333\n    132010011000411002040013032NT/RO/11002/11000430−11.4343…1−8.76077−63.8999480.05497.07\n    142010011000411002824952282NT/RO/11002/11000430−11.4343…0−11.7271−61.771447.789966.3017\n    ⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋱⋮⋮⋮⋮⋮\n    461,847201915300105300100010545479CO/DF/53001/53001051−15.7795…1−15.7795−47.929700\n    461,8482019153001053001026451571373CO/DF/53001/53001051−15.7795…1−15.7795−47.929700\n    461,8492019153001053001026503555CO/DF/53001/53001051−15.7795…1−15.7795−47.929700\n    461,8502019153001053001026721972483CO/DF/53001/53001051−15.7795…1−15.7795−47.929700\n    461,8512019153001053001057175151086CO/DF/53001/53001051−15.7795…1−15.7795−47.929700\n  \n  \n  \n    461,852 rows × 18 columns"
  },
  {
    "objectID": "sections/table_procs.html#coluna-socioecon",
    "href": "sections/table_procs.html#coluna-socioecon",
    "title": "Procedimentos",
    "section": "Coluna socioecon",
    "text": "Coluna socioecon\n\ndf_proc['origem_socioecon'] = df_proc[:, as_type(f.origem_socioecon, str)]\ndf_proc['destino_socioecon'] = df_proc[:, as_type(f.destino_socioecon, str)]\ndf_proc[:, dt.update(socioecon = f.origem_socioecon + '_' + f.destino_socioecon)]\ndf_proc\n\n\n\n  \n  \n    anoparto_normalcod_municipiohosp_cod_municipiocnescountorigemorigem_socioeconorigem_capitalorigem_latitude…destino_latitudedestino_longitudedistancia (km)tempo (min)socioecon\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    020100110001110001267947749NT/RO/11005/11000110−11.9283…−11.9283−61.9953001_1\n    12010011000111001224952792NT/RO/11005/11000110−11.9283…−10.8777−61.9322130.77152.8681_2\n    22010011000111001328086171NT/RO/11005/11000110−11.9283…−9.44363−61.9818357.511427.841_1\n    32010011000111001824965341NT/RO/11005/11000110−11.9283…−11.672−61.198114.061112.2831_3\n    42010011000111002824952284NT/RO/11005/11000110−11.9283…−11.7271−61.771448.609950.141_1\n    52010011000135111020893271NT/RO/11005/11000110−11.9283…−21.1314−48.9772196.351852.411_3\n    6201001100021100022494299375NT/RO/11001/11000210−9.90571…−9.90571−63.0325001_1\n    72010011000211001128086094NT/RO/11001/11000210−9.90571…−10.4318−62.478895.4727140.331_2\n    82010011000211002040013031NT/RO/11001/11000210−9.90571…−8.76077−63.8999203.582188.3151_3\n    920100110003110003280852851NT/RO/11006/11000320−13.4945…−13.4945−60.552002_2\n    10201001100041100042496046199NT/RO/11002/11000430−11.4343…−11.4343−61.4562003_3\n    112010011000411001224952792NT/RO/11002/11000430−11.4343…−10.8777−61.9322104.964100.033_2\n    122010011000411001824965341NT/RO/11002/11000430−11.4343…−11.672−61.19841.426640.33333_3\n    132010011000411002040013032NT/RO/11002/11000430−11.4343…−8.76077−63.8999480.05497.073_3\n    142010011000411002824952282NT/RO/11002/11000430−11.4343…−11.7271−61.771447.789966.30173_1\n    ⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋱⋮⋮⋮⋮⋮\n    461,847201915300105300100010545479CO/DF/53001/53001051−15.7795…−15.7795−47.9297005_5\n    461,8482019153001053001026451571373CO/DF/53001/53001051−15.7795…−15.7795−47.9297005_5\n    461,8492019153001053001026503555CO/DF/53001/53001051−15.7795…−15.7795−47.9297005_5\n    461,8502019153001053001026721972483CO/DF/53001/53001051−15.7795…−15.7795−47.9297005_5\n    461,8512019153001053001057175151086CO/DF/53001/53001051−15.7795…−15.7795−47.9297005_5\n  \n  \n  \n    461,852 rows × 19 columns"
  },
  {
    "objectID": "sections/table_procs.html#coluna-capitais",
    "href": "sections/table_procs.html#coluna-capitais",
    "title": "Procedimentos",
    "section": "Coluna capitais",
    "text": "Coluna capitais\n\ndf_proc['origem_capital'] = df_proc[:, as_type(f.origem_capital, int)]\ndf_proc['origem_capital'] = df_proc[:, as_type(f.origem_capital, str)]\ndf_proc['destino_capital'] = df_proc[:, as_type(f.destino_capital, int)]\ndf_proc['destino_capital'] = df_proc[:, as_type(f.destino_capital, str)]\ndf_proc[:, dt.update(capitais = f.origem_capital + '_' + f.destino_capital)]\ndf_proc\n\n\n\n  \n  \n    anoparto_normalcod_municipiohosp_cod_municipiocnescountorigemorigem_socioeconorigem_capitalorigem_latitude…destino_longitudedistancia (km)tempo (min)socioeconcapitais\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    020100110001110001267947749NT/RO/11005/11000110−11.9283…−61.9953001_10_0\n    12010011000111001224952792NT/RO/11005/11000110−11.9283…−61.9322130.77152.8681_20_0\n    22010011000111001328086171NT/RO/11005/11000110−11.9283…−61.9818357.511427.841_10_0\n    32010011000111001824965341NT/RO/11005/11000110−11.9283…−61.198114.061112.2831_30_0\n    42010011000111002824952284NT/RO/11005/11000110−11.9283…−61.771448.609950.141_10_0\n    52010011000135111020893271NT/RO/11005/11000110−11.9283…−48.9772196.351852.411_30_0\n    6201001100021100022494299375NT/RO/11001/11000210−9.90571…−63.0325001_10_0\n    72010011000211001128086094NT/RO/11001/11000210−9.90571…−62.478895.4727140.331_20_0\n    82010011000211002040013031NT/RO/11001/11000210−9.90571…−63.8999203.582188.3151_30_1\n    920100110003110003280852851NT/RO/11006/11000320−13.4945…−60.552002_20_0\n    10201001100041100042496046199NT/RO/11002/11000430−11.4343…−61.4562003_30_0\n    112010011000411001224952792NT/RO/11002/11000430−11.4343…−61.9322104.964100.033_20_0\n    122010011000411001824965341NT/RO/11002/11000430−11.4343…−61.19841.426640.33333_30_0\n    132010011000411002040013032NT/RO/11002/11000430−11.4343…−63.8999480.05497.073_30_1\n    142010011000411002824952282NT/RO/11002/11000430−11.4343…−61.771447.789966.30173_10_0\n    ⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋱⋮⋮⋮⋮⋮\n    461,847201915300105300100010545479CO/DF/53001/53001051−15.7795…−47.9297005_51_1\n    461,8482019153001053001026451571373CO/DF/53001/53001051−15.7795…−47.9297005_51_1\n    461,8492019153001053001026503555CO/DF/53001/53001051−15.7795…−47.9297005_51_1\n    461,8502019153001053001026721972483CO/DF/53001/53001051−15.7795…−47.9297005_51_1\n    461,8512019153001053001057175151086CO/DF/53001/53001051−15.7795…−47.9297005_51_1\n  \n  \n  \n    461,852 rows × 20 columns"
  },
  {
    "objectID": "sections/table_procs.html#coluna-criticidade",
    "href": "sections/table_procs.html#coluna-criticidade",
    "title": "Procedimentos",
    "section": "Coluna criticidade",
    "text": "Coluna criticidade\n\ncrits = list()\norigins = df_proc[:, 'origem'].to_list()[0]\ndestins = df_proc[:, 'destino'].to_list()[0]\nfor ori, des in zip(origins, destins):\n  critic = 0\n  trim = ori\n  while trim not in des:\n    critic += 1\n    trim = '/'.join(trim.split('/')[:-1])\n  crits.append(critic)\ndf_proc['criticidade'] = dt.Frame(crits)\ndf_proc\n\n\n\n  \n  \n    anoparto_normalcod_municipiohosp_cod_municipiocnescountorigemorigem_socioeconorigem_capitalorigem_latitude…distancia (km)tempo (min)socioeconcapitaiscriticidade\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    020100110001110001267947749NT/RO/11005/11000110−11.9283…001_10_00\n    12010011000111001224952792NT/RO/11005/11000110−11.9283…130.77152.8681_20_02\n    22010011000111001328086171NT/RO/11005/11000110−11.9283…357.511427.841_10_02\n    32010011000111001824965341NT/RO/11005/11000110−11.9283…114.061112.2831_30_02\n    42010011000111002824952284NT/RO/11005/11000110−11.9283…48.609950.141_10_01\n    52010011000135111020893271NT/RO/11005/11000110−11.9283…2196.351852.411_30_04\n    6201001100021100022494299375NT/RO/11001/11000210−9.90571…001_10_00\n    72010011000211001128086094NT/RO/11001/11000210−9.90571…95.4727140.331_20_02\n    82010011000211002040013031NT/RO/11001/11000210−9.90571…203.582188.3151_30_12\n    920100110003110003280852851NT/RO/11006/11000320−13.4945…002_20_00\n    10201001100041100042496046199NT/RO/11002/11000430−11.4343…003_30_00\n    112010011000411001224952792NT/RO/11002/11000430−11.4343…104.964100.033_20_02\n    122010011000411001824965341NT/RO/11002/11000430−11.4343…41.426640.33333_30_01\n    132010011000411002040013032NT/RO/11002/11000430−11.4343…480.05497.073_30_12\n    142010011000411002824952282NT/RO/11002/11000430−11.4343…47.789966.30173_10_02\n    ⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋱⋮⋮⋮⋮⋮\n    461,847201915300105300100010545479CO/DF/53001/53001051−15.7795…005_51_10\n    461,8482019153001053001026451571373CO/DF/53001/53001051−15.7795…005_51_10\n    461,8492019153001053001026503555CO/DF/53001/53001051−15.7795…005_51_10\n    461,8502019153001053001026721972483CO/DF/53001/53001051−15.7795…005_51_10\n    461,8512019153001053001057175151086CO/DF/53001/53001051−15.7795…005_51_10\n  \n  \n  \n    461,852 rows × 21 columns"
  },
  {
    "objectID": "sections/table_procs.html#ajustando-colunas",
    "href": "sections/table_procs.html#ajustando-colunas",
    "title": "Procedimentos",
    "section": "Ajustando colunas",
    "text": "Ajustando colunas\n\ncols_order = [\n  'ano',\n  'parto_normal',\n  'origem',\n  'destino',\n  'distancia (km)',\n  'tempo (min)',\n  'criticidade',\n  'capitais',\n  'socioecon',\n  'origem_latitude',\n  'origem_longitude',\n  'destino_latitude',\n  'destino_longitude',\n  'count',\n]\n\n\ndf_proc = df_proc[:, cols_order]\ndf_proc\n\n\n\n  \n  \n    anoparto_normalorigemdestinodistancia (km)tempo (min)criticidadecapitaissocioeconorigem_latitudeorigem_longitudedestino_latitudedestino_longitudecount\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    020100NT/RO/11005/110001NT/RO/11005/110001/26794770000_01_1−11.9283−61.9953−11.9283−61.995349\n    120100NT/RO/11005/110001NT/RO/11003/110012/2495279130.77152.86820_01_2−11.9283−61.9953−10.8777−61.93222\n    220100NT/RO/11005/110001NT/RO/11001/110013/2808617357.511427.8420_01_1−11.9283−61.9953−9.44363−61.98181\n    320100NT/RO/11005/110001NT/RO/11002/110018/2496534114.061112.28320_01_3−11.9283−61.9953−11.672−61.1981\n    420100NT/RO/11005/110001NT/RO/11005/110028/249522848.609950.1410_01_1−11.9283−61.9953−11.7271−61.77144\n    520100NT/RO/11005/110001SD/SP/35151/351110/20893272196.351852.4140_01_3−11.9283−61.9953−21.1314−48.9771\n    620100NT/RO/11001/110002NT/RO/11001/110002/24942990000_01_1−9.90571−63.0325−9.90571−63.0325375\n    720100NT/RO/11001/110002NT/RO/11003/110011/280860995.4727140.3320_01_2−9.90571−63.0325−10.4318−62.47884\n    820100NT/RO/11001/110002NT/RO/11004/110020/4001303203.582188.31520_11_3−9.90571−63.0325−8.76077−63.89991\n    920100NT/RO/11006/110003NT/RO/11006/110003/28085280000_02_2−13.4945−60.552−13.4945−60.55251\n    1020100NT/RO/11002/110004NT/RO/11002/110004/24960460000_03_3−11.4343−61.4562−11.4343−61.4562199\n    1120100NT/RO/11002/110004NT/RO/11003/110012/2495279104.964100.0320_03_2−11.4343−61.4562−10.8777−61.93222\n    1220100NT/RO/11002/110004NT/RO/11002/110018/249653441.426640.333310_03_3−11.4343−61.4562−11.672−61.1981\n    1320100NT/RO/11002/110004NT/RO/11004/110020/4001303480.05497.0720_13_3−11.4343−61.4562−8.76077−63.89992\n    1420100NT/RO/11002/110004NT/RO/11005/110028/249522847.789966.301720_03_1−11.4343−61.4562−11.7271−61.77142\n    ⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮\n    461,84720191CO/DF/53001/530010CO/DF/53001/530010/00105450001_15_5−15.7795−47.9297−15.7795−47.9297479\n    461,84820191CO/DF/53001/530010CO/DF/53001/530010/26451570001_15_5−15.7795−47.9297−15.7795−47.92971373\n    461,84920191CO/DF/53001/530010CO/DF/53001/530010/26503550001_15_5−15.7795−47.9297−15.7795−47.92975\n    461,85020191CO/DF/53001/530010CO/DF/53001/530010/26721970001_15_5−15.7795−47.9297−15.7795−47.92972483\n    461,85120191CO/DF/53001/530010CO/DF/53001/530010/57175150001_15_5−15.7795−47.9297−15.7795−47.92971086\n  \n  \n  \n    461,852 rows × 14 columns"
  },
  {
    "objectID": "sections/rank_munic.html",
    "href": "sections/rank_munic.html",
    "title": "Rank Município",
    "section": "",
    "text": "import pandas as pd\nfrom utils import get_path, group_cols\nfrom datatable import dt, f, by"
  },
  {
    "objectID": "sections/rank_munic.html#tabela-localidades",
    "href": "sections/rank_munic.html#tabela-localidades",
    "title": "Rank Município",
    "section": "Tabela Localidades",
    "text": "Tabela Localidades\n\nColunas\n\ncols_locs = {\n  'codigo': 'codigo',\n  'nome_municipio': 'nome',\n  'socioecon': 'socioecon',\n  'capital': 'capital',\n  ...: None,\n}\n\n\n\nCarregando tabela\n\npath_locs = get_path('LOCALIDADES', 'localidades.csv.gzip')\ndf_locs = dt.fread(path_locs, columns=cols_locs)\ndf_locs\n\n\n\n  \n  \n    codigonomecapitalsocioecon\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    0CO/GO/52001/520005Abadia de Goiás05\n    1SD/MG/31052/310010Abadia dos Dourados02\n    2CO/GO/52011/520010Abadiânia03\n    3SD/MG/31067/310020Abaeté03\n    4NT/PA/15011/150010Abaetetuba01\n    5ND/CE/23019/230010Abaiara01\n    6ND/BA/29023/290010Abaíra01\n    7ND/BA/29017/290020Abaré01\n    8SL/PR/41018/410010Abatiá03\n    9SL/SC/42008/420005Abdon Batista03\n    10NT/PA/15003/150013Abel Figueiredo02\n    11SL/SC/42003/420010Abelardo Luz03\n    12SD/MG/31041/310030Abre Campo01\n    13ND/PE/26010/260005Abreu e Lima05\n    14NT/TO/17007/170025Abreulândia02\n    ⋮⋮⋮⋮⋮\n    5565ND/BA/29010/293360Xique-Xique01\n    5566ND/PB/25005/251740Zabelê01\n    5567SD/SP/35156/355715Zacarias03\n    5568ND/MA/21019/211400Zé Doca01\n    5569SL/SC/42008/421985Zortéa03\n  \n  \n  \n    5570 rows × 4 columns"
  },
  {
    "objectID": "sections/rank_munic.html#tabela-procedimentos",
    "href": "sections/rank_munic.html#tabela-procedimentos",
    "title": "Rank Município",
    "section": "Tabela Procedimentos",
    "text": "Tabela Procedimentos\n\nColunas\n\ncols_proc = {\n  'bienio': 'bienio',\n  'parto_normal': 'parto_normal',\n  'origem': 'codigo',\n  'criticidade': 'criticidade',\n  'count': 'count',\n  ...: None,\n}\n\n\n\nCarregando tabela\n\npath_proc = get_path('GESTANTES', 'procs_bienio.csv.gzip')\ndf_proc = dt.fread(path_proc, columns=cols_proc)\ndf_proc\n\n\n\n  \n  \n    bienioparto_normalcodigocriticidadecount\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    000CO/DF/53001/5300100260\n    100CO/DF/53001/5300100282\n    200CO/DF/53001/53001003323\n    300CO/DF/53001/53001003368\n    400CO/DF/53001/5300100964\n    500CO/DF/53001/5300100832\n    600CO/DF/53001/53001001831\n    700CO/DF/53001/53001003707\n    800CO/DF/53001/5300100728\n    900CO/DF/53001/53001001\n    1000CO/DF/53001/53001002251\n    1100CO/DF/53001/53001001561\n    1200CO/DF/53001/53001001798\n    1300CO/DF/53001/53001034\n    1400CO/DF/53001/53001041\n    ⋮⋮⋮⋮⋮⋮\n    124,98011SL/SC/42016/42187021\n    124,98111SL/SC/42016/42187021\n    124,98211SL/SC/42016/42187012\n    124,98311SL/SC/42016/42187011\n    124,98411SL/SC/42016/4218700441\n  \n  \n  \n    124,985 rows × 5 columns\n  \n\n\n\n\n\nDefinindo criticidade\n\ndf_proc[:, dt.update(criticidade = f.criticidade != 0)]\ndf_proc\n\n\n\n  \n  \n    bienioparto_normalcodigocriticidadecount\n    ▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    000CO/DF/53001/5300100260\n    100CO/DF/53001/5300100282\n    200CO/DF/53001/53001003323\n    300CO/DF/53001/53001003368\n    400CO/DF/53001/5300100964\n    500CO/DF/53001/5300100832\n    600CO/DF/53001/53001001831\n    700CO/DF/53001/53001003707\n    800CO/DF/53001/5300100728\n    900CO/DF/53001/53001001\n    1000CO/DF/53001/53001002251\n    1100CO/DF/53001/53001001561\n    1200CO/DF/53001/53001001798\n    1300CO/DF/53001/53001014\n    1400CO/DF/53001/53001011\n    ⋮⋮⋮⋮⋮⋮\n    124,98011SL/SC/42016/42187011\n    124,98111SL/SC/42016/42187011\n    124,98211SL/SC/42016/42187012\n    124,98311SL/SC/42016/42187011\n    124,98411SL/SC/42016/4218700441\n  \n  \n  \n    124,985 rows × 5 columns\n  \n\n\n\n\n\nTabela agregada\n\ndf_proc = df_proc[:, dt.sum(f.count), by(df_proc.names[:-1])]\ndf_proc\n\n\n\n  \n  \n    bienioparto_normalcodigocriticidadecount\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    000CO/DF/53001/530010020906\n    100CO/DF/53001/530010114\n    200CO/GO/52001/520005142\n    300CO/GO/52001/520130047\n    400CO/GO/52001/520130134\n    500CO/GO/52001/52016001\n    600CO/GO/52001/52016016\n    700CO/GO/52001/520280114\n    800CO/GO/52001/52036019\n    900CO/GO/52001/520460117\n    1000CO/GO/52001/520520015\n    1100CO/GO/52001/520520121\n    1200CO/GO/52001/52068014\n    1300CO/GO/52001/52087008864\n    1400CO/GO/52001/5208701188\n    ⋮⋮⋮⋮⋮⋮\n    32,18011SL/SC/42016/421710125\n    32,18111SL/SC/42016/42184002\n    32,18211SL/SC/42016/421840141\n    32,18311SL/SC/42016/4218700441\n    32,18411SL/SC/42016/42187018\n  \n  \n  \n    32,185 rows × 5 columns\n  \n\n\n\n\n\nTotal e Critícos\n\ndf_proc_total = df_proc[:, f[:].remove(f.criticidade)]\ndf_proc_total = df_proc_total[:, dt.sum(f.count), by(df_proc_total.names[:-1])]\ndf_proc_total.names = {'count': 'count_total'}\ndf_proc_total\n\n\n\n  \n  \n    bienioparto_normalcodigocount_total\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    000CO/DF/53001/53001020920\n    100CO/GO/52001/52000542\n    200CO/GO/52001/52013081\n    300CO/GO/52001/5201607\n    400CO/GO/52001/52028014\n    500CO/GO/52001/5203609\n    600CO/GO/52001/52046017\n    700CO/GO/52001/52052036\n    800CO/GO/52001/5206804\n    900CO/GO/52001/5208709052\n    1000CO/GO/52001/520880202\n    1100CO/GO/52001/520920105\n    1200CO/GO/52001/52100061\n    1300CO/GO/52001/5210564\n    1400CO/GO/52001/52114015\n    ⋮⋮⋮⋮⋮\n    22,20811SL/SC/42016/42156012\n    22,20911SL/SC/42016/421700103\n    22,21011SL/SC/42016/42171025\n    22,21111SL/SC/42016/42184043\n    22,21211SL/SC/42016/421870449\n  \n  \n  \n    22,213 rows × 4 columns\n  \n\n\n\n\ndf_proc_critic = df_proc[f.criticidade == 1, f[:].remove(f.criticidade)]\ndf_proc_critic = df_proc_critic[:, dt.sum(f.count), by(df_proc_critic.names[:-1])]\ndf_proc_critic.names = {'count': 'count_critic'}\ndf_proc_critic.key = df_proc_critic.names[:-1]\ndf_proc_critic\n\n\n\n  \n  \n    bienioparto_normalcodigocount_critic\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    00CO/DF/53001/53001014\n    00CO/GO/52001/52000542\n    00CO/GO/52001/52013034\n    00CO/GO/52001/5201606\n    00CO/GO/52001/52028014\n    00CO/GO/52001/5203609\n    00CO/GO/52001/52046017\n    00CO/GO/52001/52052021\n    00CO/GO/52001/5206804\n    00CO/GO/52001/520870188\n    00CO/GO/52001/520880130\n    00CO/GO/52001/520920105\n    00CO/GO/52001/52100023\n    00CO/GO/52001/5210564\n    00CO/GO/52001/52114010\n    ⋮⋮⋮⋮\n    11SL/SC/42016/42156012\n    11SL/SC/42016/421700103\n    11SL/SC/42016/42171025\n    11SL/SC/42016/42184041\n    11SL/SC/42016/4218708\n  \n  \n  \n    22,096 rows × 4 columns"
  },
  {
    "objectID": "sections/rank_munic.html#coluna-count-pra-total-e-critic",
    "href": "sections/rank_munic.html#coluna-count-pra-total-e-critic",
    "title": "Rank Município",
    "section": "Coluna count pra total e critic",
    "text": "Coluna count pra total e critic\n\ndf_rank = df_proc_total[:, :, dt.join(df_proc_critic)]\ndf_rank['count_critic'] = dt.Frame([\n  0 if c == None else c for c in df_rank['count_critic'].to_list()[0]])\ndf_rank\n\n\n\n  \n  \n    bienioparto_normalcodigocount_totalcount_critic\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    000CO/DF/53001/5300102092014\n    100CO/GO/52001/5200054242\n    200CO/GO/52001/5201308134\n    300CO/GO/52001/52016076\n    400CO/GO/52001/5202801414\n    500CO/GO/52001/52036099\n    600CO/GO/52001/5204601717\n    700CO/GO/52001/5205203621\n    800CO/GO/52001/52068044\n    900CO/GO/52001/5208709052188\n    1000CO/GO/52001/520880202130\n    1100CO/GO/52001/520920105105\n    1200CO/GO/52001/5210006123\n    1300CO/GO/52001/52105644\n    1400CO/GO/52001/5211401510\n    ⋮⋮⋮⋮⋮⋮\n    22,20811SL/SC/42016/4215601212\n    22,20911SL/SC/42016/421700103103\n    22,21011SL/SC/42016/4217102525\n    22,21111SL/SC/42016/4218404341\n    22,21211SL/SC/42016/4218704498\n  \n  \n  \n    22,213 rows × 5 columns"
  },
  {
    "objectID": "sections/rank_munic.html#coluna-percent",
    "href": "sections/rank_munic.html#coluna-percent",
    "title": "Rank Município",
    "section": "Coluna percent (%)",
    "text": "Coluna percent (%)\n\ndf_rank[:, dt.update(critic_percent = f.count_critic / f.count_total * 100)]\ndf_rank\n\n\n\n  \n  \n    bienioparto_normalcodigocount_totalcount_criticcritic_percent\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    000CO/DF/53001/53001020920140.0669216\n    100CO/GO/52001/5200054242100\n    200CO/GO/52001/520130813441.9753\n    300CO/GO/52001/5201607685.7143\n    400CO/GO/52001/5202801414100\n    500CO/GO/52001/52036099100\n    600CO/GO/52001/5204601717100\n    700CO/GO/52001/520520362158.3333\n    800CO/GO/52001/52068044100\n    900CO/GO/52001/52087090521882.07689\n    1000CO/GO/52001/52088020213064.3564\n    1100CO/GO/52001/520920105105100\n    1200CO/GO/52001/521000612337.7049\n    1300CO/GO/52001/52105644100\n    1400CO/GO/52001/521140151066.6667\n    ⋮⋮⋮⋮⋮⋮⋮\n    22,20811SL/SC/42016/4215601212100\n    22,20911SL/SC/42016/421700103103100\n    22,21011SL/SC/42016/4217102525100\n    22,21111SL/SC/42016/421840434195.3488\n    22,21211SL/SC/42016/42187044981.78174\n  \n  \n  \n    22,213 rows × 6 columns"
  },
  {
    "objectID": "sections/rank_munic.html#informações-da-localidade",
    "href": "sections/rank_munic.html#informações-da-localidade",
    "title": "Rank Município",
    "section": "Informações da localidade",
    "text": "Informações da localidade\n\ndf_locs.key = 'codigo'\ndf_rank = df_rank[:, :, dt.join(df_locs)]\ndf_rank\n\n\n\n  \n  \n    bienioparto_normalcodigocount_totalcount_criticcritic_percentnomecapitalsocioecon\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    000CO/DF/53001/53001020920140.0669216Brasília15\n    100CO/GO/52001/5200054242100Abadia de Goiás05\n    200CO/GO/52001/520130813441.9753Anicuns05\n    300CO/GO/52001/5201607685.7143Araçu05\n    400CO/GO/52001/5202801414100Avelinópolis05\n    500CO/GO/52001/52036099100Brazabrantes05\n    600CO/GO/52001/5204601717100Campestre de Goiás05\n    700CO/GO/52001/520520362158.3333Caturaí05\n    800CO/GO/52001/52068044100Damolândia05\n    900CO/GO/52001/52087090521882.07689Goiânia15\n    1000CO/GO/52001/52088020213064.3564Goianira05\n    1100CO/GO/52001/520920105105100Guapó05\n    1200CO/GO/52001/521000612337.7049Inhumas05\n    1300CO/GO/52001/52105644100Itaguari05\n    1400CO/GO/52001/521140151066.6667Itauçu05\n    ⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮\n    22,20811SL/SC/42016/4215601212100Santa Rosa de Lima03\n    22,20911SL/SC/42016/421700103103100São Ludgero03\n    22,21011SL/SC/42016/4217102525100São Martinho03\n    22,21111SL/SC/42016/421840434195.3488Treze de Maio03\n    22,21211SL/SC/42016/42187044981.78174Tubarão03\n  \n  \n  \n    22,213 rows × 9 columns"
  },
  {
    "objectID": "sections/rank_munic.html#ordenando-colunas",
    "href": "sections/rank_munic.html#ordenando-colunas",
    "title": "Rank Município",
    "section": "Ordenando colunas",
    "text": "Ordenando colunas\n\ncols_order = [\n  'bienio',\n  'parto_normal',\n  'codigo',\n  'nome',\n  'capital',\n  'socioecon',\n  'count_total',\n  'count_critic',\n  'critic_percent',\n]\n\n\ndf_rank = df_rank[:, cols_order]\ndf_rank\n\n\n\n  \n  \n    bienioparto_normalcodigonomecapitalsocioeconcount_totalcount_criticcritic_percent\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    000CO/DF/53001/530010Brasília1520920140.0669216\n    100CO/GO/52001/520005Abadia de Goiás054242100\n    200CO/GO/52001/520130Anicuns05813441.9753\n    300CO/GO/52001/520160Araçu057685.7143\n    400CO/GO/52001/520280Avelinópolis051414100\n    500CO/GO/52001/520360Brazabrantes0599100\n    600CO/GO/52001/520460Campestre de Goiás051717100\n    700CO/GO/52001/520520Caturaí05362158.3333\n    800CO/GO/52001/520680Damolândia0544100\n    900CO/GO/52001/520870Goiânia1590521882.07689\n    1000CO/GO/52001/520880Goianira0520213064.3564\n    1100CO/GO/52001/520920Guapó05105105100\n    1200CO/GO/52001/521000Inhumas05612337.7049\n    1300CO/GO/52001/521056Itaguari0544100\n    1400CO/GO/52001/521140Itauçu05151066.6667\n    ⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮\n    22,20811SL/SC/42016/421560Santa Rosa de Lima031212100\n    22,20911SL/SC/42016/421700São Ludgero03103103100\n    22,21011SL/SC/42016/421710São Martinho032525100\n    22,21111SL/SC/42016/421840Treze de Maio03434195.3488\n    22,21211SL/SC/42016/421870Tubarão0344981.78174\n  \n  \n  \n    22,213 rows × 9 columns"
  },
  {
    "objectID": "sections/rank_munic.html#ordenando-linhas",
    "href": "sections/rank_munic.html#ordenando-linhas",
    "title": "Rank Município",
    "section": "Ordenando linhas",
    "text": "Ordenando linhas\n\ndf_rank = df_rank.sort(f.bienio, f.parto_normal, -f.critic_percent, -f.count_critic)\ndf_rank\n\n\n\n  \n  \n    bienioparto_normalcodigonomecapitalsocioeconcount_totalcount_criticcritic_percent\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    000SL/SC/42007/421190Palhoça0510161016100\n    100ND/SE/28006/280480Nossa Senhora do Socorro01988988100\n    200ND/AL/27001/270770Rio Largo03858858100\n    300SL/PR/41002/410040Almirante Tamandaré05762762100\n    400ND/AL/27001/270470Marechal Deodoro03730730100\n    500ND/PE/26010/260680Igarassu05658658100\n    600SD/SP/35014/354730Santana de Parnaíba05620620100\n    700ND/PE/26008/260040Água Preta01619619100\n    800SD/ES/32002/320510Viana05617617100\n    900SL/RS/43009/430930Guaíba03543543100\n    1000SL/PR/41002/411950Piraquara05542542100\n    1100ND/AL/27005/270140Campo Alegre01539539100\n    1200ND/PE/26008/260420Catende01531531100\n    1300ND/AL/27002/270850São Luís do Quitunde01530530100\n    1400ND/CE/23003/230970Pacatuba02509509100\n    ⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮\n    22,20811SD/SP/35092/351000Cândido Mota0412300\n    22,20911SD/SP/35115/354425Rosana039900\n    22,21011SL/PR/41018/410640Cornélio Procópio0315000\n    22,21111SL/PR/41019/412410Santo Antônio da Platina0354300\n    22,21211SL/RS/43003/431530Quaraí0313300\n  \n  \n  \n    22,213 rows × 9 columns"
  },
  {
    "objectID": "sections/table_procs.html#filtrando-os-anos",
    "href": "sections/table_procs.html#filtrando-os-anos",
    "title": "Procedimentos",
    "section": "Filtrando os anos",
    "text": "Filtrando os anos\n\ndf_proc_bienio = df_proc[\n  (f.ano == 2010) | (f.ano == 2011) | (f.ano == 2018) |(f.ano == 2019)\n, :]\ndf_proc_bienio\n\n\n\n  \n  \n    anoparto_normalorigemdestinodistancia (km)tempo (min)criticidadecapitaissocioeconorigem_latitudeorigem_longitudedestino_latitudedestino_longitudecount\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    020100NT/RO/11005/110001NT/RO/11005/110001/26794770000_01_1−11.9283−61.9953−11.9283−61.995349\n    120100NT/RO/11005/110001NT/RO/11003/110012/2495279130.77152.86820_01_2−11.9283−61.9953−10.8777−61.93222\n    220100NT/RO/11005/110001NT/RO/11001/110013/2808617357.511427.8420_01_1−11.9283−61.9953−9.44363−61.98181\n    320100NT/RO/11005/110001NT/RO/11002/110018/2496534114.061112.28320_01_3−11.9283−61.9953−11.672−61.1981\n    420100NT/RO/11005/110001NT/RO/11005/110028/249522848.609950.1410_01_1−11.9283−61.9953−11.7271−61.77144\n    520100NT/RO/11005/110001SD/SP/35151/351110/20893272196.351852.4140_01_3−11.9283−61.9953−21.1314−48.9771\n    620100NT/RO/11001/110002NT/RO/11001/110002/24942990000_01_1−9.90571−63.0325−9.90571−63.0325375\n    720100NT/RO/11001/110002NT/RO/11003/110011/280860995.4727140.3320_01_2−9.90571−63.0325−10.4318−62.47884\n    820100NT/RO/11001/110002NT/RO/11004/110020/4001303203.582188.31520_11_3−9.90571−63.0325−8.76077−63.89991\n    920100NT/RO/11006/110003NT/RO/11006/110003/28085280000_02_2−13.4945−60.552−13.4945−60.55251\n    1020100NT/RO/11002/110004NT/RO/11002/110004/24960460000_03_3−11.4343−61.4562−11.4343−61.4562199\n    1120100NT/RO/11002/110004NT/RO/11003/110012/2495279104.964100.0320_03_2−11.4343−61.4562−10.8777−61.93222\n    1220100NT/RO/11002/110004NT/RO/11002/110018/249653441.426640.333310_03_3−11.4343−61.4562−11.672−61.1981\n    1320100NT/RO/11002/110004NT/RO/11004/110020/4001303480.05497.0720_13_3−11.4343−61.4562−8.76077−63.89992\n    1420100NT/RO/11002/110004NT/RO/11005/110028/249522847.789966.301720_03_1−11.4343−61.4562−11.7271−61.77142\n    ⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮\n    187,46620191CO/DF/53001/530010CO/DF/53001/530010/00105450001_15_5−15.7795−47.9297−15.7795−47.9297479\n    187,46720191CO/DF/53001/530010CO/DF/53001/530010/26451570001_15_5−15.7795−47.9297−15.7795−47.92971373\n    187,46820191CO/DF/53001/530010CO/DF/53001/530010/26503550001_15_5−15.7795−47.9297−15.7795−47.92975\n    187,46920191CO/DF/53001/530010CO/DF/53001/530010/26721970001_15_5−15.7795−47.9297−15.7795−47.92972483\n    187,47020191CO/DF/53001/530010CO/DF/53001/530010/57175150001_15_5−15.7795−47.9297−15.7795−47.92971086\n  \n  \n  \n    187,471 rows × 14 columns"
  },
  {
    "objectID": "sections/table_procs.html#atualizando-variável-ano-biênio",
    "href": "sections/table_procs.html#atualizando-variável-ano-biênio",
    "title": "Procedimentos",
    "section": "Atualizando variável ano (biênio)",
    "text": "Atualizando variável ano (biênio)\nValor da variável bienio:\n\n0 (False) = 2010/11\n1 (True) = 2018/19\n\n\ndf_proc_bienio[:, dt.update(ano = (f.ano == 2018) | (f.ano == 2019))]\ndf_proc_bienio.names = {'ano': 'bienio'}\ndf_proc_bienio\n\n\n\n  \n  \n    bienioparto_normalorigemdestinodistancia (km)tempo (min)criticidadecapitaissocioeconorigem_latitudeorigem_longitudedestino_latitudedestino_longitudecount\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    000NT/RO/11005/110001NT/RO/11005/110001/26794770000_01_1−11.9283−61.9953−11.9283−61.995349\n    100NT/RO/11005/110001NT/RO/11003/110012/2495279130.77152.86820_01_2−11.9283−61.9953−10.8777−61.93222\n    200NT/RO/11005/110001NT/RO/11001/110013/2808617357.511427.8420_01_1−11.9283−61.9953−9.44363−61.98181\n    300NT/RO/11005/110001NT/RO/11002/110018/2496534114.061112.28320_01_3−11.9283−61.9953−11.672−61.1981\n    400NT/RO/11005/110001NT/RO/11005/110028/249522848.609950.1410_01_1−11.9283−61.9953−11.7271−61.77144\n    500NT/RO/11005/110001SD/SP/35151/351110/20893272196.351852.4140_01_3−11.9283−61.9953−21.1314−48.9771\n    600NT/RO/11001/110002NT/RO/11001/110002/24942990000_01_1−9.90571−63.0325−9.90571−63.0325375\n    700NT/RO/11001/110002NT/RO/11003/110011/280860995.4727140.3320_01_2−9.90571−63.0325−10.4318−62.47884\n    800NT/RO/11001/110002NT/RO/11004/110020/4001303203.582188.31520_11_3−9.90571−63.0325−8.76077−63.89991\n    900NT/RO/11006/110003NT/RO/11006/110003/28085280000_02_2−13.4945−60.552−13.4945−60.55251\n    1000NT/RO/11002/110004NT/RO/11002/110004/24960460000_03_3−11.4343−61.4562−11.4343−61.4562199\n    1100NT/RO/11002/110004NT/RO/11003/110012/2495279104.964100.0320_03_2−11.4343−61.4562−10.8777−61.93222\n    1200NT/RO/11002/110004NT/RO/11002/110018/249653441.426640.333310_03_3−11.4343−61.4562−11.672−61.1981\n    1300NT/RO/11002/110004NT/RO/11004/110020/4001303480.05497.0720_13_3−11.4343−61.4562−8.76077−63.89992\n    1400NT/RO/11002/110004NT/RO/11005/110028/249522847.789966.301720_03_1−11.4343−61.4562−11.7271−61.77142\n    ⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮\n    187,46611CO/DF/53001/530010CO/DF/53001/530010/00105450001_15_5−15.7795−47.9297−15.7795−47.9297479\n    187,46711CO/DF/53001/530010CO/DF/53001/530010/26451570001_15_5−15.7795−47.9297−15.7795−47.92971373\n    187,46811CO/DF/53001/530010CO/DF/53001/530010/26503550001_15_5−15.7795−47.9297−15.7795−47.92975\n    187,46911CO/DF/53001/530010CO/DF/53001/530010/26721970001_15_5−15.7795−47.9297−15.7795−47.92972483\n    187,47011CO/DF/53001/530010CO/DF/53001/530010/57175150001_15_5−15.7795−47.9297−15.7795−47.92971086\n  \n  \n  \n    187,471 rows × 14 columns\n  \n\n\n\n\nTabela agrupada\n\ndf_proc_bienio = df_proc_bienio[:, dt.sum(f.count), by(df_proc_bienio.names[:-1])]\ndf_proc_bienio\n\n\n\n  \n  \n    bienioparto_normalorigemdestinodistancia (km)tempo (min)criticidadecapitaissocioeconorigem_latitudeorigem_longitudedestino_latitudedestino_longitudecount\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    000CO/DF/53001/530010CO/DF/53001/530010/00104640001_15_5−15.7795−47.9297−15.7795−47.9297260\n    100CO/DF/53001/530010CO/DF/53001/530010/00104720001_15_5−15.7795−47.9297−15.7795−47.9297282\n    200CO/DF/53001/530010CO/DF/53001/530010/00104800001_15_5−15.7795−47.9297−15.7795−47.92973323\n    300CO/DF/53001/530010CO/DF/53001/530010/00104990001_15_5−15.7795−47.9297−15.7795−47.92973368\n    400CO/DF/53001/530010CO/DF/53001/530010/00105020001_15_5−15.7795−47.9297−15.7795−47.9297964\n    500CO/DF/53001/530010CO/DF/53001/530010/00105100001_15_5−15.7795−47.9297−15.7795−47.9297832\n    600CO/DF/53001/530010CO/DF/53001/530010/00105290001_15_5−15.7795−47.9297−15.7795−47.92971831\n    700CO/DF/53001/530010CO/DF/53001/530010/00105370001_15_5−15.7795−47.9297−15.7795−47.92973707\n    800CO/DF/53001/530010CO/DF/53001/530010/00105450001_15_5−15.7795−47.9297−15.7795−47.9297728\n    900CO/DF/53001/530010CO/DF/53001/530010/00105610001_15_5−15.7795−47.9297−15.7795−47.92971\n    1000CO/DF/53001/530010CO/DF/53001/530010/26451570001_15_5−15.7795−47.9297−15.7795−47.92972251\n    1100CO/DF/53001/530010CO/DF/53001/530010/26721970001_15_5−15.7795−47.9297−15.7795−47.92971561\n    1200CO/DF/53001/530010CO/DF/53001/530010/57175150001_15_5−15.7795−47.9297−15.7795−47.92971798\n    1300CO/DF/53001/530010CO/GO/52011/520110/2361787152.625132.72331_05_3−15.7795−47.9297−16.3281−48.9534\n    1400CO/DF/53001/530010ND/BA/29002/290320/3972925630.949466.70541_05_2−15.7795−47.9297−12.1439−44.99681\n    ⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮\n    124,98011SL/SC/42016/421870SL/SC/42007/420540/3157245138.477104.9420_13_5−28.4713−49.0144−27.5945−48.54771\n    124,98111SL/SC/42016/421870SL/SC/42015/420460/259427754.62149.316720_03_4−28.4713−49.0144−28.6723−49.37291\n    124,98211SL/SC/42016/421870SL/SC/42016/420280/266588335.543937.493310_03_3−28.4713−49.0144−28.2681−49.17012\n    124,98311SL/SC/42016/421870SL/SC/42016/420730/238588053.96145.353310_03_3−28.4713−49.0144−28.2284−48.66591\n    124,98411SL/SC/42016/421870SL/SC/42016/421870/24917100000_03_3−28.4713−49.0144−28.4713−49.0144441\n  \n  \n  \n    124,985 rows × 14 columns"
  },
  {
    "objectID": "sections/table_procs.html#ano",
    "href": "sections/table_procs.html#ano",
    "title": "Procedimentos",
    "section": "Ano",
    "text": "Ano\n\noutput_proc = get_path('GESTANTES', 'procs_ano.csv.gzip')\ndf_proc.to_csv(output_proc)\n\n\ndt.fread(output_proc)\n\n\n\n  \n  \n    anoparto_normalorigemdestinodistancia (km)tempo (min)criticidadecapitaissocioeconorigem_latitudeorigem_longitudedestino_latitudedestino_longitudecount\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    020100NT/RO/11005/110001NT/RO/11005/110001/26794770000_01_1−11.9283−61.9953−11.9283−61.995349\n    120100NT/RO/11005/110001NT/RO/11003/110012/2495279130.77152.86820_01_2−11.9283−61.9953−10.8777−61.93222\n    220100NT/RO/11005/110001NT/RO/11001/110013/2808617357.511427.8420_01_1−11.9283−61.9953−9.44363−61.98181\n    320100NT/RO/11005/110001NT/RO/11002/110018/2496534114.061112.28320_01_3−11.9283−61.9953−11.672−61.1981\n    420100NT/RO/11005/110001NT/RO/11005/110028/249522848.609950.1410_01_1−11.9283−61.9953−11.7271−61.77144\n    520100NT/RO/11005/110001SD/SP/35151/351110/20893272196.351852.4140_01_3−11.9283−61.9953−21.1314−48.9771\n    620100NT/RO/11001/110002NT/RO/11001/110002/24942990000_01_1−9.90571−63.0325−9.90571−63.0325375\n    720100NT/RO/11001/110002NT/RO/11003/110011/280860995.4727140.3320_01_2−9.90571−63.0325−10.4318−62.47884\n    820100NT/RO/11001/110002NT/RO/11004/110020/4001303203.582188.31520_11_3−9.90571−63.0325−8.76077−63.89991\n    920100NT/RO/11006/110003NT/RO/11006/110003/28085280000_02_2−13.4945−60.552−13.4945−60.55251\n    1020100NT/RO/11002/110004NT/RO/11002/110004/24960460000_03_3−11.4343−61.4562−11.4343−61.4562199\n    1120100NT/RO/11002/110004NT/RO/11003/110012/2495279104.964100.0320_03_2−11.4343−61.4562−10.8777−61.93222\n    1220100NT/RO/11002/110004NT/RO/11002/110018/249653441.426640.333310_03_3−11.4343−61.4562−11.672−61.1981\n    1320100NT/RO/11002/110004NT/RO/11004/110020/4001303480.05497.0720_13_3−11.4343−61.4562−8.76077−63.89992\n    1420100NT/RO/11002/110004NT/RO/11005/110028/249522847.789966.301720_03_1−11.4343−61.4562−11.7271−61.77142\n    ⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮\n    461,84720191CO/DF/53001/530010CO/DF/53001/530010/00105450001_15_5−15.7795−47.9297−15.7795−47.9297479\n    461,84820191CO/DF/53001/530010CO/DF/53001/530010/26451570001_15_5−15.7795−47.9297−15.7795−47.92971373\n    461,84920191CO/DF/53001/530010CO/DF/53001/530010/26503550001_15_5−15.7795−47.9297−15.7795−47.92975\n    461,85020191CO/DF/53001/530010CO/DF/53001/530010/26721970001_15_5−15.7795−47.9297−15.7795−47.92972483\n    461,85120191CO/DF/53001/530010CO/DF/53001/530010/57175150001_15_5−15.7795−47.9297−15.7795−47.92971086\n  \n  \n  \n    461,852 rows × 14 columns"
  },
  {
    "objectID": "sections/table_procs.html#biênio",
    "href": "sections/table_procs.html#biênio",
    "title": "Procedimentos",
    "section": "Biênio",
    "text": "Biênio\n\noutput_proc_bienio = get_path('GESTANTES', 'procs_bienio.csv.gzip')\ndf_proc_bienio.to_csv(output_proc_bienio)\n\n\ndt.fread(output_proc_bienio)\n\n\n\n  \n  \n    bienioparto_normalorigemdestinodistancia (km)tempo (min)criticidadecapitaissocioeconorigem_latitudeorigem_longitudedestino_latitudedestino_longitudecount\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    000CO/DF/53001/530010CO/DF/53001/530010/00104640001_15_5−15.7795−47.9297−15.7795−47.9297260\n    100CO/DF/53001/530010CO/DF/53001/530010/00104720001_15_5−15.7795−47.9297−15.7795−47.9297282\n    200CO/DF/53001/530010CO/DF/53001/530010/00104800001_15_5−15.7795−47.9297−15.7795−47.92973323\n    300CO/DF/53001/530010CO/DF/53001/530010/00104990001_15_5−15.7795−47.9297−15.7795−47.92973368\n    400CO/DF/53001/530010CO/DF/53001/530010/00105020001_15_5−15.7795−47.9297−15.7795−47.9297964\n    500CO/DF/53001/530010CO/DF/53001/530010/00105100001_15_5−15.7795−47.9297−15.7795−47.9297832\n    600CO/DF/53001/530010CO/DF/53001/530010/00105290001_15_5−15.7795−47.9297−15.7795−47.92971831\n    700CO/DF/53001/530010CO/DF/53001/530010/00105370001_15_5−15.7795−47.9297−15.7795−47.92973707\n    800CO/DF/53001/530010CO/DF/53001/530010/00105450001_15_5−15.7795−47.9297−15.7795−47.9297728\n    900CO/DF/53001/530010CO/DF/53001/530010/00105610001_15_5−15.7795−47.9297−15.7795−47.92971\n    1000CO/DF/53001/530010CO/DF/53001/530010/26451570001_15_5−15.7795−47.9297−15.7795−47.92972251\n    1100CO/DF/53001/530010CO/DF/53001/530010/26721970001_15_5−15.7795−47.9297−15.7795−47.92971561\n    1200CO/DF/53001/530010CO/DF/53001/530010/57175150001_15_5−15.7795−47.9297−15.7795−47.92971798\n    1300CO/DF/53001/530010CO/GO/52011/520110/2361787152.625132.72331_05_3−15.7795−47.9297−16.3281−48.9534\n    1400CO/DF/53001/530010ND/BA/29002/290320/3972925630.949466.70541_05_2−15.7795−47.9297−12.1439−44.99681\n    ⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮\n    124,98011SL/SC/42016/421870SL/SC/42007/420540/3157245138.477104.9420_13_5−28.4713−49.0144−27.5945−48.54771\n    124,98111SL/SC/42016/421870SL/SC/42015/420460/259427754.62149.316720_03_4−28.4713−49.0144−28.6723−49.37291\n    124,98211SL/SC/42016/421870SL/SC/42016/420280/266588335.543937.493310_03_3−28.4713−49.0144−28.2681−49.17012\n    124,98311SL/SC/42016/421870SL/SC/42016/420730/238588053.96145.353310_03_3−28.4713−49.0144−28.2284−48.66591\n    124,98411SL/SC/42016/421870SL/SC/42016/421870/24917100000_03_3−28.4713−49.0144−28.4713−49.0144441\n  \n  \n  \n    124,985 rows × 14 columns"
  }
]