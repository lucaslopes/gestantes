[
  {
    "objectID": "README.html",
    "href": "README.html",
    "title": "Introdução",
    "section": "",
    "text": "Contexto\nNo Brasil, 98% dos partos ocorrem em ambiente hospitalar, e 77% no Sistema Único de Saúde (SUS). O acesso oportuno aos serviços obstétricos de internação para o parto é fundamental para garantir a segurança do cuidado materno e neonatal. Entretanto, há “vazios assistenciais” na oferta de serviços hospitalares pelo SUS que fazem com que grande parte das parturientes precise se deslocar de um município a outro para ser assistida.\nO retardo na atenção obstétrica no momento do parto está associado à desfechos maternos adversos, e o deslocamento de grandes distâncias tem sido associado a níveis elevados de mortalidade infantil e neonatal, além de maior risco de morbimortalidade materna. Assim, a análise da distância percorrida pelas parturientes de sua residência até o hospital é um indicador útil e sensível para avaliar a dificuldade em acessar cuidados maternos e neonatais no SUS.\nA análise da acessibilidade geográfica é um componente importante da avaliação de serviços de saúde e reflete aspectos da distribuição espacial da oferta de serviços que dificultam ou promovem sua utilização. A metodologia de análise de redes sociais (ARS) tem sido utilizada nesse contexto, incluindo a internação para o parto, e também como ferramenta para gestão em saúde.\nEste projeto tem o objetivo de analisar a acessibilidade geográfica ao parto hospitalar realizado no SUS nos últimos 10 anos, em todo Brasil, aplicando a ARS como uma nova ferramenta para a gestão de serviços de saúde. Serão utilizados dados do Departamento de Informática do SUS (DATASUS) para a construção das redes de deslocamento das gestantes em busca de internação para o parto, levando-se em conta as distâncias percorridas, mapeando fluxos preferenciais e identificando lacunas geográficas de atendimento e polos de atração de maior demanda, como medida de inequidade no acesso aos serviços. O projeto avança no processo de avaliação do sistema de saúde ao desenvolver novos indicadores de acesso à serviços obstétricos, baseados em uma metodologia inovadora, e com abrangência nacional e aplicabilidade a outras áreas de saúde pública.\nEspera-se, com este estudo, gerar evidências que permitam um melhor entendimento da organização e das fragilidades do SUS na assistência à saúde da mulher no ciclo gravídico-puerperal, contribuindo para o planejamento da atenção obstétrica e para o fortalecimento de políticas públicas voltadas para melhoria do acesso aos serviços de saúde."
  },
  {
    "objectID": "sections/database_dists.html",
    "href": "sections/database_dists.html",
    "title": "Distâncias",
    "section": "",
    "text": "Descrição\nThis working paper describes the methodological procedure for calculating distances and travel time between the 5,570 Brazilian municipalities using the APIs from Google Maps (Application Programming Interface) and, mainly, OpenStreet Maps. This is an update of the results of Carvalho et at. (2016). The data generated by this work provide relevant information that can be used by other academic works with the most diverse applications, such as, for example, applications in regional economics, dynamic allocation models, operational research, spatial econometrics or general equilibrium models. Therefore, the main objective of this work is to build a database that can be used in several applied studies.\nhttps://ideas.repec.org/p/cdp/texdis/td630.html\n\n\nTabela\n\npath_dist = get_path('DISTANCIAS', 'matriz_distancias.zip')\ndf_dist = dt.fread(path_dist)\ndf_dist\n\n\n\n  \n  \n    origemdestinodistanciatempo\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    011000111000100\n    1110001110002309.056.16906\n    2110001110003399.56.28906\n    311000111000481.20111.91775\n    4110001110005391.7046.13636\n    5110001110006353.4175.53989\n    6110001110007313.5926.18117\n    7110001110008326.9835.34175\n    8110001110009145.6782.346\n    9110001110010649.54513.405\n    10110001110011214.1253.83481\n    11110001110012130.772.54781\n    12110001110013357.5117.13067\n    1311000111001460.21031.02275\n    14110001110015172.9263.18425\n    ⋮⋮⋮⋮⋮\n    31,024,895530010522200161.7292.356\n    31,024,896530010522205382.7095.47956\n    31,024,897530010522220161.6032.24894\n    31,024,898530010522230190.0013.21608\n    31,024,89953001053001000\n  \n  \n  \n    31,024,900 rows × 4 columns\n  \n\n\n\n\n\nExportar tabela\n\noutput_dist = path_dist.replace('zip', 'jay')\ndf_dist.to_jay(output_dist)\n\n\ndf_dist = dt.fread(output_dist)\ndf_dist\n\n\n\n  \n  \n    origemdestinodistanciatempo\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    011000111000100\n    1110001110002309.056.16906\n    2110001110003399.56.28906\n    311000111000481.20111.91775\n    4110001110005391.7046.13636\n    5110001110006353.4175.53989\n    6110001110007313.5926.18117\n    7110001110008326.9835.34175\n    8110001110009145.6782.346\n    9110001110010649.54513.405\n    10110001110011214.1253.83481\n    11110001110012130.772.54781\n    12110001110013357.5117.13067\n    1311000111001460.21031.02275\n    14110001110015172.9263.18425\n    ⋮⋮⋮⋮⋮\n    31,024,895530010522200161.7292.356\n    31,024,896530010522205382.7095.47956\n    31,024,897530010522220161.6032.24894\n    31,024,898530010522230190.0013.21608\n    31,024,89953001053001000\n  \n  \n  \n    31,024,900 rows × 4 columns"
  },
  {
    "objectID": "sections/database_indicadores.html",
    "href": "sections/database_indicadores.html",
    "title": "Indicadores",
    "section": "",
    "text": "Descrição\nEntre os desafios mais urgentes do Sistema Único de Saúde (SUS) estão a ampliação do acesso e a adequação dos serviços ofertados. No Brasil, as relações existentes entre regiões e redes de atenção à saúde indicam que o avanço do processo de regionalização do SUS pode interferir positivamente na oferta de ações de serviços de saúde, tornando-a mais eficiente e abrangente.\nSaiba mais\nPlataforma de acesso aos dados\n\n\nScrap\n\ndef scrap_indicator(driver, url, n_files=10):\n  driver.maximize_window()\n  anchors = None\n  columns = None\n  checkboxes = None\n  for i in tqdm(range(n_files)):\n    driver.get(url + 'clrSession=true')\n    driver.find_element(By.XPATH, \"//input[@type='radio' and @value='4']\").click()\n    columns = driver.find_elements(\n      By.XPATH, \"//input[@type='checkbox' and @onclick='SelAll(this)']\")\n    for column in columns: column.click()\n    driver.find_element(By.XPATH, \"//input[@id='btnEnviar']\").click()\n    if anchors == None:\n      anchors = driver.find_elements(By.CSS_SELECTOR, \"a[href*=listaLocs]\")\n      anchors = set([a.get_attribute('href') for a in anchors])\n      anchors = sorted(list(anchors))\n    for a in anchors: driver.execute_script(a[:-1])\n    checkboxes = driver.find_elements(\n      By.XPATH, \"//input[@type='checkbox' and @onclick='SelAll(this)']\")\n    n_cks = len(checkboxes)\n    pos_list = np.arange(0, n_cks, n_cks/10, dtype=int)\n    bgn = pos_list[i]\n    try: end = pos_list[i+1]\n    except: end = len(checkboxes)\n    selected_boxes = checkboxes[bgn:end]\n    for checkbox in selected_boxes:\n      if not checkbox.is_selected() and checkbox.is_displayed():\n        checkbox.click()\n    driver.find_element(By.XPATH, \"//input[@id='btnEnviar2']\").click()\n    driver.find_element(By.XPATH, \"//input[@id='btnTabela']\").click()\n    driver.get(url.replace('indicadores.php', 'output.php') + 'export=2')\n    print(f'{i+1:02}/{n_files}: checkboxes={n_cks}, selected={len(selected_boxes)}')\n    driver.switch_to.window(driver.window_handles[0])\n\n\nurl = 'https://indicadores.resbr.net.br/view/indicadores.php?'\nchromedriver = '/Users/lucas/Desktop/chromedriver'\ndriver = webdriver.Chrome(chromedriver)\nscrap_indicator(driver, url)\n\n/var/folders/9d/972tfrtd01z2hhl836z97zdr0000gn/T/ipykernel_83928/4099842114.py:3: DeprecationWarning:\n\nexecutable_path has been deprecated, please pass in a Service object\n\n 10%|█         | 1/10 [00:22<03:23, 22.56s/it]\n\n\n01/10: checkboxes=465, selected=46\n\n\n 20%|██        | 2/10 [00:30<01:49, 13.73s/it]\n\n\n02/10: checkboxes=465, selected=46\n\n\n 30%|███       | 3/10 [00:40<01:26, 12.38s/it]\n\n\n03/10: checkboxes=465, selected=46\n\n\n 40%|████      | 4/10 [00:51<01:10, 11.70s/it]\n\n\n04/10: checkboxes=465, selected=46\n\n\n 50%|█████     | 5/10 [00:59<00:51, 10.21s/it]\n\n\n05/10: checkboxes=465, selected=46\n\n\n 60%|██████    | 6/10 [01:11<00:43, 10.97s/it]\n\n\n06/10: checkboxes=465, selected=46\n\n\n 70%|███████   | 7/10 [01:22<00:33, 11.06s/it]\n\n\n07/10: checkboxes=465, selected=46\n\n\n 80%|████████  | 8/10 [01:34<00:22, 11.19s/it]\n\n\n08/10: checkboxes=465, selected=46\n\n\n 90%|█████████ | 9/10 [01:45<00:11, 11.25s/it]\n\n\n09/10: checkboxes=465, selected=46\n\n\n100%|██████████| 10/10 [01:56<00:00, 11.68s/it]\n\n\n10/10: checkboxes=465, selected=51\n\n\n\n\n\n\n# driver.close()\n\n\n\nTabela resultante\n\npath_dir = get_path('INDICADORES', '')\nfiles = [path_dir+pth for pth in listdir(path_dir) if pth[-3:] == 'csv']\ndfs = [pd.read_csv(fl, encoding='latin1', sep=';') for fl in files]\nfor df in dfs: print(df.shape)\n\n(524, 184)\n(595, 184)\n(673, 184)\n(511, 184)\n(645, 184)\n(516, 184)\n(528, 184)\n(695, 184)\n(734, 184)\n(587, 184)\n\n\n\ndf_indc = pd.concat(dfs)\ndf_indc\n\n\n\n\n\n  \n    \n      \n      CÓDIGO\n      Tipo Localidade\n      UF\n      CIR\n      Município\n      Número de municípios na Região de Saúde\n      Município de capital\n      Municípios que fazem parte da zona de fronteira - IBGE\n      Municípios que fazem parte da faixa de fronteira - IBGE\n      Municípios que fazem parte da fronteira estadual\n      ...\n      Porcentual de Despesas com Investimentos pelo Total de Despesas em Saúde (2014)\n      Porcentual de Tranferências SUS pelo Total de Despesas em Saúde (2014)\n      Porcentual de Recursos Próprios em Saúde - EC29 (2014)\n      Recursos de Transferências SUS por habitante (2014)\n      Despesas com Recursos Próprios em Saúde por habitante (2014)\n      Cobertura populacional estimada pelas equipes de Atenção Básica (2014)\n      % de população beneficiária de planos de saúde (Setembro/2015)\n      Porcentual de famílias beneficiárias do Programa Bolsa Família (2014)\n      Porcentual de população beneficiária do Programa Bolsa Família (2014)\n      Unnamed: 183\n    \n  \n  \n    \n      0\n      15.001\n      REGSAU\n      -\n      Araguaia\n      -\n      15\n      0\n      0\n      0\n      7\n      ...\n      8,53\n      54,61\n      18,83\n      213,11\n      161,66\n      63,90\n      5,15\n      34,43\n      31,59\n      NaN\n    \n    \n      1\n      15.002\n      REGSAU\n      -\n      Baixo Amazonas\n      -\n      14\n      0\n      3\n      5\n      5\n      ...\n      10,61\n      50,82\n      20,77\n      204,22\n      159,30\n      42,20\n      6,18\n      49,15\n      52,45\n      NaN\n    \n    \n      2\n      15.003\n      REGSAU\n      -\n      Carajás\n      -\n      17\n      0\n      0\n      0\n      9\n      ...\n      9,44\n      26,16\n      23,79\n      177,49\n      455,16\n      52,23\n      22,06\n      34,18\n      35,01\n      NaN\n    \n    \n      3\n      15.004\n      REGSAU\n      -\n      Lago de Tucuruí\n      -\n      6\n      0\n      0\n      0\n      0\n      ...\n      8,08\n      53,90\n      20,08\n      208,23\n      166,48\n      49,99\n      3,07\n      45,30\n      39,86\n      NaN\n    \n    \n      4\n      15.013\n      REGSAU\n      -\n      Marajó I\n      -\n      9\n      0\n      0\n      0\n      0\n      ...\n      20,06\n      51,15\n      17,21\n      158,85\n      111,80\n      24,19\n      1,02\n      60,93\n      61,59\n      NaN\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      582\n      171.780\n      MUNIC\n      Tocantins\n      Sudeste\n      Ponte Alta do Bom Jesus\n      15\n      Não\n      Não\n      Não\n      Sim\n      ...\n      8,43\n      34,79\n      28,54\n      199,83\n      369,45\n      100\n      2,02\n      51,97\n      46,93\n      NaN\n    \n    \n      583\n      171.800\n      MUNIC\n      Tocantins\n      Sudeste\n      Porto Alegre do Tocantins\n      15\n      Não\n      Não\n      Não\n      Não\n      ...\n      10,52\n      35,89\n      19,05\n      220,42\n      386,41\n      100\n      1,15\n      52,65\n      48,82\n      NaN\n    \n    \n      584\n      171.865\n      MUNIC\n      Tocantins\n      Sudeste\n      Rio da Conceição\n      15\n      Não\n      Não\n      Não\n      Sim\n      ...\n      13,86\n      20,14\n      15,52\n      162,11\n      538,36\n      100\n      0,81\n      47,84\n      48,19\n      NaN\n    \n    \n      585\n      172.090\n      MUNIC\n      Tocantins\n      Sudeste\n      Taguatinga\n      15\n      Não\n      Não\n      Não\n      Sim\n      ...\n      0,25\n      44,17\n      33,13\n      187,31\n      292,60\n      78,25\n      26,20\n      37,30\n      41,23\n      NaN\n    \n    \n      586\n      172.093\n      MUNIC\n      Tocantins\n      Sudeste\n      Taipas do Tocantins\n      15\n      Não\n      Não\n      Não\n      Não\n      ...\n      1,73\n      13,75\n      17,79\n      80,78\n      514,21\n      100\n      0,38\n      48,24\n      56,10\n      NaN\n    \n  \n\n6008 rows × 184 columns\n\n\n\n\n\nExportando tabela\n\npath_indc = path_dir + 'indicadores.csv.gzip'\ndf_indc.to_csv(path_indc, index=False)\n\n\npd.read_csv(path_indc, low_memory=False)\n\n\n\n\n\n  \n    \n      \n      CÓDIGO\n      Tipo Localidade\n      UF\n      CIR\n      Município\n      Número de municípios na Região de Saúde\n      Município de capital\n      Municípios que fazem parte da zona de fronteira - IBGE\n      Municípios que fazem parte da faixa de fronteira - IBGE\n      Municípios que fazem parte da fronteira estadual\n      ...\n      Porcentual de Despesas com Investimentos pelo Total de Despesas em Saúde (2014)\n      Porcentual de Tranferências SUS pelo Total de Despesas em Saúde (2014)\n      Porcentual de Recursos Próprios em Saúde - EC29 (2014)\n      Recursos de Transferências SUS por habitante (2014)\n      Despesas com Recursos Próprios em Saúde por habitante (2014)\n      Cobertura populacional estimada pelas equipes de Atenção Básica (2014)\n      % de população beneficiária de planos de saúde (Setembro/2015)\n      Porcentual de famílias beneficiárias do Programa Bolsa Família (2014)\n      Porcentual de população beneficiária do Programa Bolsa Família (2014)\n      Unnamed: 183\n    \n  \n  \n    \n      0\n      15.001\n      REGSAU\n      -\n      Araguaia\n      -\n      15\n      0\n      0\n      0\n      7\n      ...\n      8,53\n      54,61\n      18,83\n      213,11\n      161,66\n      63,90\n      5,15\n      34,43\n      31,59\n      NaN\n    \n    \n      1\n      15.002\n      REGSAU\n      -\n      Baixo Amazonas\n      -\n      14\n      0\n      3\n      5\n      5\n      ...\n      10,61\n      50,82\n      20,77\n      204,22\n      159,30\n      42,20\n      6,18\n      49,15\n      52,45\n      NaN\n    \n    \n      2\n      15.003\n      REGSAU\n      -\n      Carajás\n      -\n      17\n      0\n      0\n      0\n      9\n      ...\n      9,44\n      26,16\n      23,79\n      177,49\n      455,16\n      52,23\n      22,06\n      34,18\n      35,01\n      NaN\n    \n    \n      3\n      15.004\n      REGSAU\n      -\n      Lago de Tucuruí\n      -\n      6\n      0\n      0\n      0\n      0\n      ...\n      8,08\n      53,90\n      20,08\n      208,23\n      166,48\n      49,99\n      3,07\n      45,30\n      39,86\n      NaN\n    \n    \n      4\n      15.013\n      REGSAU\n      -\n      Marajó I\n      -\n      9\n      0\n      0\n      0\n      0\n      ...\n      20,06\n      51,15\n      17,21\n      158,85\n      111,80\n      24,19\n      1,02\n      60,93\n      61,59\n      NaN\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      6003\n      171.780\n      MUNIC\n      Tocantins\n      Sudeste\n      Ponte Alta do Bom Jesus\n      15\n      Não\n      Não\n      Não\n      Sim\n      ...\n      8,43\n      34,79\n      28,54\n      199,83\n      369,45\n      100\n      2,02\n      51,97\n      46,93\n      NaN\n    \n    \n      6004\n      171.800\n      MUNIC\n      Tocantins\n      Sudeste\n      Porto Alegre do Tocantins\n      15\n      Não\n      Não\n      Não\n      Não\n      ...\n      10,52\n      35,89\n      19,05\n      220,42\n      386,41\n      100\n      1,15\n      52,65\n      48,82\n      NaN\n    \n    \n      6005\n      171.865\n      MUNIC\n      Tocantins\n      Sudeste\n      Rio da Conceição\n      15\n      Não\n      Não\n      Não\n      Sim\n      ...\n      13,86\n      20,14\n      15,52\n      162,11\n      538,36\n      100\n      0,81\n      47,84\n      48,19\n      NaN\n    \n    \n      6006\n      172.090\n      MUNIC\n      Tocantins\n      Sudeste\n      Taguatinga\n      15\n      Não\n      Não\n      Não\n      Sim\n      ...\n      0,25\n      44,17\n      33,13\n      187,31\n      292,60\n      78,25\n      26,20\n      37,30\n      41,23\n      NaN\n    \n    \n      6007\n      172.093\n      MUNIC\n      Tocantins\n      Sudeste\n      Taipas do Tocantins\n      15\n      Não\n      Não\n      Não\n      Não\n      ...\n      1,73\n      13,75\n      17,79\n      80,78\n      514,21\n      100\n      0,38\n      48,24\n      56,10\n      NaN\n    \n  \n\n6008 rows × 184 columns"
  },
  {
    "objectID": "sections/database_localidades.html",
    "href": "sections/database_localidades.html",
    "title": "Localidades",
    "section": "",
    "text": "import pandas as pd\nfrom utils import get_path, group_cols\n# from datatable import dt, f, as_type"
  },
  {
    "objectID": "sections/database_localidades.html#municípios",
    "href": "sections/database_localidades.html#municípios",
    "title": "Localidades",
    "section": "Municípios",
    "text": "Municípios\n\nurl_muns = 'https://raw.githubusercontent.com/kelvins/Municipios-Brasileiros/main/csv/municipios.csv'\npath_muns = get_path('LOCALIDADES', 'municipios.csv.gzip')\n# df_muns = pd.read_csv(url_muns)\n# df_muns.to_csv(path_muns, index=False)\ndf_muns = pd.read_csv(path_muns)\ndf_muns\n\n\n\n\n\n  \n    \n      \n      codigo_ibge\n      nome\n      latitude\n      longitude\n      capital\n      codigo_uf\n      siafi_id\n      ddd\n      fuso_horario\n    \n  \n  \n    \n      0\n      5200050\n      Abadia de Goiás\n      -16.75730\n      -49.4412\n      0\n      52\n      1050\n      62\n      America/Sao_Paulo\n    \n    \n      1\n      3100104\n      Abadia dos Dourados\n      -18.48310\n      -47.3916\n      0\n      31\n      4001\n      34\n      America/Sao_Paulo\n    \n    \n      2\n      5200100\n      Abadiânia\n      -16.19700\n      -48.7057\n      0\n      52\n      9201\n      62\n      America/Sao_Paulo\n    \n    \n      3\n      3100203\n      Abaeté\n      -19.15510\n      -45.4444\n      0\n      31\n      4003\n      37\n      America/Sao_Paulo\n    \n    \n      4\n      1500107\n      Abaetetuba\n      -1.72183\n      -48.8788\n      0\n      15\n      401\n      91\n      America/Sao_Paulo\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      5565\n      2933604\n      Xique-Xique\n      -10.82300\n      -42.7245\n      0\n      29\n      3971\n      74\n      America/Sao_Paulo\n    \n    \n      5566\n      2517407\n      Zabelê\n      -8.07901\n      -37.1057\n      0\n      25\n      542\n      83\n      America/Sao_Paulo\n    \n    \n      5567\n      3557154\n      Zacarias\n      -21.05060\n      -50.0552\n      0\n      35\n      2973\n      18\n      America/Sao_Paulo\n    \n    \n      5568\n      2114007\n      Zé Doca\n      -3.27014\n      -45.6553\n      0\n      21\n      1287\n      98\n      America/Sao_Paulo\n    \n    \n      5569\n      4219853\n      Zortéa\n      -27.45210\n      -51.5520\n      0\n      42\n      950\n      49\n      America/Sao_Paulo\n    \n  \n\n5570 rows × 9 columns"
  },
  {
    "objectID": "sections/database_localidades.html#regiões-de-saúde",
    "href": "sections/database_localidades.html#regiões-de-saúde",
    "title": "Localidades",
    "section": "Regiões de Saúde",
    "text": "Regiões de Saúde\n\nurl_rsau = 'http://www.ans.gov.br/images/stories/noticias/planilha/regionais%20de%20sade.xls'\npath_rsau = get_path('LOCALIDADES', 'regioes_saude.csv.gzip')\n# df_rsau = pd.read_excel(url_rsau, header=2)\n# df_rsau.to_csv(path_rsau, index=False)\ndf_rsau = pd.read_csv(path_rsau)\ndf_rsau\n\n\n\n\n\n  \n    \n      \n      UF\n      NOME DA REGIÃO DE SAÚDE\n      NOME DO MUNICÍPIO\n      CÓD. IBGE DO MUNICÍPIO\n    \n  \n  \n    \n      0\n      AC\n      Acre\n      Acrelândia\n      120001\n    \n    \n      1\n      AC\n      Acre\n      Bujari\n      120013\n    \n    \n      2\n      AC\n      Acre\n      Capixaba\n      120017\n    \n    \n      3\n      AC\n      Acre\n      Manoel Urbano\n      120034\n    \n    \n      4\n      AC\n      Acre\n      Plácido de Castro\n      120038\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      5561\n      TO\n      Região de Saúde Sudeste\n      Ponte Alta do Bom Jesus\n      171780\n    \n    \n      5562\n      TO\n      Região de Saúde Sudeste\n      Porto Alegre do Tocantins\n      171800\n    \n    \n      5563\n      TO\n      Região de Saúde Sudeste\n      Rio da Conceição\n      171865\n    \n    \n      5564\n      TO\n      Região de Saúde Sudeste\n      Taguatinga\n      172090\n    \n    \n      5565\n      TO\n      Região de Saúde Sudeste\n      Taipas do Tocantins\n      172093\n    \n  \n\n5566 rows × 4 columns"
  },
  {
    "objectID": "sections/database_localidades.html#regiões-do-brasil",
    "href": "sections/database_localidades.html#regiões-do-brasil",
    "title": "Localidades",
    "section": "Regiões do Brasil",
    "text": "Regiões do Brasil\n\nurl_regs = 'https://www.estadosecapitaisdobrasil.com/'\npath_regs = get_path('LOCALIDADES', 'regioes.csv.gzip')\n# df_regs = pd.read_html(url_regs)[0]\n# df_regs.to_csv(path_regs, index=False)\ndf_regs = pd.read_csv(path_regs)\ndf_regs\n\n\n\n\n\n  \n    \n      \n      Bandeira\n      Estado\n      Sigla\n      Capital\n      Região\n    \n  \n  \n    \n      0\n      NaN\n      Acre\n      AC\n      Rio Branco\n      Norte\n    \n    \n      1\n      NaN\n      Alagoas\n      AL\n      Maceió\n      Nordeste\n    \n    \n      2\n      NaN\n      Amapá\n      AP\n      Macapá\n      Norte\n    \n    \n      3\n      NaN\n      Amazonas\n      AM\n      Manaus\n      Norte\n    \n    \n      4\n      NaN\n      Bahia\n      BA\n      Salvador\n      Nordeste\n    \n    \n      5\n      NaN\n      Ceará\n      CE\n      Fortaleza\n      Nordeste\n    \n    \n      6\n      NaN\n      Distrito Federal\n      DF\n      Brasília\n      Centro-Oeste\n    \n    \n      7\n      NaN\n      Espírito Santo\n      ES\n      Vitória\n      Sudeste\n    \n    \n      8\n      NaN\n      Goiás\n      GO\n      Goiânia\n      Centro-Oeste\n    \n    \n      9\n      NaN\n      Maranhão\n      MA\n      São Luís\n      Nordeste\n    \n    \n      10\n      NaN\n      Mato Grosso\n      MT\n      Cuiabá\n      Centro-Oeste\n    \n    \n      11\n      NaN\n      Mato Grosso do Sul\n      MS\n      Campo Grande\n      Centro-Oeste\n    \n    \n      12\n      NaN\n      Minas Gerais\n      MG\n      Belo Horizonte\n      Sudeste\n    \n    \n      13\n      NaN\n      Pará\n      PA\n      Belém\n      Norte\n    \n    \n      14\n      NaN\n      Paraíba\n      PB\n      João Pessoa\n      Nordeste\n    \n    \n      15\n      NaN\n      Paraná\n      PR\n      Curitiba\n      Sul\n    \n    \n      16\n      NaN\n      Pernambuco\n      PE\n      Recife\n      Nordeste\n    \n    \n      17\n      NaN\n      Piauí\n      PI\n      Teresina\n      Nordeste\n    \n    \n      18\n      NaN\n      Rio de Janeiro\n      RJ\n      Rio de Janeiro\n      Sudeste\n    \n    \n      19\n      NaN\n      Rio Grande do Norte\n      RN\n      Natal\n      Nordeste\n    \n    \n      20\n      NaN\n      Rio Grande do Sul\n      RS\n      Porto Alegre\n      Sul\n    \n    \n      21\n      NaN\n      Rondônia\n      RO\n      Porto Velho\n      Norte\n    \n    \n      22\n      NaN\n      Roraima\n      RR\n      Boa Vista\n      Norte\n    \n    \n      23\n      NaN\n      Santa Catarina\n      SC\n      Florianópolis\n      Sul\n    \n    \n      24\n      NaN\n      São Paulo\n      SP\n      São Paulo\n      Sudeste\n    \n    \n      25\n      NaN\n      Sergipe\n      SE\n      Aracaju\n      Nordeste\n    \n    \n      26\n      NaN\n      Tocantins\n      TO\n      Palmas\n      Norte"
  },
  {
    "objectID": "sections/database_localidades.html#merge",
    "href": "sections/database_localidades.html#merge",
    "title": "Localidades",
    "section": "Merge",
    "text": "Merge\n\ndf_loc = df_muns.copy()\ndf_loc['codigo_ibge'] = df_loc['codigo_ibge'].apply(lambda x: int(str(x)[:6]))\ndf_loc = df_loc.merge(df_rsau, how='left', left_on='codigo_ibge', right_on='CÓD. IBGE DO MUNICÍPIO')\ndf_loc = df_loc.merge(df_regs, how='left', left_on='UF', right_on='Sigla')\ndf_loc\n\n\n\n\n\n  \n    \n      \n      codigo_ibge\n      nome\n      latitude\n      longitude\n      capital\n      codigo_uf\n      siafi_id\n      ddd\n      fuso_horario\n      UF\n      NOME DA REGIÃO DE SAÚDE\n      NOME DO MUNICÍPIO\n      CÓD. IBGE DO MUNICÍPIO\n      Bandeira\n      Estado\n      Sigla\n      Capital\n      Região\n    \n  \n  \n    \n      0\n      520005\n      Abadia de Goiás\n      -16.75730\n      -49.4412\n      0\n      52\n      1050\n      62\n      America/Sao_Paulo\n      GO\n      Central\n      Abadia de Goiás\n      520005.0\n      NaN\n      Goiás\n      GO\n      Goiânia\n      Centro-Oeste\n    \n    \n      1\n      310010\n      Abadia dos Dourados\n      -18.48310\n      -47.3916\n      0\n      31\n      4001\n      34\n      America/Sao_Paulo\n      MG\n      Uberlândia\n      Abadia dos Dourados\n      310010.0\n      NaN\n      Minas Gerais\n      MG\n      Belo Horizonte\n      Sudeste\n    \n    \n      2\n      520010\n      Abadiânia\n      -16.19700\n      -48.7057\n      0\n      52\n      9201\n      62\n      America/Sao_Paulo\n      GO\n      Pirineus\n      Abadiânia\n      520010.0\n      NaN\n      Goiás\n      GO\n      Goiânia\n      Centro-Oeste\n    \n    \n      3\n      310020\n      Abaeté\n      -19.15510\n      -45.4444\n      0\n      31\n      4003\n      37\n      America/Sao_Paulo\n      MG\n      Sete Lagoas\n      Abaeté\n      310020.0\n      NaN\n      Minas Gerais\n      MG\n      Belo Horizonte\n      Sudeste\n    \n    \n      4\n      150010\n      Abaetetuba\n      -1.72183\n      -48.8788\n      0\n      15\n      401\n      91\n      America/Sao_Paulo\n      PA\n      Alça Viária\n      Abaetetuba\n      150010.0\n      NaN\n      Pará\n      PA\n      Belém\n      Norte\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      5565\n      293360\n      Xique-Xique\n      -10.82300\n      -42.7245\n      0\n      29\n      3971\n      74\n      America/Sao_Paulo\n      BA\n      Irecê\n      Xique-Xique\n      293360.0\n      NaN\n      Bahia\n      BA\n      Salvador\n      Nordeste\n    \n    \n      5566\n      251740\n      Zabelê\n      -8.07901\n      -37.1057\n      0\n      25\n      542\n      83\n      America/Sao_Paulo\n      PB\n      V Núcleo Regional de Saúde\n      Zabelê\n      251740.0\n      NaN\n      Paraíba\n      PB\n      João Pessoa\n      Nordeste\n    \n    \n      5567\n      355715\n      Zacarias\n      -21.05060\n      -50.0552\n      0\n      35\n      2973\n      18\n      America/Sao_Paulo\n      SP\n      São José do Rio Preto\n      Zacarias\n      355715.0\n      NaN\n      São Paulo\n      SP\n      São Paulo\n      Sudeste\n    \n    \n      5568\n      211400\n      Zé Doca\n      -3.27014\n      -45.6553\n      0\n      21\n      1287\n      98\n      America/Sao_Paulo\n      MA\n      Alto Turi\n      Zé Doca\n      211400.0\n      NaN\n      Maranhão\n      MA\n      São Luís\n      Nordeste\n    \n    \n      5569\n      421985\n      Zortéa\n      -27.45210\n      -51.5520\n      0\n      42\n      950\n      49\n      America/Sao_Paulo\n      SC\n      Joaçaba\n      Zortéa\n      421985.0\n      NaN\n      Santa Catarina\n      SC\n      Florianópolis\n      Sul\n    \n  \n\n5570 rows × 18 columns"
  },
  {
    "objectID": "sections/database_localidades.html#ajustando-colunas",
    "href": "sections/database_localidades.html#ajustando-colunas",
    "title": "Localidades",
    "section": "Ajustando Colunas",
    "text": "Ajustando Colunas\n\ncolumns = {\n  'codigo_ibge': 'cod_municipio',\n  'nome': 'nome_municipio',\n  'capital': 'capital',\n  'NOME DA REGIÃO DE SAÚDE': 'nome_regiao_saude',\n  'codigo_uf': 'cod_uf',\n  'UF': 'uf',\n  'Estado': 'nome_uf',\n  'Região': 'regiao',\n  'latitude': 'latitude',\n  'longitude': 'longitude',\n}\n\n\ndf_loc = df_loc[list(columns)]\ndf_loc = df_loc.rename(columns=columns)\ndf_loc\n\n\n\n\n\n  \n    \n      \n      cod_municipio\n      nome_municipio\n      capital\n      nome_regiao_saude\n      cod_uf\n      uf\n      nome_uf\n      regiao\n      latitude\n      longitude\n    \n  \n  \n    \n      0\n      520005\n      Abadia de Goiás\n      0\n      Central\n      52\n      GO\n      Goiás\n      Centro-Oeste\n      -16.75730\n      -49.4412\n    \n    \n      1\n      310010\n      Abadia dos Dourados\n      0\n      Uberlândia\n      31\n      MG\n      Minas Gerais\n      Sudeste\n      -18.48310\n      -47.3916\n    \n    \n      2\n      520010\n      Abadiânia\n      0\n      Pirineus\n      52\n      GO\n      Goiás\n      Centro-Oeste\n      -16.19700\n      -48.7057\n    \n    \n      3\n      310020\n      Abaeté\n      0\n      Sete Lagoas\n      31\n      MG\n      Minas Gerais\n      Sudeste\n      -19.15510\n      -45.4444\n    \n    \n      4\n      150010\n      Abaetetuba\n      0\n      Alça Viária\n      15\n      PA\n      Pará\n      Norte\n      -1.72183\n      -48.8788\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      5565\n      293360\n      Xique-Xique\n      0\n      Irecê\n      29\n      BA\n      Bahia\n      Nordeste\n      -10.82300\n      -42.7245\n    \n    \n      5566\n      251740\n      Zabelê\n      0\n      V Núcleo Regional de Saúde\n      25\n      PB\n      Paraíba\n      Nordeste\n      -8.07901\n      -37.1057\n    \n    \n      5567\n      355715\n      Zacarias\n      0\n      São José do Rio Preto\n      35\n      SP\n      São Paulo\n      Sudeste\n      -21.05060\n      -50.0552\n    \n    \n      5568\n      211400\n      Zé Doca\n      0\n      Alto Turi\n      21\n      MA\n      Maranhão\n      Nordeste\n      -3.27014\n      -45.6553\n    \n    \n      5569\n      421985\n      Zortéa\n      0\n      Joaçaba\n      42\n      SC\n      Santa Catarina\n      Sul\n      -27.45210\n      -51.5520\n    \n  \n\n5570 rows × 10 columns"
  },
  {
    "objectID": "sections/database_sih.html",
    "href": "sections/database_sih.html",
    "title": "SIH",
    "section": "",
    "text": "from utils import data_load\nfrom datatable import dt, f"
  },
  {
    "objectID": "sections/database_sih.html#filtro-de-colunas",
    "href": "sections/database_sih.html#filtro-de-colunas",
    "title": "SIH",
    "section": "Filtro de Colunas",
    "text": "Filtro de Colunas\n\ncols_sih = {\n  'ano_internacao': 'ano',\n  'PROC_REA': 'parto_normal',\n  'CNES': 'cnes',\n  'def_idade_anos': 'idade',\n  'int_codigo_adotado': 'hosp_cod_municipio',\n  'res_codigo_adotado': 'cod_municipio',\n}"
  },
  {
    "objectID": "sections/database_sih.html#filtro-de-linhas",
    "href": "sections/database_sih.html#filtro-de-linhas",
    "title": "SIH",
    "section": "Filtro de Linhas",
    "text": "Filtro de Linhas\n\ndef filter_sih(df, cols):\n  cols = list(cols.values())[:-1]\n  cols = [c for c in cols if c in df.names]\n  df_filtered = df[\n    (\n      (f['ano'] > 2009) & (f['ano'] < 2020)\n    ) & (\n      (f['idade'] > 9) & (f['idade'] < 50)\n    ) & (\n      (f['parto_normal'] == 310010039) | (f['parto_normal'] == 411010034)\n    ) & (\n      ((f['hosp_cod_municipio'] != None) & (f['cod_municipio'] != None))\n    ) & (\n      (f['cnes'] != None)\n    ), cols]\n  return df_filtered"
  },
  {
    "objectID": "sections/deslc_uf.html",
    "href": "sections/deslc_uf.html",
    "title": "Deslocamento de Gestantes",
    "section": "",
    "text": "output_deslc = get_path('GESTANTES', 'deslocamentos.csv.gzip')\ndf_deslc = pd.read_csv(output_deslc)\ndf_deslc\n\n\n\n\n\n  \n    \n      \n      bienio\n      parto_normal\n      origem\n      destino\n      mun_diff\n      regsau_diff\n      distancia\n      tempo\n      regiao\n      uf\n      ...\n      capital\n      socioecon\n      latitude\n      longitude\n      hosp_latitude\n      hosp_longitude\n      hosp_cnes\n      hosp_regiao_saude\n      hosp_uf\n      count\n    \n  \n  \n    \n      0\n      0\n      1\n      355030\n      355030\n      0\n      0\n      0.0000\n      0.000000\n      SD\n      SP\n      ...\n      1\n      5\n      -23.548\n      -46.636\n      -23.548\n      -46.636\n      2077701\n      3501\n      SP\n      76\n    \n    \n      1\n      0\n      1\n      130260\n      130260\n      0\n      0\n      0.0000\n      0.000000\n      NT\n      AM\n      ...\n      1\n      4\n      -3.102\n      -60.025\n      -3.102\n      -60.025\n      3004104\n      1301\n      AM\n      74\n    \n    \n      2\n      0\n      1\n      120040\n      120040\n      0\n      0\n      0.0000\n      0.000000\n      NT\n      AC\n      ...\n      1\n      2\n      -9.975\n      -67.810\n      -9.975\n      -67.810\n      2000733\n      1201\n      AC\n      73\n    \n    \n      3\n      0\n      1\n      160030\n      160030\n      0\n      0\n      0.0000\n      0.000000\n      NT\n      AP\n      ...\n      1\n      2\n      0.039\n      -51.066\n      0.039\n      -51.066\n      2020068\n      1601\n      AP\n      73\n    \n    \n      4\n      0\n      1\n      150180\n      150180\n      0\n      0\n      0.0000\n      0.000000\n      NT\n      PA\n      ...\n      0\n      1\n      -1.682\n      -50.480\n      -1.682\n      -50.480\n      2418657\n      1508\n      PA\n      73\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      123865\n      1\n      1\n      315980\n      270430\n      1\n      1\n      2275.6718\n      28.283556\n      SD\n      MG\n      ...\n      0\n      5\n      -18.839\n      -50.121\n      -9.666\n      -35.735\n      9923837\n      2701\n      AL\n      1\n    \n    \n      123866\n      1\n      1\n      350400\n      270430\n      1\n      1\n      2599.6191\n      31.918583\n      SD\n      SP\n      ...\n      0\n      4\n      -22.662\n      -50.412\n      -9.666\n      -35.735\n      9923837\n      2701\n      AL\n      1\n    \n    \n      123867\n      1\n      1\n      351880\n      270430\n      1\n      1\n      2404.7096\n      29.901278\n      SD\n      SP\n      ...\n      0\n      4\n      -23.463\n      -46.533\n      -9.666\n      -35.735\n      9923837\n      2701\n      AL\n      1\n    \n    \n      123868\n      1\n      1\n      354100\n      270430\n      1\n      1\n      2490.4019\n      31.241472\n      SD\n      SP\n      ...\n      0\n      4\n      -24.006\n      -46.403\n      -9.666\n      -35.735\n      9923837\n      2701\n      AL\n      1\n    \n    \n      123869\n      1\n      1\n      510623\n      270430\n      1\n      1\n      3217.7273\n      39.940667\n      CO\n      MT\n      ...\n      0\n      2\n      -14.797\n      -57.288\n      -9.666\n      -35.735\n      9923837\n      2701\n      AL\n      1\n    \n  \n\n123870 rows × 21 columns\n\n\n\n\ndf_deslc.to_excel(output_deslc.replace('csv.gzip', 'xlsx'), index=False)\n\n\ndf_deslc.info()\n\n<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 97665 entries, 0 to 97664\nData columns (total 19 columns):\n #   Column             Non-Null Count  Dtype  \n---  ------             --------------  -----  \n 0   bienio             97665 non-null  int64  \n 1   parto_normal       97665 non-null  int64  \n 2   origem             97665 non-null  int64  \n 3   destino            97665 non-null  int64  \n 4   mun_diff           97665 non-null  int64  \n 5   regsau_diff        97665 non-null  int64  \n 6   distancia          97665 non-null  float64\n 7   tempo              97665 non-null  float64\n 8   regiao             97665 non-null  object \n 9   uf                 97665 non-null  object \n 10  regiao_saude       97665 non-null  int64  \n 11  capital            97665 non-null  int64  \n 12  socioecon          97665 non-null  int64  \n 13  latitude           97665 non-null  float64\n 14  longitude          97665 non-null  float64\n 15  hosp_latitude      97665 non-null  float64\n 16  hosp_longitude     97665 non-null  float64\n 17  hosp_regiao_saude  97665 non-null  int64  \n 18  count              97665 non-null  int64  \ndtypes: float64(6), int64(11), object(2)\nmemory usage: 14.2+ MB\n\n\n\ndf_deslc['count'].sum()\n\n1350318\n\n\n\nregioes = df_deslc['regiao'].unique()\nregioes\n\narray(['Sudeste', 'Nordeste', 'Norte', 'Centro-Oeste', 'Sul'],\n      dtype=object)\n\n\n\ndesc_regiao = dict()\nfor regiao in regioes:\n  desc_regiao[regiao] = df_deslc[df_deslc['regiao'] == regiao]\n\n\ndesc_regiao[regioes[0]]\n\n\n\n\n\n  \n    \n      \n      bienio\n      parto_normal\n      origem\n      destino\n      mun_diff\n      regsau_diff\n      distancia\n      tempo\n      regiao\n      uf\n      regiao_saude\n      capital\n      socioecon\n      latitude\n      longitude\n      hosp_latitude\n      hosp_longitude\n      hosp_regiao_saude\n      count\n    \n  \n  \n    \n      0\n      0\n      1\n      355030\n      355030\n      0\n      0\n      0.0000\n      0.000000\n      Sudeste\n      SP\n      3501\n      1\n      5\n      -23.548\n      -46.636\n      -23.548\n      -46.636\n      3501\n      2368\n    \n    \n      1\n      0\n      0\n      355030\n      355030\n      0\n      0\n      0.0000\n      0.000000\n      Sudeste\n      SP\n      3501\n      1\n      5\n      -23.548\n      -46.636\n      -23.548\n      -46.636\n      3501\n      2020\n    \n    \n      2\n      0\n      1\n      330455\n      330455\n      0\n      0\n      0.0000\n      0.000000\n      Sudeste\n      RJ\n      3305\n      1\n      5\n      -22.903\n      -43.208\n      -22.903\n      -43.208\n      3305\n      1210\n    \n    \n      3\n      0\n      0\n      330455\n      330455\n      0\n      0\n      0.0000\n      0.000000\n      Sudeste\n      RJ\n      3305\n      1\n      5\n      -22.903\n      -43.208\n      -22.903\n      -43.208\n      3305\n      872\n    \n    \n      14\n      0\n      1\n      310620\n      310620\n      0\n      0\n      0.0000\n      0.000000\n      Sudeste\n      MG\n      3101\n      1\n      1\n      -19.817\n      -43.956\n      -19.817\n      -43.956\n      3101\n      466\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      97494\n      1\n      1\n      313440\n      521150\n      1\n      1\n      274.7725\n      3.272722\n      Sudeste\n      MG\n      3113\n      0\n      3\n      -19.728\n      -50.196\n      -18.420\n      -49.218\n      5216\n      1\n    \n    \n      97552\n      1\n      1\n      330100\n      521760\n      1\n      1\n      1232.6051\n      15.700639\n      Sudeste\n      RJ\n      3307\n      0\n      5\n      -21.754\n      -41.324\n      -15.453\n      -47.614\n      5206\n      1\n    \n    \n      97625\n      1\n      1\n      353730\n      522040\n      1\n      1\n      356.4371\n      5.702722\n      Sudeste\n      SP\n      3506\n      0\n      3\n      -21.420\n      -50.078\n      -18.991\n      -50.544\n      5213\n      1\n    \n    \n      97626\n      1\n      1\n      354340\n      522040\n      1\n      1\n      449.7193\n      6.066944\n      Sudeste\n      SP\n      3518\n      0\n      5\n      -21.178\n      -47.810\n      -18.991\n      -50.544\n      5213\n      1\n    \n    \n      97640\n      1\n      1\n      312950\n      522045\n      1\n      1\n      598.9450\n      7.536861\n      Sudeste\n      MG\n      3113\n      0\n      3\n      -19.478\n      -46.539\n      -16.708\n      -49.093\n      5202\n      1\n    \n  \n\n26527 rows × 19 columns\n\n\n\n\ndesc_regiao[regioes[0]].info()\n\n<class 'pandas.core.frame.DataFrame'>\nInt64Index: 26527 entries, 0 to 97640\nData columns (total 19 columns):\n #   Column             Non-Null Count  Dtype  \n---  ------             --------------  -----  \n 0   bienio             26527 non-null  int64  \n 1   parto_normal       26527 non-null  int64  \n 2   origem             26527 non-null  int64  \n 3   destino            26527 non-null  int64  \n 4   mun_diff           26527 non-null  int64  \n 5   regsau_diff        26527 non-null  int64  \n 6   distancia          26527 non-null  float64\n 7   tempo              26527 non-null  float64\n 8   regiao             26527 non-null  object \n 9   uf                 26527 non-null  object \n 10  regiao_saude       26527 non-null  int64  \n 11  capital            26527 non-null  int64  \n 12  socioecon          26527 non-null  int64  \n 13  latitude           26527 non-null  float64\n 14  longitude          26527 non-null  float64\n 15  hosp_latitude      26527 non-null  float64\n 16  hosp_longitude     26527 non-null  float64\n 17  hosp_regiao_saude  26527 non-null  int64  \n 18  count              26527 non-null  int64  \ndtypes: float64(6), int64(11), object(2)\nmemory usage: 4.0+ MB\n\n\n\ndf_deslc['uf'].value_counts()\n\nMG    11715\nSP    10539\nBA     9845\nPE     7320\nRS     6471\nMA     5352\nPR     5322\nSC     4266\nPA     4134\nPB     3667\nCE     3581\nGO     3478\nPI     3225\nRN     3098\nRJ     2485\nMT     2161\nTO     2146\nAL     1886\nES     1788\nSE     1262\nMS     1261\nRO     1141\nAM      832\nAC      291\nAP      228\nRR      171\nName: uf, dtype: int64\n\n\n\ndf_deslc[df_deslc['uf'] == 'MG'].info()\n\n<class 'pandas.core.frame.DataFrame'>\nInt64Index: 11715 entries, 14 to 97640\nData columns (total 19 columns):\n #   Column             Non-Null Count  Dtype  \n---  ------             --------------  -----  \n 0   bienio             11715 non-null  int64  \n 1   parto_normal       11715 non-null  int64  \n 2   origem             11715 non-null  int64  \n 3   destino            11715 non-null  int64  \n 4   mun_diff           11715 non-null  int64  \n 5   regsau_diff        11715 non-null  int64  \n 6   distancia          11715 non-null  float64\n 7   tempo              11715 non-null  float64\n 8   regiao             11715 non-null  object \n 9   uf                 11715 non-null  object \n 10  regiao_saude       11715 non-null  int64  \n 11  capital            11715 non-null  int64  \n 12  socioecon          11715 non-null  int64  \n 13  latitude           11715 non-null  float64\n 14  longitude          11715 non-null  float64\n 15  hosp_latitude      11715 non-null  float64\n 16  hosp_longitude     11715 non-null  float64\n 17  hosp_regiao_saude  11715 non-null  int64  \n 18  count              11715 non-null  int64  \ndtypes: float64(6), int64(11), object(2)\nmemory usage: 1.8+ MB\n\n\n\n# df_deslc.to_pandas().to_excel(output_deslc.replace('csv.gzip', 'xlsx'), index=False)"
  },
  {
    "objectID": "sections/table_deslc.html",
    "href": "sections/table_deslc.html",
    "title": "Deslocamento",
    "section": "",
    "text": "import pandas as pd\nfrom utils import get_path, group_cols\nfrom datatable import dt, f"
  },
  {
    "objectID": "sections/table_deslc.html#tabela-procedimentos",
    "href": "sections/table_deslc.html#tabela-procedimentos",
    "title": "Deslocamento",
    "section": "Tabela Procedimentos",
    "text": "Tabela Procedimentos\n\nColunas da tabela\n\ncols_deslc = {\n  'ano': 'ano',\n  'parto_normal': 'parto_normal',\n  'cod_municipio': 'origem',\n  'hosp_cod_municipio': 'destino',\n  'cnes': 'hosp_cnes',\n  'count': 'count',\n  ...: None,\n}\n\n\n\nLinhas da tabela\n\ndef filter_deslc(df):\n  df_filtered = df[\n    (\n      f.ano == 2010\n    ) | (\n      f.ano == 2011\n    ) | (\n      f.ano == 2018\n    ) | (\n      f.ano == 2019\n    ), :]\n  return df_filtered\n\n\n\nCarregando tabela\n\npath_deslc = get_path('GESTANTES', 'procedimentos.csv.gzip')\ndf_deslc = dt.fread(path_deslc, columns=cols_deslc)\ndf_deslc = filter_deslc(df_deslc)\ndf_deslc\n\n\n\n  \n  \n    anoparto_normalhosp_cnesdestinoorigemcount\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    02010120777013550303550304358\n    12010120773883550303550304207\n    22010131517941302601302604145\n    320101104805300105300104099\n    42010120791863550303550304059\n    52010139563692927402927403935\n    620101267943106203106203797\n    72010122322800302800303533\n    82010122706093304553304553386\n    92010120400693518803518803213\n    102010157034251504201504203203\n    112010120200681600301600303194\n    122010122802483304553304553095\n    132010125661681400101400103063\n    142010130041041302601302602952\n    ⋮⋮⋮⋮⋮⋮⋮\n    187,4662019099238372704303556401\n    187,4672019099238372704304209101\n    187,4682019099238372704305102851\n    187,4692019099238372704305106221\n    187,4702019099238372704305107921\n  \n  \n  \n    187,471 rows × 6 columns\n  \n\n\n\n\n\nAtualizando variável ano (biênio)\nValor da variável bienio:\n\n0 (False) = 2010/11\n1 (True) = 2018/19\n\n\ndf_deslc[:, dt.update(ano = (f.ano == 2018) | (f.ano == 2019))]\ndf_deslc.names = {'ano': 'bienio'}\ndf_deslc\n\n\n\n  \n  \n    bienioparto_normalhosp_cnesdestinoorigemcount\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    00120777013550303550304358\n    10120773883550303550304207\n    20131517941302601302604145\n    301104805300105300104099\n    40120791863550303550304059\n    50139563692927402927403935\n    601267943106203106203797\n    70122322800302800303533\n    80122706093304553304553386\n    90120400693518803518803213\n    100157034251504201504203203\n    110120200681600301600303194\n    120122802483304553304553095\n    130125661681400101400103063\n    140130041041302601302602952\n    ⋮⋮⋮⋮⋮⋮⋮\n    187,4661099238372704303556401\n    187,4671099238372704304209101\n    187,4681099238372704305102851\n    187,4691099238372704305106221\n    187,4701099238372704305107921\n  \n  \n  \n    187,471 rows × 6 columns\n  \n\n\n\n\n\nTabela agrupada\n\ndf_deslc = group_cols(df_deslc, df_deslc.names[:-1])\ndf_deslc\n\n\n\n  \n  \n    bienioparto_normalhosp_cnesdestinoorigemcount\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    000272602902602901\n    100272602902607201\n    200942602902601402\n    300942602902602902\n    400942602902603452\n    500942602902604001\n    600942602902605202\n    700942602902605402\n    800942602902606402\n    900942602902606801\n    1000942602902607202\n    1100942602902607902\n    1200942602902609602\n    1300942602902610001\n    1400942602902610601\n    ⋮⋮⋮⋮⋮⋮⋮\n    124,9801199238372704303159801\n    124,9811199238372704303504001\n    124,9821199238372704303518801\n    124,9831199238372704303541001\n    124,9841199238372704305106231\n  \n  \n  \n    124,985 rows × 6 columns\n  \n\n\n\n\nwith all: 3_355_691 rows\nwithout age: 461_276 rows\nwithout age and cnes: 98_055 rows"
  },
  {
    "objectID": "sections/table_deslc.html#tabela-municípios",
    "href": "sections/table_deslc.html#tabela-municípios",
    "title": "Deslocamento",
    "section": "Tabela Municípios",
    "text": "Tabela Municípios\n\nColunas da tabela\n\ncols_mun = {\n  'cod_municipio': 'origem',\n  'regiao': 'regiao',\n  'uf': 'uf',\n  'cod_regiao_saude': 'regiao_saude',\n  'nome_regiao_saude': 'nome_regiao_saude',\n  'municipio': 'municipio',\n  'capital': 'capital',\n  'latitude': 'latitude',\n  'longitude': 'longitude',\n  'socioecon': 'socioecon',\n  ...: None\n}\n\n\ncols_mun_hosp = {\n  'cod_municipio': 'destino',\n  'uf': 'hosp_uf',\n  'cod_regiao_saude': 'hosp_regiao_saude',\n  'latitude': 'hosp_latitude',\n  'longitude': 'hosp_longitude',\n  ...: None\n}\n\n\n\nCarregando tabela\n\npath_mun = get_path('GESTANTES', 'municipios.csv.gzip')\ndf_mun = dt.fread(path_mun, columns=cols_mun)\ndf_mun\n\n\n\n  \n  \n    origemcapitalregiao_saudenome_regiao_saudeufregiaosocioeconlatitudelongitude\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    0520005052001CentralGOCentro-Oeste5−16.7573−49.4412\n    1310010031052Patrocínio Monte CarmeloMGSudeste2−18.4831−47.3916\n    2520010052011PirineusGOCentro-Oeste3−16.197−48.7057\n    3310020031067Sete LagoasMGSudeste3−19.1551−45.4444\n    4150010015011TocantinsPANorte1−1.72183−48.8788\n    523001002301919ª Região Brejo SantoCENordeste1−7.34588−39.0416\n    6290010029023SeabraBANordeste1−13.2488−41.6619\n    7290020029017Paulo AfonsoBANordeste1−8.72073−39.1162\n    841001004101818ª RS Cornélio ProcópioPRSul3−23.3049−50.3133\n    9420005042008Meio OesteSCSul3−27.6126−51.0233\n    10150013015003CarajásPANorte2−4.95333−48.3933\n    11420010042003XanxerêSCSul3−26.5716−52.3229\n    12310030031041ManhuaçuMGSudeste1−20.2996−42.4743\n    13260005026010RecifePENordeste5−7.90072−34.8984\n    14170025017007CantãoTONorte2−9.62101−49.1518\n    ⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮\n    5565293360029010IrecêBANordeste1−10.823−42.7245\n    55662517400250055ª RegiãoPBNordeste1−8.07901−37.1057\n    5567355715035156José BonifácioSPSudeste3−21.0506−50.0552\n    5568211400021019Zé DocaMANordeste1−3.27014−45.6553\n    5569421985042008Meio OesteSCSul3−27.4521−51.552\n  \n  \n  \n    5570 rows × 9 columns\n  \n\n\n\n\ndf_mun_hosp = dt.fread(path_mun, columns=cols_mun_hosp)\ndf_mun_hosp\n\n\n\n  \n  \n    destinohosp_regiao_saudehosp_ufhosp_latitudehosp_longitude\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    052000552001GO−16.7573−49.4412\n    131001031052MG−18.4831−47.3916\n    252001052011GO−16.197−48.7057\n    331002031067MG−19.1551−45.4444\n    415001015011PA−1.72183−48.8788\n    523001023019CE−7.34588−39.0416\n    629001029023BA−13.2488−41.6619\n    729002029017BA−8.72073−39.1162\n    841001041018PR−23.3049−50.3133\n    942000542008SC−27.6126−51.0233\n    1015001315003PA−4.95333−48.3933\n    1142001042003SC−26.5716−52.3229\n    1231003031041MG−20.2996−42.4743\n    1326000526010PE−7.90072−34.8984\n    1417002517007TO−9.62101−49.1518\n    ⋮⋮⋮⋮⋮⋮\n    556529336029010BA−10.823−42.7245\n    556625174025005PB−8.07901−37.1057\n    556735571535156SP−21.0506−50.0552\n    556821140021019MA−3.27014−45.6553\n    556942198542008SC−27.4521−51.552\n  \n  \n  \n    5570 rows × 5 columns\n  \n\n\n\n\n\nAbreviando valores coluna Região\n\nregioes = {\n  'Norte': 'NT',\n  'Nordeste': 'ND',\n  'Centro-Oeste': 'CO',\n  'Sudeste': 'SD',\n  'Sul': 'SL',\n}\n\n\nreg = df_mun[:, 'regiao']\nreg.replace(regioes)\ndf_mun['regiao'] = reg\ndf_mun\n\n\n\n  \n  \n    origemcapitalregiao_saudenome_regiao_saudeufregiaosocioeconlatitudelongitude\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    0520005052001CentralGOCO5−16.7573−49.4412\n    1310010031052Patrocínio Monte CarmeloMGSD2−18.4831−47.3916\n    2520010052011PirineusGOCO3−16.197−48.7057\n    3310020031067Sete LagoasMGSD3−19.1551−45.4444\n    4150010015011TocantinsPANT1−1.72183−48.8788\n    523001002301919ª Região Brejo SantoCEND1−7.34588−39.0416\n    6290010029023SeabraBAND1−13.2488−41.6619\n    7290020029017Paulo AfonsoBAND1−8.72073−39.1162\n    841001004101818ª RS Cornélio ProcópioPRSL3−23.3049−50.3133\n    9420005042008Meio OesteSCSL3−27.6126−51.0233\n    10150013015003CarajásPANT2−4.95333−48.3933\n    11420010042003XanxerêSCSL3−26.5716−52.3229\n    12310030031041ManhuaçuMGSD1−20.2996−42.4743\n    13260005026010RecifePEND5−7.90072−34.8984\n    14170025017007CantãoTONT2−9.62101−49.1518\n    ⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮\n    5565293360029010IrecêBAND1−10.823−42.7245\n    55662517400250055ª RegiãoPBND1−8.07901−37.1057\n    5567355715035156José BonifácioSPSD3−21.0506−50.0552\n    5568211400021019Zé DocaMAND1−3.27014−45.6553\n    5569421985042008Meio OesteSCSL3−27.4521−51.552\n  \n  \n  \n    5570 rows × 9 columns"
  },
  {
    "objectID": "sections/table_deslc.html#tabela-distâncias",
    "href": "sections/table_deslc.html#tabela-distâncias",
    "title": "Deslocamento",
    "section": "Tabela Distâncias",
    "text": "Tabela Distâncias\n\nCarregando tabela\n\noutput_dist = get_path('GESTANTES', 'distancias.csv.gzip')\ndf_dist = dt.fread(output_dist)\ndf_dist = df_dist[:, df_dist.names[:-1]]\ndf_dist\n\n\n\n  \n  \n    origemdestinodistanciatempo\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    035503035503000\n    135188035503019.73580.407306\n    233045533045500\n    335231035503042.42070.667611\n    433035033045536.8090.511\n    533017033045520.85120.317583\n    653001053001000\n    735157035503039.70460.739528\n    823044023044000\n    933004533045531.26660.469667\n    1033051033045525.63880.3935\n    1135344035503023.1510.460583\n    1223037023044016.71610.344111\n    1323076523044024.62760.501389\n    1423096023044055.95770.878444\n    ⋮⋮⋮⋮⋮\n    71,833530010521308376.3516.00058\n    71,834530010521770328.3734.72139\n    71,835530010522000153.6552.43711\n    71,836530010522020515.6686.85197\n    71,837530010522045207.4133.05281\n  \n  \n  \n    71,838 rows × 4 columns"
  },
  {
    "objectID": "sections/table_deslc.html#juntando-com-outras",
    "href": "sections/table_deslc.html#juntando-com-outras",
    "title": "Deslocamento",
    "section": "Juntando com outras",
    "text": "Juntando com outras\n\nJuntando com Distâncias\n\ndf_dist.key = ['origem', 'destino']\ndf_deslc = df_deslc[:, :, dt.join(df_dist)]\ndf_dist\n\n\n\n  \n  \n    origemdestinodistanciatempo\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    11000111000100\n    110001110002309.056.16906\n    11000111000481.20111.91775\n    110001110006353.4175.53989\n    110001110009145.6782.346\n    110001110012130.772.54781\n    110001110013357.5117.13067\n    110001110015172.9263.18425\n    110001110018114.0611.87139\n    110001110020505.8569.16514\n    11000111002596.60651.98553\n    11000111002848.60990.835667\n    110001110030297.4554.71864\n    110001110149217.3553.67378\n    110001110150153.3372.8455\n    ⋮⋮⋮⋮\n    530010522020515.6686.85197\n    530010522045207.4133.05281\n    530010522068255.5553.338\n    530010522200161.7292.356\n    53001053001000\n  \n  \n  \n    71,838 rows × 4 columns\n  \n\n\n\n\n\nJuntando com Municípios (res)\n\ndf_mun.key = 'origem'\ndf_deslc = df_deslc[:, :, dt.join(df_mun)]\ndf_mun\n\n\n\n  \n  \n    origemcapitalregiao_saudenome_regiao_saudeufregiaosocioeconlatitudelongitude\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    110001011005Zona da MataRONT1−11.9283−61.9953\n    110002011001Vale do JamariRONT1−9.90571−63.0325\n    110003011006Cone SulRONT2−13.4945−60.552\n    110004011002CaféRONT3−11.4343−61.4562\n    110005011006Cone SulRONT2−13.187−60.8168\n    110006011006Cone SulRONT2−13.1174−60.5454\n    110007011006Cone SulRONT2−12.9551−60.8947\n    110008011007Vale do GuaporéRONT1−12.4367−64.228\n    110009011002CaféRONT3−11.5266−61.0252\n    110010011004Madeira-MamoréRONT3−10.7889−65.3296\n    110011011003CentralRONT2−10.4318−62.4788\n    110012011003CentralRONT2−10.8777−61.9322\n    110013011001Vale do JamariRONT1−9.44363−61.9818\n    110014011005Zona da MataRONT1−11.7247−62.3127\n    110015011003CentralRONT2−10.7167−62.2565\n    ⋮⋮⋮⋮⋮⋮⋮⋮⋮\n    522200052002Centro SulGOCO3−16.7405−48.5159\n    522205052002Centro SulGOCO3−17.7322−49.8047\n    522220052003Entorno NorteGOCO2−15.0387−47.052\n    522230052018São Patrício IIGOCO2−15.4542−48.8819\n    530010153001Distrito FederalDFCO5−15.7795−47.9297\n  \n  \n  \n    5570 rows × 9 columns\n  \n\n\n\n\n\nJuntando com Municípios (hosp)\n\ndf_mun_hosp.key = 'destino'\ndf_deslc = df_deslc[:, :, dt.join(df_mun_hosp)]\ndf_deslc\n\n\n\n  \n  \n    bienioparto_normalhosp_cnesdestinoorigemcountdistanciatempocapitalregiao_saude…longitudehosp_regiao_saudehosp_ufhosp_latitudehosp_longitude\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    00027260290260290100026010…−35.025326010PE−8.28218−35.0253\n    10027260290260720116.81390.319111026010…−35.060926010PE−8.28218−35.0253\n    20094260290260140273.99771.34642026008…−35.183226010PE−8.28218−35.0253\n    30094260290260290200026010…−35.025326010PE−8.28218−35.0253\n    40094260290260345242.40650.630306026010…−34.978226010PE−8.28218−35.0253\n    50094260290260400181.50931.15006026006…−35.251426010PE−8.28218−35.0253\n    60094260290260520227.99070.378972026008…−35.224126010PE−8.28218−35.0253\n    700942602902605402103.1171.53569026006…−35.380126010PE−8.28218−35.0253\n    8009426029026064021041.41492026003…−35.567526010PE−8.28218−35.0253\n    90094260290260680162.86550.96025026010…−34.901326010PE−8.28218−35.0253\n    100094260290260720216.81390.319111026010…−35.060926010PE−8.28218−35.0253\n    110094260290260790219.31150.414222026010…−35.01526010PE−8.28218−35.0253\n    120094260290260960241.47520.5945026010…−34.854526010PE−8.28218−35.0253\n    130094260290261000189.25131.06403026008…−35.58926010PE−8.28218−35.0253\n    140094260290261060169.37761.02681026006…−35.171626010PE−8.28218−35.0253\n    ⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋱⋮⋮⋮⋮⋮\n    124,98011992383727043031598012275.6728.2836031032…−50.120827001AL−9.66599−35.735\n    124,98111992383727043035040012599.6231.9186035092…−50.418327001AL−9.66599−35.735\n    124,98211992383727043035188012404.7129.9013035011…−46.533327001AL−9.66599−35.735\n    124,98311992383727043035410012490.431.2415035041…−46.412127001AL−9.66599−35.735\n    124,98411992383727043051062313217.7339.9407051007…−57.288627001AL−9.66599−35.735\n  \n  \n  \n    124,985 rows × 20 columns"
  },
  {
    "objectID": "sections/table_deslc.html#criando-colunas",
    "href": "sections/table_deslc.html#criando-colunas",
    "title": "Deslocamento",
    "section": "Criando colunas",
    "text": "Criando colunas\n\ndf_deslc['mun_diff'] = f.origem != f.destino\ndf_deslc['regsau_diff'] = f.regiao_saude != f.hosp_regiao_saude\ndf_deslc\n\n\n\n  \n  \n    bienioparto_normalhosp_cnesdestinoorigemcountdistanciatempocapitalregiao_saude…hosp_ufhosp_latitudehosp_longitudemun_diffregsau_diff\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    00027260290260290100026010…PE−8.28218−35.025300\n    10027260290260720116.81390.319111026010…PE−8.28218−35.025310\n    20094260290260140273.99771.34642026008…PE−8.28218−35.025311\n    30094260290260290200026010…PE−8.28218−35.025300\n    40094260290260345242.40650.630306026010…PE−8.28218−35.025310\n    50094260290260400181.50931.15006026006…PE−8.28218−35.025311\n    60094260290260520227.99070.378972026008…PE−8.28218−35.025311\n    700942602902605402103.1171.53569026006…PE−8.28218−35.025311\n    8009426029026064021041.41492026003…PE−8.28218−35.025311\n    90094260290260680162.86550.96025026010…PE−8.28218−35.025310\n    100094260290260720216.81390.319111026010…PE−8.28218−35.025310\n    110094260290260790219.31150.414222026010…PE−8.28218−35.025310\n    120094260290260960241.47520.5945026010…PE−8.28218−35.025310\n    130094260290261000189.25131.06403026008…PE−8.28218−35.025311\n    140094260290261060169.37761.02681026006…PE−8.28218−35.025311\n    ⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋱⋮⋮⋮⋮⋮\n    124,98011992383727043031598012275.6728.2836031032…AL−9.66599−35.73511\n    124,98111992383727043035040012599.6231.9186035092…AL−9.66599−35.73511\n    124,98211992383727043035188012404.7129.9013035011…AL−9.66599−35.73511\n    124,98311992383727043035410012490.431.2415035041…AL−9.66599−35.73511\n    124,98411992383727043051062313217.7339.9407051007…AL−9.66599−35.73511\n  \n  \n  \n    124,985 rows × 22 columns"
  },
  {
    "objectID": "sections/table_deslc.html#removendo-valores-na",
    "href": "sections/table_deslc.html#removendo-valores-na",
    "title": "Deslocamento",
    "section": "Removendo valores NA",
    "text": "Removendo valores NA\n\ndf_deslc = df_deslc[(\n  f.latitude != None) & (\n  f.longitude != None) & (\n  f.hosp_latitude != None) & (\n  f.hosp_longitude != None), :]\ndf_deslc\n\n\n\n  \n  \n    bienioparto_normalhosp_cnesdestinoorigemcountdistanciatempocapitalregiao_saude…hosp_ufhosp_latitudehosp_longitudemun_diffregsau_diff\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    00027260290260290100026010…PE−8.28218−35.025300\n    10027260290260720116.81390.319111026010…PE−8.28218−35.025310\n    20094260290260140273.99771.34642026008…PE−8.28218−35.025311\n    30094260290260290200026010…PE−8.28218−35.025300\n    40094260290260345242.40650.630306026010…PE−8.28218−35.025310\n    50094260290260400181.50931.15006026006…PE−8.28218−35.025311\n    60094260290260520227.99070.378972026008…PE−8.28218−35.025311\n    700942602902605402103.1171.53569026006…PE−8.28218−35.025311\n    8009426029026064021041.41492026003…PE−8.28218−35.025311\n    90094260290260680162.86550.96025026010…PE−8.28218−35.025310\n    100094260290260720216.81390.319111026010…PE−8.28218−35.025310\n    110094260290260790219.31150.414222026010…PE−8.28218−35.025310\n    120094260290260960241.47520.5945026010…PE−8.28218−35.025310\n    130094260290261000189.25131.06403026008…PE−8.28218−35.025311\n    140094260290261060169.37761.02681026006…PE−8.28218−35.025311\n    ⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋱⋮⋮⋮⋮⋮\n    124,98011992383727043031598012275.6728.2836031032…AL−9.66599−35.73511\n    124,98111992383727043035040012599.6231.9186035092…AL−9.66599−35.73511\n    124,98211992383727043035188012404.7129.9013035011…AL−9.66599−35.73511\n    124,98311992383727043035410012490.431.2415035041…AL−9.66599−35.73511\n    124,98411992383727043051062313217.7339.9407051007…AL−9.66599−35.73511\n  \n  \n  \n    124,985 rows × 22 columns"
  },
  {
    "objectID": "sections/table_deslc.html#ordenando",
    "href": "sections/table_deslc.html#ordenando",
    "title": "Deslocamento",
    "section": "Ordenando",
    "text": "Ordenando\n\nColunas\n\ncols_order = [\n  # procedimento:\n  'bienio',\n  'parto_normal',\n  # deslocamento:\n  'origem',\n  'destino',\n  'mun_diff',\n  'regsau_diff',\n  'distancia',\n  'tempo',\n  # localização de residência:\n  'regiao',\n  'uf',\n  # 'nome_uf',\n  # 'macroregiao_saude',\n  'regiao_saude',\n  'nome_regiao_saude',\n  # 'microregiao_saude',\n  # 'municipio',\n  'capital',\n  'socioecon',\n  'latitude',\n  'longitude',\n  # localização do hospital:\n  'hosp_latitude',\n  'hosp_longitude',\n  'hosp_cnes',\n  'hosp_regiao_saude',\n  'hosp_uf',\n  # contagem:\n  'count',\n]\n\n\ndf_deslc = df_deslc[:, cols_order]\ndf_deslc\n\n\n\n  \n  \n    bienioparto_normalorigemdestinomun_diffregsau_diffdistanciatemporegiaouf…hosp_longitudehosp_cneshosp_regiao_saudehosp_ufcount\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    0002602902602900000NDPE…−35.02532726010PE1\n    1002607202602901016.81390.319111NDPE…−35.02532726010PE1\n    2002601402602901173.99771.34642NDPE…−35.02539426010PE2\n    3002602902602900000NDPE…−35.02539426010PE2\n    4002603452602901042.40650.630306NDPE…−35.02539426010PE2\n    5002604002602901181.50931.15006NDPE…−35.02539426010PE1\n    6002605202602901127.99070.378972NDPE…−35.02539426010PE2\n    70026054026029011103.1171.53569NDPE…−35.02539426010PE2\n    800260640260290111041.41492NDPE…−35.02539426010PE2\n    9002606802602901062.86550.96025NDPE…−35.02539426010PE1\n    10002607202602901016.81390.319111NDPE…−35.02539426010PE2\n    11002607902602901019.31150.414222NDPE…−35.02539426010PE2\n    12002609602602901041.47520.5945NDPE…−35.02539426010PE2\n    13002610002602901189.25131.06403NDPE…−35.02539426010PE1\n    14002610602602901169.37761.02681NDPE…−35.02539426010PE1\n    ⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋱⋮⋮⋮⋮⋮\n    124,98011315980270430112275.6728.2836SDMG…−35.735992383727001AL1\n    124,98111350400270430112599.6231.9186SDSP…−35.735992383727001AL1\n    124,98211351880270430112404.7129.9013SDSP…−35.735992383727001AL1\n    124,98311354100270430112490.431.2415SDSP…−35.735992383727001AL1\n    124,98411510623270430113217.7339.9407COMT…−35.735992383727001AL1\n  \n  \n  \n    124,985 rows × 22 columns\n  \n\n\n\n\n\nLinhas\n\ndf_deslc = df_deslc.sort(f.bienio, f.parto_normal, f.origem, f.destino)\ndf_deslc\n\n\n\n  \n  \n    bienioparto_normalorigemdestinomun_diffregsau_diffdistanciatemporegiaouf…hosp_longitudehosp_cneshosp_regiao_saudehosp_ufcount\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    0001100011100010000NTRO…−61.9953267947711005RO2\n    10011000111001211130.772.54781NTRO…−61.9322249527911003RO2\n    20011000111001311357.5117.13067NTRO…−61.9818280861711001RO1\n    30011000111001811114.0611.87139NTRO…−61.198249653411002RO1\n    40011000111002011505.8569.16514NTRO…−63.8999400130311004RO1\n    5001100011100281048.60990.835667NTRO…−61.7714249522811005RO2\n    600110001351110112196.3530.8736NTRO…−48.977208932735151SP1\n    7001100021100020000NTRO…−63.0325249429911001RO2\n    8001100021100111195.47272.33883NTRO…−62.4788280860911003RO1\n    90011000211001211181.3643.735NTRO…−61.9322249527911003RO1\n    100011000211002011203.5823.13858NTRO…−63.8999400130311004RO2\n    11001100021101401058.29220.905083NTRO…−63.29400303911001RO1\n    1200110002353060113002.2139.7158NTRO…−46.1854208005235011SP1\n    130011000311000211610.68910.3634NTRO…−63.0325249429911001RO1\n    14001100031100030000NTRO…−60.552280852811006RO2\n    ⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋱⋮⋮⋮⋮⋮\n    124,980115300105300100000CODF…−47.92971054553001DF2\n    124,981115300105300100000CODF…−47.9297264515753001DF2\n    124,982115300105300100000CODF…−47.9297265035553001DF2\n    124,983115300105300100000CODF…−47.9297267219753001DF2\n    124,984115300105300100000CODF…−47.9297571751553001DF2\n  \n  \n  \n    124,985 rows × 22 columns"
  },
  {
    "objectID": "sections/table_deslc.html#tabela-referência",
    "href": "sections/table_deslc.html#tabela-referência",
    "title": "Deslocamento",
    "section": "Tabela referência",
    "text": "Tabela referência\n\ndf_deslc = dt.fread(output_deslc)"
  },
  {
    "objectID": "sections/table_deslc.html#brasil-sem-cnes",
    "href": "sections/table_deslc.html#brasil-sem-cnes",
    "title": "Deslocamento",
    "section": "Brasil (sem CNES)",
    "text": "Brasil (sem CNES)\n\ndf_deslc_brasil = df_deslc[:, f[:].remove(f.hosp_cnes)]\ndf_deslc_brasil = df_deslc_brasil[:, dt.sum(f.count), dt.by(df_deslc_brasil.names[:-1])]\ndf_deslc_brasil\n\n\n\n  \n  \n    bienioparto_normalorigemdestinomun_diffregsau_diffdistanciatemporegiaouf…hosp_latitudehosp_longitudehosp_regiao_saudehosp_ufcount\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    0001100011100010000NTRO…−11.9283−61.995311005RO2\n    10011000111001211130.772.54781NTRO…−10.8777−61.932211003RO2\n    20011000111001311357.5117.13067NTRO…−9.44363−61.981811001RO1\n    30011000111001811114.0611.87139NTRO…−11.672−61.19811002RO1\n    40011000111002011505.8569.16514NTRO…−8.76077−63.899911004RO1\n    5001100011100281048.60990.835667NTRO…−11.7271−61.771411005RO2\n    600110001351110112196.3530.8736NTRO…−21.1314−48.97735151SP1\n    7001100021100020000NTRO…−9.90571−63.032511001RO2\n    8001100021100111195.47272.33883NTRO…−10.4318−62.478811003RO1\n    90011000211001211181.3643.735NTRO…−10.8777−61.932211003RO1\n    100011000211002011203.5823.13858NTRO…−8.76077−63.899911004RO2\n    11001100021101401058.29220.905083NTRO…−10.2458−63.2911001RO1\n    1200110002353060113002.2139.7158NTRO…−23.5208−46.185435011SP1\n    130011000311000211610.68910.3634NTRO…−9.90571−63.032511001RO1\n    14001100031100030000NTRO…−13.4945−60.55211006RO2\n    ⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋱⋮⋮⋮⋮⋮\n    98,1971153001052177011328.3734.72139CODF…−17.5225−49.448952002GO1\n    98,198115300105219751147.53870.79175CODF…−15.9412−48.257852004GO1\n    98,1991153001052204511207.4133.05281CODF…−16.7084−49.091452002GO1\n    98,2001153001052206811255.5553.338CODF…−14.4644−46.484752007GO1\n    98,201115300105300100000CODF…−15.7795−47.929753001DF26\n  \n  \n  \n    98,202 rows × 21 columns\n  \n\n\n\n\noutput_deslc_brasil = get_path('GESTANTES', 'deslocamentos_brasil.csv.gzip') # xlsx\ndf_deslc_brasil.to_csv(output_deslc_brasil)\npd.read_csv(output_deslc_brasil).to_excel(output_deslc_brasil.replace('csv.gzip', 'xlsx'), index=False)\n# df_deslc_brasil.to_pandas().to_excel(output_deslc_brasil, index=False)"
  },
  {
    "objectID": "sections/table_deslc.html#rj",
    "href": "sections/table_deslc.html#rj",
    "title": "Deslocamento",
    "section": "RJ",
    "text": "RJ\n\nCom CNES\n\ndf_deslc_rj_cnes = df_deslc[(f.uf == 'RJ'), :]\ndf_deslc_rj_cnes\n\n\n\n  \n  \n    bienioparto_normalorigemdestinomun_diffregsau_diffdistanciatemporegiaouf…hosp_longitudehosp_cneshosp_regiao_saudehosp_ufcount\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    00033001032024511614.6137.66281SDRJ…−41.5087244820332002ES1\n    1003300103300100000SDRJ…−44.3196228086833001RJ2\n    2003300103300100000SDRJ…−44.3196228138433001RJ2\n    30033001035184011222.9883.47778SDRJ…−45.1938208151235172SP1\n    4003300203300200000SDRJ…−42.3326227309833002RJ2\n    5003300203300701043.17870.650056SDRJ…−42.0286590339433002RJ2\n    60033002033045511118.0521.55372SDRJ…−43.2003227039033005RJ1\n    70033002033045511118.0521.55372SDRJ…−43.2003227343833005RJ1\n    8003300203305201031.04310.417139SDRJ…−42.1026228047733002RJ1\n    9003300203305501022.83790.348SDRJ…−42.5099227429933002RJ1\n    10003300223306001025.16550.377083SDRJ…−43.2185229492333003RJ2\n    11003300233300230000SDRJ…−41.8846620070233002RJ1\n    12003300233300701026.3750.542528SDRJ…−42.0286590339433002RJ1\n    13003300233305201032.28080.655444SDRJ…−42.1026228047733002RJ1\n    14003300253300201054.11540.823222SDRJ…−42.3326227309833002RJ1\n    ⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋱⋮⋮⋮⋮⋮\n    3459113306303303951015.83690.40825SDRJ…−44.0022227114133004RJ1\n    3460113306303304111035.13780.636833SDRJ…−44.2952530786433004RJ1\n    34611133063033045511127.4331.93703SDRJ…−43.2003702739733005RJ1\n    34621133063033049011146.8082.26831SDRJ…−43.0634229759033006RJ1\n    3463113306303306300000SDRJ…−44.09962513533004RJ2\n  \n  \n  \n    3464 rows × 22 columns\n  \n\n\n\n\noutput_rj_cnes = get_path('GESTANTES', 'deslocamentos_rj_cnes.csv.gzip') # xlsx\ndf_deslc_rj_cnes.to_csv(output_rj_cnes)\npd.read_csv(output_rj_cnes).to_excel(output_rj_cnes.replace('csv.gzip', 'xlsx'), index=False)\n# df_deslc_rj_cnes.to_pandas().to_excel(output_rj_cnes, index=False)\n\n\n\nSem CNES\n\ndf_deslc_rj = df_deslc_rj_cnes[:, f[:].remove(f.hosp_cnes)]\ndf_deslc_rj = df_deslc_rj[:, dt.sum(f.count), dt.by(df_deslc_rj.names[:-1])]\ndf_deslc_rj\n\n\n\n  \n  \n    bienioparto_normalorigemdestinomun_diffregsau_diffdistanciatemporegiaouf…hosp_latitudehosp_longitudehosp_regiao_saudehosp_ufcount\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    00033001032024511614.6137.66281SDRJ…−20.2347−41.508732002ES1\n    1003300103300100000SDRJ…−23.0011−44.319633001RJ4\n    20033001035184011222.9883.47778SDRJ…−22.8075−45.193835172SP1\n    3003300203300200000SDRJ…−22.8697−42.332633002RJ2\n    4003300203300701043.17870.650056SDRJ…−22.8894−42.028633002RJ2\n    50033002033045511118.0521.55372SDRJ…−22.9129−43.200333005RJ2\n    6003300203305201031.04310.417139SDRJ…−22.8429−42.102633002RJ1\n    7003300203305501022.83790.348SDRJ…−22.9292−42.509933002RJ1\n    8003300223306001025.16550.377083SDRJ…−22.1165−43.218533003RJ2\n    9003300233300230000SDRJ…−22.7528−41.884633002RJ1\n    10003300233300701026.3750.542528SDRJ…−22.8894−42.028633002RJ1\n    11003300233305201032.28080.655444SDRJ…−22.8429−42.102633002RJ1\n    12003300253300201054.11540.823222SDRJ…−22.8697−42.332633002RJ1\n    13003300253300250000SDRJ…−22.9774−42.026733002RJ2\n    14003300253300701014.35760.255528SDRJ…−22.8894−42.028633002RJ2\n    ⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋱⋮⋮⋮⋮⋮\n    2481113306303303951015.83690.40825SDRJ…−22.5172−44.002233004RJ1\n    2482113306303304111035.13780.636833SDRJ…−22.4175−44.295233004RJ1\n    24831133063033045511127.4331.93703SDRJ…−22.9129−43.200333005RJ1\n    24841133063033049011146.8082.26831SDRJ…−22.8268−43.063433006RJ1\n    2485113306303306300000SDRJ…−22.5202−44.099633004RJ2\n  \n  \n  \n    2486 rows × 21 columns\n  \n\n\n\n\noutput_rj = get_path('GESTANTES', 'deslocamentos_rj.csv.gzip') # xlsx\ndf_deslc_rj.to_csv(output_rj)\npd.read_csv(output_rj).to_excel(output_rj.replace('csv.gzip', 'xlsx'), index=False)\n# df_deslc_rj.to_pandas().to_excel(output_rj, index=False)"
  },
  {
    "objectID": "sections/table_dists.html",
    "href": "sections/table_dists.html",
    "title": "Distâncias",
    "section": "",
    "text": "from utils import get_path, group_cols\nfrom datatable import dt, f"
  },
  {
    "objectID": "sections/table_dists.html#tabela-distâncias",
    "href": "sections/table_dists.html#tabela-distâncias",
    "title": "Distâncias",
    "section": "Tabela Distâncias",
    "text": "Tabela Distâncias\n\nCarregando tabela\n\npath_dist = get_path('DISTANCIAS', 'matriz_distancias.jay')\ndf_dist = dt.fread(path_dist)\ndf_dist\n\n\n\n  \n  \n    origemdestinodistanciatempo\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    011000111000100\n    1110001110002309.056.16906\n    2110001110003399.56.28906\n    311000111000481.20111.91775\n    4110001110005391.7046.13636\n    5110001110006353.4175.53989\n    6110001110007313.5926.18117\n    7110001110008326.9835.34175\n    8110001110009145.6782.346\n    9110001110010649.54513.405\n    10110001110011214.1253.83481\n    11110001110012130.772.54781\n    12110001110013357.5117.13067\n    1311000111001460.21031.02275\n    14110001110015172.9263.18425\n    ⋮⋮⋮⋮⋮\n    31,024,895530010522200161.7292.356\n    31,024,896530010522205382.7095.47956\n    31,024,897530010522220161.6032.24894\n    31,024,898530010522230190.0013.21608\n    31,024,89953001053001000\n  \n  \n  \n    31,024,900 rows × 4 columns"
  },
  {
    "objectID": "sections/table_dists.html#tabela-procedimentos",
    "href": "sections/table_dists.html#tabela-procedimentos",
    "title": "Distâncias",
    "section": "Tabela Procedimentos",
    "text": "Tabela Procedimentos\n\nColunas da tabela\n\ncols_proc = {\n  'cod_municipio': 'origem',\n  'hosp_cod_municipio': 'destino',\n  ...: None\n}\n\n\n\nCarregando tabela\n\npath_proc = get_path('GESTANTES', 'procedimentos.csv.gzip')\ndf_proc = dt.fread(path_proc, columns=cols_proc)\ndf_proc\n\n\n\n  \n  \n    destinoorigem\n    ▪▪▪▪▪▪▪▪\n  \n  \n    0355030355030\n    1355030355030\n    2130260130260\n    3530010530010\n    4355030355030\n    5292740292740\n    6310620310620\n    7280030280030\n    8330455330455\n    9351880351880\n    10150420150420\n    11160030160030\n    12330455330455\n    13140010140010\n    14130260130260\n    ⋮⋮⋮\n    461,847270430355640\n    461,848270430420910\n    461,849270430510285\n    461,850270430510622\n    461,851270430510792\n  \n  \n  \n    461,852 rows × 2 columns\n  \n\n\n\n\n\nTabela agrupada\n\ndf_proc = group_cols(df_proc, list(cols_proc.values())[:-1])\ndf_proc = df_proc.sort(-f.count)\ndf_proc\n\n\n\n  \n  \n    origemdestinocount\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    0355030355030726\n    1351880355030378\n    2330455330455368\n    3352310355030290\n    4330350330455277\n    5330170330455276\n    6530010530010251\n    7351570355030250\n    8230440230440246\n    9330045330455240\n    10330510330455239\n    11353440355030237\n    12230370230440224\n    13230765230440207\n    14230960230440204\n    ⋮⋮⋮⋮\n    71,8335300105213081\n    71,8345300105217701\n    71,8355300105220001\n    71,8365300105220201\n    71,8375300105220451\n  \n  \n  \n    71,838 rows × 3 columns"
  },
  {
    "objectID": "sections/table_muns.html",
    "href": "sections/table_muns.html",
    "title": "Municípios",
    "section": "",
    "text": "from utils import get_path, group_cols\nfrom datatable import dt, f, by, as_type"
  },
  {
    "objectID": "sections/table_muns.html#localidades",
    "href": "sections/table_muns.html#localidades",
    "title": "Municípios",
    "section": "Localidades",
    "text": "Localidades\n\nColunas da tabela\n\npath_loc = get_path('HEALTH', 'localidades.csv.gzip')\ndf_loc = dt.fread(path_loc)\ndf_loc = df_loc[:, f[:].remove(f.nome_regiao_saude)]\ndf_loc\n\n\n\n  \n  \n    cod_municipionome_municipiocapitalcod_ufufnome_ufregiaolatitudelongitude\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    0520005Abadia de Goiás052GOGoiásCentro-Oeste−16.7573−49.4412\n    1310010Abadia dos Dourados031MGMinas GeraisSudeste−18.4831−47.3916\n    2520010Abadiânia052GOGoiásCentro-Oeste−16.197−48.7057\n    3310020Abaeté031MGMinas GeraisSudeste−19.1551−45.4444\n    4150010Abaetetuba015PAParáNorte−1.72183−48.8788\n    5230010Abaiara023CECearáNordeste−7.34588−39.0416\n    6290010Abaíra029BABahiaNordeste−13.2488−41.6619\n    7290020Abaré029BABahiaNordeste−8.72073−39.1162\n    8410010Abatiá041PRParanáSul−23.3049−50.3133\n    9420005Abdon Batista042SCSanta CatarinaSul−27.6126−51.0233\n    10150013Abel Figueiredo015PAParáNorte−4.95333−48.3933\n    11420010Abelardo Luz042SCSanta CatarinaSul−26.5716−52.3229\n    12310030Abre Campo031MGMinas GeraisSudeste−20.2996−42.4743\n    13260005Abreu e Lima026PEPernambucoNordeste−7.90072−34.8984\n    14170025Abreulândia017TOTocantinsNorte−9.62101−49.1518\n    ⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮\n    5565293360Xique-Xique029BABahiaNordeste−10.823−42.7245\n    5566251740Zabelê025PBParaíbaNordeste−8.07901−37.1057\n    5567355715Zacarias035SPSão PauloSudeste−21.0506−50.0552\n    5568211400Zé Doca021MAMaranhãoNordeste−3.27014−45.6553\n    5569421985Zortéa042SCSanta CatarinaSul−27.4521−51.552\n  \n  \n  \n    5570 rows × 9 columns"
  },
  {
    "objectID": "sections/table_muns.html#indicadores",
    "href": "sections/table_muns.html#indicadores",
    "title": "Municípios",
    "section": "Indicadores",
    "text": "Indicadores\n\nColunas da tabela\n\ncols_indc = {\n  'CÓDIGO': 'codigo',\n  'Tipo Localidade': 'tipo',\n  'CIR': 'nome_regiao_saude',\n  'Grupos de Regiões de Saúde segundo Condições Socioeconômicas e de Saúde - 2016': 'socioecon',\n  ...: None\n}\n\n\npath_indc = path_indc = get_path('INDICADORES', 'indicadores.csv.gzip')\ndf_indc = dt.fread(path_indc, columns=cols_indc)\ndf_indc = df_indc.to_pandas()\ndf_indc\n\n\n\n\n\n  \n    \n      \n      codigo\n      tipo\n      nome_regiao_saude\n      socioecon\n    \n  \n  \n    \n      0\n      15.001\n      REGSAU\n      Araguaia\n      1\n    \n    \n      1\n      15.002\n      REGSAU\n      Baixo Amazonas\n      1\n    \n    \n      2\n      15.003\n      REGSAU\n      Carajás\n      2\n    \n    \n      3\n      15.004\n      REGSAU\n      Lago de Tucuruí\n      1\n    \n    \n      4\n      15.013\n      REGSAU\n      Marajó I\n      1\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      6003\n      171.780\n      MUNIC\n      Sudeste\n      1\n    \n    \n      6004\n      171.800\n      MUNIC\n      Sudeste\n      1\n    \n    \n      6005\n      171.865\n      MUNIC\n      Sudeste\n      1\n    \n    \n      6006\n      172.090\n      MUNIC\n      Sudeste\n      1\n    \n    \n      6007\n      172.093\n      MUNIC\n      Sudeste\n      1\n    \n  \n\n6008 rows × 4 columns\n\n\n\n\n\nMunicípios\n\ndf_munic = df_indc.loc[df_indc['tipo'] == 'MUNIC'].copy()\ndf_munic.drop(columns=['tipo'], inplace=True)\ndf_munic['codigo'] = df_munic['codigo'].apply(lambda x: (str(x).replace('.', '') + '00')[:6])\ndf_munic['prefix'] = df_munic['codigo'].apply(lambda x: str(x)[:2])\ndf_munic = df_munic.rename(columns={'codigo': 'cod_municipio'})\ndf_munic\n\n\n\n\n\n  \n    \n      \n      cod_municipio\n      nome_regiao_saude\n      socioecon\n      prefix\n    \n  \n  \n    \n      13\n      310600\n      João Monlevade\n      3\n      31\n    \n    \n      14\n      313620\n      João Monlevade\n      3\n      31\n    \n    \n      15\n      314470\n      João Monlevade\n      3\n      31\n    \n    \n      16\n      315570\n      João Monlevade\n      3\n      31\n    \n    \n      17\n      316100\n      João Monlevade\n      3\n      31\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      6003\n      171780\n      Sudeste\n      1\n      17\n    \n    \n      6004\n      171800\n      Sudeste\n      1\n      17\n    \n    \n      6005\n      171865\n      Sudeste\n      1\n      17\n    \n    \n      6006\n      172090\n      Sudeste\n      1\n      17\n    \n    \n      6007\n      172093\n      Sudeste\n      1\n      17\n    \n  \n\n5570 rows × 4 columns\n\n\n\n\n\nRegiões de Saúde\n\ndf_regsau = df_indc[df_indc['tipo'] == 'REGSAU'].copy()\ndf_regsau.drop(columns=['tipo', 'socioecon'], inplace=True)\ndf_regsau['codigo'] = df_regsau['codigo'].apply(lambda x: (str(x).replace('.', '') + '0')[:5])\ndf_regsau['prefix'] = df_regsau['codigo'].apply(lambda x: str(x)[:2])\ndf_regsau = df_regsau.rename(columns={'codigo': 'cod_regiao_saude'})\ndf_regsau\n\n\n\n\n\n  \n    \n      \n      cod_regiao_saude\n      nome_regiao_saude\n      prefix\n    \n  \n  \n    \n      0\n      15001\n      Araguaia\n      15\n    \n    \n      1\n      15002\n      Baixo Amazonas\n      15\n    \n    \n      2\n      15003\n      Carajás\n      15\n    \n    \n      3\n      15004\n      Lago de Tucuruí\n      15\n    \n    \n      4\n      15013\n      Marajó I\n      15\n    \n    \n      ...\n      ...\n      ...\n      ...\n    \n    \n      5431\n      17001\n      Médio Norte Araguaia\n      17\n    \n    \n      5432\n      28005\n      Nossa Senhora da Glória\n      28\n    \n    \n      5433\n      28006\n      Nossa Senhora do Socorro\n      28\n    \n    \n      5434\n      28007\n      Propriá\n      28\n    \n    \n      5435\n      17003\n      Sudeste\n      17\n    \n  \n\n438 rows × 3 columns\n\n\n\n\n\nMerge\n\ndf_indc = df_munic.merge(df_regsau, how='left', left_on=['prefix', 'nome_regiao_saude'], right_on=['prefix', 'nome_regiao_saude'])\ndf_indc = dt.Frame(df_indc)\ndf_indc[:, 'cod_municipio'] = df_indc[:, dt.as_type(f.cod_municipio, int)]\ndf_indc\n\n\n\n  \n  \n    cod_municipionome_regiao_saudesocioeconprefixcod_regiao_saude\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    0310600João Monlevade33131035\n    1313620João Monlevade33131035\n    2314470João Monlevade33131035\n    3315570João Monlevade33131035\n    4316100João Monlevade33131035\n    5310855João Pinheiro23131036\n    6313630João Pinheiro23131036\n    7313753João Pinheiro23131036\n    8310280Juiz de Fora Lima Duarte Bom Jardim Min53131037\n    9310360Juiz de Fora Lima Duarte Bom Jardim Min53131037\n    10310610Juiz de Fora Lima Duarte Bom Jardim Min53131037\n    11310680Juiz de Fora Lima Duarte Bom Jardim Min53131037\n    12310720Juiz de Fora Lima Duarte Bom Jardim Min53131037\n    13310750Juiz de Fora Lima Duarte Bom Jardim Min53131037\n    14311590Juiz de Fora Lima Duarte Bom Jardim Min53131037\n    ⋮⋮⋮⋮⋮⋮\n    5565171780Sudeste11717003\n    5566171800Sudeste11717003\n    5567171865Sudeste11717003\n    5568172090Sudeste11717003\n    5569172093Sudeste11717003\n  \n  \n  \n    5570 rows × 5 columns"
  },
  {
    "objectID": "sections/table_muns.html#juntando-com-outras",
    "href": "sections/table_muns.html#juntando-com-outras",
    "title": "Municípios",
    "section": "Juntando com outras",
    "text": "Juntando com outras\n\nJuntando com Indicadores\n\ndf_indc.key = 'cod_municipio'\ndf_muns = df_loc[:, :, dt.join(df_indc)]\ndf_muns\n\n\n\n  \n  \n    cod_municipionome_municipiocapitalcod_ufufnome_ufregiaolatitudelongitudenome_regiao_saudesocioeconprefixcod_regiao_saude\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    0520005Abadia de Goiás052GOGoiásCentro-Oeste−16.7573−49.4412Central55252001\n    1310010Abadia dos Dourados031MGMinas GeraisSudeste−18.4831−47.3916Patrocínio Monte Carmelo23131052\n    2520010Abadiânia052GOGoiásCentro-Oeste−16.197−48.7057Pirineus35252011\n    3310020Abaeté031MGMinas GeraisSudeste−19.1551−45.4444Sete Lagoas33131067\n    4150010Abaetetuba015PAParáNorte−1.72183−48.8788Tocantins11515011\n    5230010Abaiara023CECearáNordeste−7.34588−39.041619ª Região Brejo Santo12323019\n    6290010Abaíra029BABahiaNordeste−13.2488−41.6619Seabra12929023\n    7290020Abaré029BABahiaNordeste−8.72073−39.1162Paulo Afonso12929017\n    8410010Abatiá041PRParanáSul−23.3049−50.313318ª RS Cornélio Procópio34141018\n    9420005Abdon Batista042SCSanta CatarinaSul−27.6126−51.0233Meio Oeste34242008\n    10150013Abel Figueiredo015PAParáNorte−4.95333−48.3933Carajás21515003\n    11420010Abelardo Luz042SCSanta CatarinaSul−26.5716−52.3229Xanxerê34242003\n    12310030Abre Campo031MGMinas GeraisSudeste−20.2996−42.4743Manhuaçu13131041\n    13260005Abreu e Lima026PEPernambucoNordeste−7.90072−34.8984Recife52626010\n    14170025Abreulândia017TOTocantinsNorte−9.62101−49.1518Cantão21717007\n    ⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮\n    5565293360Xique-Xique029BABahiaNordeste−10.823−42.7245Irecê12929010\n    5566251740Zabelê025PBParaíbaNordeste−8.07901−37.10575ª Região12525005\n    5567355715Zacarias035SPSão PauloSudeste−21.0506−50.0552José Bonifácio33535156\n    5568211400Zé Doca021MAMaranhãoNordeste−3.27014−45.6553Zé Doca12121019\n    5569421985Zortéa042SCSanta CatarinaSul−27.4521−51.552Meio Oeste34242008\n  \n  \n  \n    5570 rows × 13 columns"
  },
  {
    "objectID": "sections/table_muns.html#ajustando-colunas",
    "href": "sections/table_muns.html#ajustando-colunas",
    "title": "Municípios",
    "section": "Ajustando colunas",
    "text": "Ajustando colunas\n\ncols_order = [\n  'cod_municipio',\n  'nome_municipio',\n  'capital',\n  'cod_regiao_saude',\n  'nome_regiao_saude',\n  'cod_uf',\n  'uf',\n  'nome_uf',\n  'regiao',\n  'socioecon',\n  'latitude',\n  'longitude',\n]\n\n\ndf_muns = df_muns[:, cols_order]\ndf_muns\n\n\n\n  \n  \n    cod_municipionome_municipiocapitalcod_regiao_saudenome_regiao_saudecod_ufufnome_ufregiaosocioeconlatitudelongitude\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    0520005Abadia de Goiás052001Central52GOGoiásCentro-Oeste5−16.7573−49.4412\n    1310010Abadia dos Dourados031052Patrocínio Monte Carmelo31MGMinas GeraisSudeste2−18.4831−47.3916\n    2520010Abadiânia052011Pirineus52GOGoiásCentro-Oeste3−16.197−48.7057\n    3310020Abaeté031067Sete Lagoas31MGMinas GeraisSudeste3−19.1551−45.4444\n    4150010Abaetetuba015011Tocantins15PAParáNorte1−1.72183−48.8788\n    5230010Abaiara02301919ª Região Brejo Santo23CECearáNordeste1−7.34588−39.0416\n    6290010Abaíra029023Seabra29BABahiaNordeste1−13.2488−41.6619\n    7290020Abaré029017Paulo Afonso29BABahiaNordeste1−8.72073−39.1162\n    8410010Abatiá04101818ª RS Cornélio Procópio41PRParanáSul3−23.3049−50.3133\n    9420005Abdon Batista042008Meio Oeste42SCSanta CatarinaSul3−27.6126−51.0233\n    10150013Abel Figueiredo015003Carajás15PAParáNorte2−4.95333−48.3933\n    11420010Abelardo Luz042003Xanxerê42SCSanta CatarinaSul3−26.5716−52.3229\n    12310030Abre Campo031041Manhuaçu31MGMinas GeraisSudeste1−20.2996−42.4743\n    13260005Abreu e Lima026010Recife26PEPernambucoNordeste5−7.90072−34.8984\n    14170025Abreulândia017007Cantão17TOTocantinsNorte2−9.62101−49.1518\n    ⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮⋮\n    5565293360Xique-Xique029010Irecê29BABahiaNordeste1−10.823−42.7245\n    5566251740Zabelê0250055ª Região25PBParaíbaNordeste1−8.07901−37.1057\n    5567355715Zacarias035156José Bonifácio35SPSão PauloSudeste3−21.0506−50.0552\n    5568211400Zé Doca021019Zé Doca21MAMaranhãoNordeste1−3.27014−45.6553\n    5569421985Zortéa042008Meio Oeste42SCSanta CatarinaSul3−27.4521−51.552\n  \n  \n  \n    5570 rows × 12 columns"
  },
  {
    "objectID": "sections/table_procs.html",
    "href": "sections/table_procs.html",
    "title": "Procedimentos",
    "section": "",
    "text": "from utils import get_path, group_cols\nfrom datatable import dt, f"
  },
  {
    "objectID": "sections/table_procs.html#sih",
    "href": "sections/table_procs.html#sih",
    "title": "Procedimentos",
    "section": "SIH",
    "text": "SIH\n\nColunas da tabela\n\ncols_proc = [\n  'ano',\n  'parto_normal',\n  'cnes',\n  'hosp_cod_municipio',\n  'cod_municipio',\n]\n\n\npath_sih = get_path('SIH', 'SIH.jay')\ndf_proc = dt.fread(path_sih)\ndf_proc = df_proc[:, cols_proc]\ndf_proc\n\n\n\n  \n  \n    anoparto_normalcneshosp_cod_municipiocod_municipio\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    020103100100392001020120005120005\n    120103100100392000733120040120040\n    220103100100392000733120040120040\n    320103100100392000733120040120040\n    420103100100392000733120040120040\n    520103100100392000733120040120040\n    620103100100392000733120040120040\n    720103100100392001020120005120005\n    820103100100392000733120040120040\n    920103100100392000733120040120040\n    1020103100100392001020120005120005\n    1120103100100392000733120040120038\n    1220103100100392000733120040120040\n    1320103100100392000733120040120001\n    1420103100100392000733120040120040\n    ⋮⋮⋮⋮⋮⋮\n    17,106,39620194110100342765640170930171840\n    17,106,39720194110100342765640170930171670\n    17,106,39820194110100342765640170930171670\n    17,106,39920194110100342765640170930170930\n    17,106,40020194110100342755149171610171250\n  \n  \n  \n    17,106,401 rows × 5 columns\n  \n\n\n\n\n\nTabela agrupada\n\ndf_proc = group_cols(df_proc, cols_proc)\ndf_proc = df_proc.sort(f.ano, -f.count)\ndf_proc\n\n\n\n  \n  \n    anoparto_normalcneshosp_cod_municipiocod_municipiocount\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    0201031001003920777013550303550304358\n    1201031001003920773883550303550304207\n    2201031001003931517941302601302604145\n    32010310010039104805300105300104099\n    4201031001003920791863550303550304059\n    5201031001003939563692927402927403935\n    62010310010039267943106203106203797\n    7201031001003922322800302800303533\n    8201031001003922706093304553304553386\n    9201031001003920400693518803518803213\n    10201031001003957034251504201504203203\n    11201031001003920200681600301600303194\n    12201031001003922802483304553304553095\n    13201031001003925661681400101400103063\n    14201031001003930041041302601302602952\n    ⋮⋮⋮⋮⋮⋮⋮\n    461,847201941101003499238372704303556401\n    461,848201941101003499238372704304209101\n    461,849201941101003499238372704305102851\n    461,850201941101003499238372704305106221\n    461,851201941101003499238372704305107921\n  \n  \n  \n    461,852 rows × 6 columns\n  \n\n\n\n\n\nAtualizando variável parto normal\n\ndf_proc[:, dt.update(parto_normal = f.parto_normal == 310010039)] # {310010039: 'normal', 411010034: 'cesariano'}\ndf_proc\n\n\n\n  \n  \n    anoparto_normalcneshosp_cod_municipiocod_municipiocount\n    ▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪▪\n  \n  \n    02010120777013550303550304358\n    12010120773883550303550304207\n    22010131517941302601302604145\n    320101104805300105300104099\n    42010120791863550303550304059\n    52010139563692927402927403935\n    620101267943106203106203797\n    72010122322800302800303533\n    82010122706093304553304553386\n    92010120400693518803518803213\n    102010157034251504201504203203\n    112010120200681600301600303194\n    122010122802483304553304553095\n    132010125661681400101400103063\n    142010130041041302601302602952\n    ⋮⋮⋮⋮⋮⋮⋮\n    461,8472019099238372704303556401\n    461,8482019099238372704304209101\n    461,8492019099238372704305102851\n    461,8502019099238372704305106221\n    461,8512019099238372704305107921\n  \n  \n  \n    461,852 rows × 6 columns"
  }
]